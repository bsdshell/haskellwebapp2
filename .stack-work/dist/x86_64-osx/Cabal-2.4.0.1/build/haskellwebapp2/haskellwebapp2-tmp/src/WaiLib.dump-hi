
==================== FINAL INTERFACE ====================
2019-07-23 22:15:25.096991 UTC

interface main:WaiLib [family instance module] 8065
  interface hash: 9f0076c4929fbf3c09c9e65aad3029dd
  ABI hash: d9727950f01c59115fc32ab6d88d8671
  export-list hash: 8b0bfb2e67c9a3da4e2e0bbe7596972d
  orphan hash: 6f363a5d2f3c2a0d26bf7a78987064e9
  flag hash: fad253e6afaed579962e2029590c9053
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: True
  where
exports:
  WaiLib.anyRoute
  WaiLib.app
  WaiLib.bracketChar
  WaiLib.broadcast
  WaiLib.changeSymbol
  WaiLib.cmdLog
  WaiLib.connectClient
  WaiLib.cssHead
  WaiLib.cssStrong
  WaiLib.currCmdFile
  WaiLib.disconnectClient
  WaiLib.doc
  WaiLib.docRoot
  WaiLib.foldListList
  WaiLib.foldListListTxt
  WaiLib.genePDF
  WaiLib.geneRectMat
  WaiLib.groupCountFilter
  WaiLib.hiddenForm
  WaiLib.href
  WaiLib.htmlBody
  WaiLib.htmlForm
  WaiLib.htmlGreater
  WaiLib.htmlLess
  WaiLib.htmlPre
  WaiLib.httpApp
  WaiLib.img
  WaiLib.insertAll
  WaiLib.insertDatabase
  WaiLib.insertinfo
  WaiLib.javaClassName
  WaiLib.javaCmdKeyWords
  WaiLib.javaFunClass
  WaiLib.javaKeyWords
  WaiLib.keyDash
  WaiLib.keyName
  WaiLib.keySymbol1
  WaiLib.keyURL
  WaiLib.keyWord
  WaiLib.keyWord1
  WaiLib.listToByteStr
  WaiLib.listen
  WaiLib.logCurrCmd
  WaiLib.mapClear
  WaiLib.matrixReply
  WaiLib.mysqlKeyWords
  WaiLib.nextId
  WaiLib.notFound
  WaiLib.notFoundStr
  WaiLib.optionHtml
  WaiLib.pdfFile
  WaiLib.pdfPath
  WaiLib.pdfname
  WaiLib.plainIndex
  WaiLib.queryLibHaskell
  WaiLib.queryLibJava
  WaiLib.readCmd
  WaiLib.readCurrCmd
  WaiLib.receiveCode
  WaiLib.receiveCode2
  WaiLib.replyCssButton
  WaiLib.replyEditor
  WaiLib.replyHtml
  WaiLib.replyJS
  WaiLib.responseCmd
  WaiLib.responseEditor
  WaiLib.responseHaskellHtml
  WaiLib.responseHelp
  WaiLib.responseHtml
  WaiLib.responseJavaHtml
  WaiLib.responseJavascript
  WaiLib.responseNothing
  WaiLib.responseNothingBS
  WaiLib.responseSnippet
  WaiLib.responseSnippetTxt
  WaiLib.responseXCmd
  WaiLib.runSh
  WaiLib.sbChar
  WaiLib.searchMap
  WaiLib.searchUI
  WaiLib.snippetMap
  WaiLib.snippetPath
  WaiLib.spChar
  WaiLib.spanBlock
  WaiLib.spanBlockX
  WaiLib.spanBlockXX
  WaiLib.specialName
  WaiLib.styleChar
  WaiLib.transform
  WaiLib.trimBothLBS
  WaiLib.updateMap
  WaiLib.updir
  WaiLib.upload
  WaiLib.uploadPage
  WaiLib.wapp
  WaiLib.withoutClient
  WaiLib.wordcountReply
  WaiLib.wsApp
  WaiLib.âˆ˜
  WaiLib.Block{WaiLib.Block bblock}
  WaiLib.Client
  WaiLib.ClientId
  WaiLib.CompileCode{WaiLib.CompileCode code compiler option}
  WaiLib.GeneMatrix{WaiLib.GeneMatrix cmd ncol nrow}
  WaiLib.HMap
  WaiLib.MBlock{WaiLib.MBlock mblock}
  WaiLib.MatInt{WaiLib.MatInt matrix name}
  WaiLib.Person{WaiLib.Person personAge personId personName}
  WaiLib.ReplyCode{WaiLib.ReplyCode rcmd rerror stdout}
  WaiLib.SearchType{WaiLib.CmdT WaiLib.HaskellT WaiLib.JavaT WaiLib.SnippetT}
  WaiLib.State
  WaiLib.UserInput{WaiLib.UserInput cmdId xcmd}
module dependencies: AronHtml AronModule PortableLines
package dependencies: Only-0.1 SHA-1.6.4.4 aeson-1.4.2.0
                      ansi-terminal-0.8.2 ansi-wl-pprint-0.6.8.2 appar-0.1.8
                      array-0.5.3.0 asn1-encoding-0.9.5 asn1-parse-0.9.4 asn1-types-0.3.3
                      async-2.2.2 attoparsec-0.13.2.2 auto-update-0.1.5 base-4.12.0.0
                      base-compat-0.10.5 base-orphans-0.8.1 base-prelude-1.3
                      base64-bytestring-1.0.0.2 basement-0.0.10 bifunctors-5.5.4
                      binary-0.8.6.0 blaze-builder-0.4.1.0 blaze-textual-0.2.1.0
                      bsb-http-chunked-0.0.0.4 byteorder-1.0.4 bytestring-0.10.8.2
                      case-insensitive-1.2.0.11 cereal-0.5.8.1 clock-0.7.2 colour-2.3.5
                      comonad-5.0.5 conduit-1.3.1.1 connection-0.2.8 containers-0.6.0.1
                      cookie-0.4.4 cryptonite-0.25 data-default-class-0.1.2.0
                      deepseq-1.4.4.0 direct-sqlite-2.3.24 directory-1.3.3.0
                      distributive-0.6 dlist-0.8.0.6 entropy-0.4.1.4 exceptions-0.10.2
                      filepath-1.4.2.1 foldl-1.4.5 ghc-boot-th-8.6.5 ghc-prim-0.5.3
                      hashable-1.2.7.0 hostname-1.0 hourglass-0.2.12 http-accept-0.2
                      http-client-0.5.14 http-client-tls-0.3.5.3 http-conduit-2.3.7.1
                      http-date-0.0.8 http-types-0.12.3 http2-1.6.5 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.3 iproute-1.7.7 managed-1.0.6 memory-0.14.18
                      mtl-2.2.2 mwc-random-0.14.0.0 network-2.8.0.1
                      network-byte-order-0.0.0.0 network-uri-2.6.1.0 optional-args-1.0.2
                      optparse-applicative-0.14.3.0 parsec-3.1.13.0 pem-0.2.4
                      pretty-1.1.3.6 pretty-simple-2.2.0.1 primitive-0.6.4.0
                      process-1.6.5.0 profunctors-5.3 psqueues-0.2.7.2 random-1.1
                      raw-strings-qq-1.1 regex-1.0.2.0 regex-base-0.93.2
                      regex-compat-0.95.1 regex-pcre-builtin-0.94.4.8.8.35
                      regex-posix-0.95.2 regex-tdfa-1.2.3.2 regex-tdfa-text-1.0.0.3
                      resourcet-1.2.2 safe-0.3.17 scientific-0.3.6.2 semigroupoids-5.3.2
                      simple-sendfile-0.2.28 socks-0.5.6 split-0.2.3.3
                      sqlite-simple-0.4.16.0 stm-2.5.0.0 streaming-commons-0.2.1.1
                      system-fileio-0.3.16.4 system-filepath-0.4.14 tagged-0.8.6
                      template-haskell-2.14.0.0 temporary-1.3 text-1.2.3.1 time-1.8.0.2
                      time-locale-compat-0.1.1.5 time-manager-0.0.0 tls-1.4.1
                      transformers-0.5.6.2 turtle-1.5.14 unix-2.7.2.2 unix-compat-0.5.1
                      unliftio-core-0.1.2.0 unordered-containers-0.2.10.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vault-0.3.1.2 vector-0.12.0.3
                      vector-builder-0.3.7.2 wai-3.2.2.1 wai-extra-3.0.26.1 wai-util-0.8
                      wai-websockets-3.0.1.2 warp-3.2.28 websockets-0.12.5.3 word8-0.1.3
                      x509-1.7.5 x509-store-1.6.7 x509-system-1.6.6
                      x509-validation-1.6.11 zlib-0.6.2
orphans: regex-1.0.2.0:Text.RE.TDFA.String
         regex-tdfa-text-1.0.0.3:Text.Regex.TDFA.Text
         regex-tdfa-text-1.0.0.3:Text.Regex.TDFA.Text.Lazy
         regex-pcre-builtin-0.94.4.8.8.35:Text.Regex.PCRE.String
         regex-pcre-builtin-0.94.4.8.8.35:Text.Regex.PCRE.Sequence
         regex-pcre-builtin-0.94.4.8.8.35:Text.Regex.PCRE.ByteString.Lazy
         regex-pcre-builtin-0.94.4.8.8.35:Text.Regex.PCRE.ByteString
         main:AronModule http-client-0.5.14:Network.HTTP.Client.Request
         basement-0.0.10:Basement.UArray.Base basement-0.0.10:Basement.Block
         regex-tdfa-1.2.3.2:Text.Regex.TDFA.ByteString
         regex-tdfa-1.2.3.2:Text.Regex.TDFA.ByteString.Lazy
         regex-tdfa-1.2.3.2:Text.Regex.TDFA.Sequence
         regex-tdfa-1.2.3.2:Text.Regex.TDFA.String
         regex-posix-0.95.2:Text.Regex.Posix.String
         regex-posix-0.95.2:Text.Regex.Posix.Sequence
         regex-posix-0.95.2:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2:Text.Regex.Posix.ByteString
         regex-base-0.93.2:Text.Regex.Base.Context colour-2.3.5:Data.Colour
         system-filepath-0.4.14:Filesystem.Path.CurrentOS
         system-filepath-0.4.14:Filesystem.Path
         stm-2.5.0.0:Control.Monad.STM network-2.8.0.1:Network.Socket
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.3:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         vector-0.12.0.3:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: Only-0.1:Data.Tuple.Only
                         aeson-1.4.2.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         basement-0.0.10:Basement.Block.Base
                         basement-0.0.10:Basement.Bounded basement-0.0.10:Basement.Monad
                         basement-0.0.10:Basement.MutableBuilder
                         basement-0.0.10:Basement.Nat basement-0.0.10:Basement.NonEmpty
                         basement-0.0.10:Basement.Numerical.Subtractive
                         basement-0.0.10:Basement.PrimType basement-0.0.10:Basement.String
                         basement-0.0.10:Basement.String.Encoding.ASCII7
                         basement-0.0.10:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.10:Basement.String.Encoding.UTF16
                         basement-0.0.10:Basement.String.Encoding.UTF32
                         basement-0.0.10:Basement.Types.OffsetSize
                         basement-0.0.10:Basement.UArray.Base
                         basement-0.0.10:Basement.UTF8.Base
                         bifunctors-5.5.4:Data.Bifunctor.Biff
                         bifunctors-5.5.4:Data.Bifunctor.Clown
                         bifunctors-5.5.4:Data.Bifunctor.Flip
                         bifunctors-5.5.4:Data.Bifunctor.Join
                         bifunctors-5.5.4:Data.Bifunctor.Joker
                         bifunctors-5.5.4:Data.Bifunctor.Product
                         bifunctors-5.5.4:Data.Bifunctor.Sum
                         bifunctors-5.5.4:Data.Bifunctor.Tannen
                         bifunctors-5.5.4:Data.Bifunctor.Wrapped clock-0.7.2:System.Clock
                         conduit-1.3.1.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         cryptonite-0.25:Crypto.ECC cryptonite-0.25:Crypto.Error.Types
                         cryptonite-0.25:Crypto.Hash.Blake2
                         cryptonite-0.25:Crypto.Hash.Blake2b
                         cryptonite-0.25:Crypto.Hash.Blake2bp
                         cryptonite-0.25:Crypto.Hash.Blake2s
                         cryptonite-0.25:Crypto.Hash.Blake2sp
                         cryptonite-0.25:Crypto.Hash.Keccak cryptonite-0.25:Crypto.Hash.MD2
                         cryptonite-0.25:Crypto.Hash.MD4 cryptonite-0.25:Crypto.Hash.MD5
                         cryptonite-0.25:Crypto.Hash.RIPEMD160
                         cryptonite-0.25:Crypto.Hash.SHA1 cryptonite-0.25:Crypto.Hash.SHA224
                         cryptonite-0.25:Crypto.Hash.SHA256 cryptonite-0.25:Crypto.Hash.SHA3
                         cryptonite-0.25:Crypto.Hash.SHA384
                         cryptonite-0.25:Crypto.Hash.SHA512
                         cryptonite-0.25:Crypto.Hash.SHA512t
                         cryptonite-0.25:Crypto.Hash.SHAKE
                         cryptonite-0.25:Crypto.Hash.Skein256
                         cryptonite-0.25:Crypto.Hash.Skein512
                         cryptonite-0.25:Crypto.Hash.Tiger
                         cryptonite-0.25:Crypto.Hash.Whirlpool dlist-0.8.0.6:Data.DList
                         ghc-boot-th-8.6.5:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.5:GHC.LanguageExtensions.Type
                         http-client-0.5.14:Network.HTTP.Client iproute-1.7.7:Data.IP.Addr
                         iproute-1.7.7:Data.IP.Range main:AronModule
                         mwc-random-0.14.0.0:System.Random.MWC
                         network-uri-2.6.1.0:Network.URI
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         pretty-simple-2.2.0.1:Text.Pretty.Simple.Internal.Color
                         pretty-simple-2.2.0.1:Text.Pretty.Simple.Internal.Expr
                         pretty-simple-2.2.0.1:Text.Pretty.Simple.Internal.ExprToOutput
                         pretty-simple-2.2.0.1:Text.Pretty.Simple.Internal.Output
                         pretty-simple-2.2.0.1:Text.Pretty.Simple.Internal.OutputPrinter
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         regex-1.0.2.0:Text.RE.ZeInternals.NamedCaptures
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unordered-containers-0.2.10.0:Data.HashMap.Base
                         unordered-containers-0.2.10.0:Data.HashSet.Base
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.3:Data.Vector vector-0.12.0.3:Data.Vector.Primitive
                         vector-0.12.0.3:Data.Vector.Storable
                         vector-0.12.0.3:Data.Vector.Unboxed
                         vector-0.12.0.3:Data.Vector.Unboxed.Base
                         zlib-0.6.2:Codec.Compression.Zlib.Stream
import  -/  Only-0.1:Data.Tuple.Only 51148e17d39047f2bacac510b0ae3e46
import  -/  aeson-1.4.2.0:Data.Aeson b5cdb0ed16d68edde67e300a00d12cf4
import  -/  aeson-1.4.2.0:Data.Aeson.Types.FromJSON 57c63f1641281e1acdbe98b10194ef14
import  -/  aeson-1.4.2.0:Data.Aeson.Types.Internal 8f987664a418a62e4e81eaf999873681
import  -/  aeson-1.4.2.0:Data.Aeson.Types.ToJSON 40699ce0d224763204422cbfb22434e8
import  -/  base-4.12.0.0:Control.Concurrent 945d3c1c41ed03e6117e3861cad65d9f
import  -/  base-4.12.0.0:Control.Concurrent.MVar 10553c3587f9c4e39c77f9823fa2cb4f
import  -/  base-4.12.0.0:Control.Exception 041da5b6267cf6b639ff5716d5b299a9
import  -/  base-4.12.0.0:Control.Exception.Base 28f76dc5daa23d33c2b03285506ae9fc
import  -/  base-4.12.0.0:Control.Monad 07eaec7fd256019b318d048d00f45b1c
import  -/  base-4.12.0.0:Data.Char 74f67fe9150a102afa18766e840f6832
import  -/  base-4.12.0.0:Data.Foldable efb37371da929e7bc88d896298d2d979
import  -/  base-4.12.0.0:Data.Functor 069b2025a03e32fd228e74a86a58a075
import  -/  base-4.12.0.0:Data.IORef e8e1ce7d64831ebb3853a1cd9fb4e228
import  -/  base-4.12.0.0:Data.Int e78f203d621836c59d5015a8a0e4eaea
import  -/  base-4.12.0.0:Data.List 17d0c71c557e42abe196f130788fd997
import  -/  base-4.12.0.0:Data.Maybe 9b76a39e833465c3c5b3c078b431417f
import  -/  base-4.12.0.0:Data.OldList e931cf456dc87f11ee6e6fb153bca23e
import  -/  base-4.12.0.0:Data.Tuple c719fc29608fe81c10bee9a1bf1e05ff
import  -/  base-4.12.0.0:Data.Typeable 1095be85dd9009a6503a3981a259490e
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Err ea5e313ef4146b40b5d8b27aa168e736
import  -/  base-4.12.0.0:GHC.Generics 2b3b2e72be66983021f8ad0c2edcf290
import  -/  base-4.12.0.0:GHC.IO 898d4ddbf00eb4732e5f462760aa42ae
import  -/  base-4.12.0.0:GHC.IO.Exception 77722984940ee6ccf9e2f7dab10b83a4
import  -/  base-4.12.0.0:GHC.IORef c4811a8ca9fa1f2f983a2e196af9a59c
import  -/  base-4.12.0.0:GHC.Int 75a738083d98da9ebef0ff75df759462
import  -/  base-4.12.0.0:GHC.List 4014a3c8a3b7c31c8325f6bcf1feea4a
import  -/  base-4.12.0.0:GHC.MVar 1ee756fe9c2355c91af1e3ddda9dcbe8
import  -/  base-4.12.0.0:GHC.Num c2039f03637c68f47b0bbff4c18ec616
import  -/  base-4.12.0.0:GHC.Read 0604f4258fedea7e033ea68c6d7b40f2
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:GHC.Unicode 87726eb81a3f9c9b22160a0afd5dc56a
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  base-4.12.0.0:System.Environment c54e0d0308e729fdace6bc37aa74bb52
import  -/  base-4.12.0.0:System.Exit 3c945ec7c596067c067092c41083c3d0
import  -/  base-4.12.0.0:System.IO c961e5ee6731c0683a6e879272c9e9f6
import  -/  base-4.12.0.0:Text.ParserCombinators.ReadPrec 9773f55573a0fca144b6966b06590c4e
import  -/  base-4.12.0.0:Text.Read 87f80fc2538a174aea915dd98f74fc0a
import  -/  base-4.12.0.0:Text.Read.Lex cc2610206b1ce0c49789637e16412aa1
import  -/  blaze-builder-0.4.1.0:Blaze.ByteString.Builder.Char.Utf8 19799b676bcc75b98dd19ad567ca3f0c
import  -/  bytestring-0.10.8.2:Data.ByteString fc40bec3e4fb10b918937406130fe77a
import  -/  bytestring-0.10.8.2:Data.ByteString.Builder 88c5948a344210b244983e0b91bd248f
import  -/  bytestring-0.10.8.2:Data.ByteString.Builder.Internal 5c7af28a964e078b4b67962c396b4454
import  -/  bytestring-0.10.8.2:Data.ByteString.Char8 40491ceac5d0f84d2a7f4a84fd2dd3ab
import  -/  bytestring-0.10.8.2:Data.ByteString.Internal ff13c732dcda19b677c2f5e999517616
import  -/  bytestring-0.10.8.2:Data.ByteString.Lazy 2f1c3e7310d730fefed76cfb6092806e
import  -/  bytestring-0.10.8.2:Data.ByteString.Lazy.Char8 ee271bbed336425979c30600663f1b4d
import  -/  bytestring-0.10.8.2:Data.ByteString.Lazy.Internal 8ceea8f415ed041d41a5a276316e69bb
import  -/  directory-1.3.3.0:System.Directory 49a915596c61b7c4c6db58cd4e1272c2
import  -/  filepath-1.4.2.1:System.FilePath.Posix 807571ae31e154c61d0c6bb61ff8b097
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  http-types-0.12.3:Network.HTTP.Types ae7bddc047df1615a9cdd5fa89b54bb8
import  -/  http-types-0.12.3:Network.HTTP.Types.Header 543a1177ab51256aedf3ede25be70c1d
import  -/  http-types-0.12.3:Network.HTTP.Types.Status 7aaa683563aa01670e5a20ebf1b35176
import  -/  integer-gmp-1.0.2.0:GHC.Integer.Type 6d87087aea24143d2650f78480d954a3
import  -/  AronHtml c34d56194af947f96d475e916734bc02
  exports: fb4a0af57b3b0a97762018ed07144e15
  class_ dcd78352125a4b715e7b8bf89f3408b7
  id_ d69b03687f2921729762ef3aca67666d
  onclick_ dddd0be9bc22b3d520c6ad9465f006b4
  preT 2d1bf80d519c36f3bcaa902a8df524bf
  table 5bb69d537007a3f8331dd79a422e399f
import  -/  AronModule 44a9a8b5e610859caa769aae21a4f204
  exports: 0467f532c7e0f3b5a3f9933600b2ff69
  baseName 9c99813fed2bdbe5d19054f4281db798
  escapeHtml 532923faa65b6ac20148df3849f24dc1
  filtermap cf2fb64ec7054a1df16b8f3c5b6cc348
  fl 092bbd131cf27c1346c2c8412f52be8b
  fw 41bed13906cded1b2011cdf3c2ab72cd
  geneMatMN ad463552d70d663ca89a7d19d7980b72
  groupCount 53b2d6cbe64707bcd80ed3acf209aab9
  intToString 1c8e22a20fd04c070e846a40875db55f
  len 551b37e0ae9c916ad59cdb40c7ece76d
  lsFile f91a33d479517da561686e5aacac6bbd
  pa 24535d1733b37bf413e8906d74d5ef55
  pp 0624ebd817d7990de8acc0f1d67dfd0c
  prefix 23867ef0f167846ade1f0017c140e0d8
  qqsort 4b6406401a6ee79198245489b91dd531
  readFileLatin1 40abde09a648d7f98e7109bc93843e08
  readFileLatin1ToList ca2d7993218415fbe7a2e027c97ae449
  readSnippet aa4a3ff4599f79ad23acafd9eebc746f
  run f21ddd5ebbf0326b0303fd95e897b517
  splitStr 8a57a87065a7d003ad69e11057ff915b
  strToLazyByteString b35519c018a4211df9f3eabe3deb2d3c
  strToStrictByteString 222733224f716ad060114b8de9778a2e
  strToStrictText 08ca6d6096162eab3c0aa67091ce171f
  strictBSToString 8e34551b708b52528ae75039a0ad8bc3
  strictByteStringToLazyByteString f4428cbb85a7072bc57502232ee51b33
  strictByteStringToStrictText 240fd4fc7665d7d2c64268fadedfbe58
  strictTextToStr f0e9f32223c10490702fe7f0c87254ff
  takeEnd b91f39e13677626b1782fa3ea48301cf
  toStrictBS 568d90714edce58a2afb0f407a80515f
  trimBoth 5f4608314877b779dc2875e9b58344a1
  trimEnd 958263445bfe286775a48e087dc1f304
  unique b60ce8ae287b7949bd7149e6dc75f1e5
  writeToFile aa955bdefaa228139ae292ccef0b3157
  writeToFileAppend e12480b6839fb665889df4ed22176099
import  -/  PortableLines 81145eda9780e31226fd26ca486abd3b
  exports: efcdc07915efdcebad9917398ca8912d
  plines 37edb655837f2c82b29c07e082c06d3e
import  -/  network-uri-2.6.1.0:Network.URI e656589f65d328be039eeb2dd172ae84
import  -/  process-1.6.5.0:System.Process 2e810cee2a417b14ed03c6fbb00362a9
import  -/  raw-strings-qq-1.1:Text.RawString.QQ c67191eb1e65b067a4153ab1b4095832
import  -/  regex-1.0.2.0:Text.RE.REOptions 1811a8caa940c1622c91fc2332f3b53d
import  -/  regex-1.0.2.0:Text.RE.TDFA.String d3a8fdcc8106867fc7bf9b86a6df24a7
import  -/  regex-1.0.2.0:Text.RE.ZeInternals.SearchReplace.TDFA.String 839227b6705b8e93ec2a993aba1a6fa9
import  -/  regex-1.0.2.0:Text.RE.ZeInternals.SearchReplace.TDFAEdPrime d5505758705f3e5721bd3fc94610b2b5
import  -/  regex-1.0.2.0:Text.RE.ZeInternals.TDFA c3733c8abdc37ea34e01b148d4fa2579
import  -/  regex-1.0.2.0:Text.RE.ZeInternals.Types.SearchReplace ce1dd987d3b21e234d7f82876a1da06c
import  -/  regex-base-0.93.2:Text.Regex.Base 38db9417236ed3a9eb5d5959c0551869
import  -/  regex-base-0.93.2:Text.Regex.Base.RegexLike fa2c0de5c64e014d2ef6fd2421527991
import  -/  regex-compat-0.95.1:Text.Regex 7217c00d13a781e2337d1a1f0f474b2e
import  -/  regex-posix-0.95.2:Text.Regex.Posix c4d3a6df4cf5fd30c7c141af2e1ceba1
import  -/  safe-0.3.17:Safe 436789855584374f8b9a2b8b149b8684
import  -/  sqlite-simple-0.4.16.0:Database.SQLite.Simple 8c9f01b0cc2b5d2b952c69ef0bc381f3
import  -/  sqlite-simple-0.4.16.0:Database.SQLite.Simple.FromField 42d3c5a0ef589466fa9b32eb37acbf28
import  -/  sqlite-simple-0.4.16.0:Database.SQLite.Simple.FromRow 8e431012c71556a6c84ed6c934b2767a
import  -/  sqlite-simple-0.4.16.0:Database.SQLite.Simple.Internal b030e0bcff75a292a156d7f34ff99280
import  -/  sqlite-simple-0.4.16.0:Database.SQLite.Simple.Ok f873171543b74d5f73bc7911327084e3
import  -/  sqlite-simple-0.4.16.0:Database.SQLite.Simple.ToField 50c525126c7c5c519d2a008645d824ba
import  -/  sqlite-simple-0.4.16.0:Database.SQLite.Simple.ToRow 2883f01feffbda519c4275caf14dd7ea
import  -/  text-1.2.3.1:Data.Text 681b9c3df5b4e4b4e23ef5f840f0b692
import  -/  text-1.2.3.1:Data.Text.IO b6cfa03869c429fbaab046e2a0dbffff
import  -/  text-1.2.3.1:Data.Text.Internal 537e168590e8068f673f691833f78483
import  -/  text-1.2.3.1:Data.Text.Internal.Lazy 60724f417edac0a71b3efdb9a450a954
import  -/  text-1.2.3.1:Data.Text.Lazy 5dfd4775189d1cf6b5f168bbf44e9081
import  -/  time-1.8.0.2:Data.Time f6ff4096de7c69ad22c2a67f4dd509e4
import  -/  time-1.8.0.2:Data.Time.Clock.POSIX 9cecc2051debab576bd5d468a9a020cc
import  -/  turtle-1.5.14:Turtle 2811dc8e158b58e6c134dbc664b1d4e4
import  -/  turtle-1.5.14:Turtle.Prelude 4c5ccc6738624798ceec15cb6a449050
import  -/  unix-2.7.2.2:System.Posix.Files 8b4394d70ac72397a0a2e65b696ae5fc
import  -/  unix-2.7.2.2:System.Posix.Unistd df669442b24f9247b1a8d9f5004b6b19
import  -/  unordered-containers-0.2.10.0:Data.HashMap.Base b666983525a9fb01e24fb8a55df5d8dd
import  -/  unordered-containers-0.2.10.0:Data.HashMap.Strict 14aa6b14c186f36ceb9dd8a7757e3d8e
import  -/  unordered-containers-0.2.10.0:Data.HashMap.Strict.Base 6e0d0383757a8ba89fde11fc481190de
import  -/  utf8-string-1.0.1.1:Data.ByteString.UTF8 695d13a27a7b1ff88bf5105edcca8ef2
import  -/  wai-3.2.2.1:Network.Wai f9c521323e1dc79f8230447aa7028a17
import  -/  wai-3.2.2.1:Network.Wai.Internal 70ff39691ef7cbd0b34d0e79ddcfa59e
import  -/  wai-extra-3.0.26.1:Network.Wai.Parse 729cef28afd7fe4084fe8f0bf77f01b1
import  -/  wai-util-0.8:Network.Wai.Util f7c6ff9182dd17df15520e05289ea449
import  -/  wai-websockets-3.0.1.2:Network.Wai.Handler.WebSockets af96d4bd35acf6a36727ac4c563d49a7
import  -/  warp-3.2.28:Network.Wai.Handler.Warp ae2fc77f19802ee6df02346eeb220fe7
import  -/  websockets-0.12.5.3:Network.WebSockets e97241a664976f1d629f3802ac48361a
import  -/  websockets-0.12.5.3:Network.WebSockets.Connection a3da378e7d60ef69b94a1590f6c31c02
import  -/  websockets-0.12.5.3:Network.WebSockets.Server 4af350d6a3c2a5631680abf6f566b68d
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fEqPerson :: GHC.Classes.Eq WaiLib.Person
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.Person WaiLib.$fEqPerson_$c== WaiLib.$fEqPerson_$c/= -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fEqPerson_$c/= :: WaiLib.Person -> WaiLib.Person -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LL),1*U(1*U(U),1*U(U,U,U),1*U(U,U,U))><S(S(S)LL),1*U(1*U(U),1*U(U,U,U),1*U(U,U,U))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: WaiLib.Person) (y :: WaiLib.Person) ->
                 case WaiLib.$fEqPerson_$c== x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fEqPerson_$c== :: WaiLib.Person -> WaiLib.Person -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LL),1*U(1*U(U),1*U(U,U,U),1*U(U,U,U))><S(S(S)LL),1*U(1*U(U),1*U(U,U,U),1*U(U,U,U))>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: WaiLib.Person) (w1 :: WaiLib.Person) ->
                 case w of ww { WaiLib.Person ww1 ww2 ww3 ->
                 case ww1 of ww4 { GHC.Int.I64# ww5 ->
                 case w1 of ww6 { WaiLib.Person ww7 ww8 ww9 ->
                 case ww7 of ww10 { GHC.Int.I64# ww11 ->
                 WaiLib.$w$c== ww5 ww2 ww3 ww11 ww8 ww9 } } } }) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fEqUserInput :: GHC.Classes.Eq WaiLib.UserInput
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.UserInput
                  WaiLib.$fEqUserInput_$c==
                  WaiLib.$fEqUserInput_$c/= -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fEqUserInput_$c/= ::
    WaiLib.UserInput -> WaiLib.UserInput -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U(U,U,U))><S(S(S)L),1*U(1*U(U),1*U(U,U,U))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: WaiLib.UserInput) (y :: WaiLib.UserInput) ->
                 case x of wild { WaiLib.UserInput a1 a2 ->
                 case y of wild1 { WaiLib.UserInput b1 b2 ->
                 case GHC.Int.eqInt64 a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case a2 of wild3 { Data.Text.Internal.Text dt dt1 dt2 ->
                      case b2 of wild4 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                      case GHC.Classes.eqInt
                             (GHC.Types.I# dt2)
                             (GHC.Types.I# dt5) of wild5 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True
                        -> case {__pkg_ccall text-1.2.3.1 GHC.Prim.ByteArray#
                                                          -> GHC.Prim.Word#
                                                          -> GHC.Prim.ByteArray#
                                                          -> GHC.Prim.Word#
                                                          -> GHC.Prim.Word#
                                                          -> GHC.Prim.State# GHC.Prim.RealWorld
                                                          -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                GHC.Prim.Int# #)}
                                  dt
                                  (GHC.Prim.int2Word# dt1)
                                  dt3
                                  (GHC.Prim.int2Word# dt4)
                                  (GHC.Prim.int2Word# dt2)
                                  GHC.Prim.realWorld# of wild6 { (#,#) ds5 ds6 ->
                           case GHC.Int.eqInt32
                                  (GHC.Int.I32# (GHC.Prim.narrow32Int# ds6))
                                  (GHC.Int.I32# 0#) of wild7 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } } } } } } }) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fEqUserInput_$c== ::
    WaiLib.UserInput -> WaiLib.UserInput -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U(U,U,U))><S(S(S)L),1*U(1*U(U),1*U(U,U,U))>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: WaiLib.UserInput) (w1 :: WaiLib.UserInput) ->
                 case w of ww { WaiLib.UserInput ww1 ww2 ->
                 case ww1 of ww3 { GHC.Int.I64# ww4 ->
                 case w1 of ww5 { WaiLib.UserInput ww6 ww7 ->
                 case ww6 of ww8 { GHC.Int.I64# ww9 ->
                 WaiLib.$w$c==1 ww4 ww2 ww9 ww7 } } } }) -}
036a62be5a12650aff8e5a89881204da
  $fFromJSONBlock :: Data.Aeson.Types.FromJSON.FromJSON WaiLib.Block
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.Block
                  WaiLib.$fFromJSONBlock_$cparseJSON
                  WaiLib.$fFromJSONBlock_$cparseJSONList -}
d43161c1585b4d9e0a8a22e7bc1ae700
  $fFromJSONBlock1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (", encountered "#) -}
108289612d5163a7a28daf4abd5edef2
  $fFromJSONBlock2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[a]"#) -}
f5c58e67928d46e762f8405fa3db04ec
  $fFromJSONBlock3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("expected "#) -}
9cce999b4c3da4403676fc1de9bec415
  $fFromJSONBlock4 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Maybe.Just "bblock")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 [Data.Text.Internal.Lazy.Text])
            a)
  {- Arity: 2, Strictness: <L,1*U(U,U,U,U,U,1*U,U)><L,U>,
     Unfolding: (\ @ a
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a) ->
                 let {
                   g :: Data.Aeson.Types.Internal.Value
                        -> Data.Tagged.Tagged
                             Data.Aeson.Types.Generic.True
                             (Data.Aeson.Types.Internal.Parser
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "bblock")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 [Data.Text.Internal.Lazy.Text])
                                   a))
                   = case opts of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                     case ww6 of wild {
                       GHC.Types.False
                       -> let {
                            g1 :: Data.Aeson.Types.Internal.Object
                                  -> Data.Aeson.Types.Internal.Parser
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Maybe.Just "bblock")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R [Data.Text.Internal.Lazy.Text])
                                          a)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Maybe.Just "bblock")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R [Data.Text.Internal.Lazy.Text])
                                WaiLib.$fFromJSONBlock_$s$fSelectorMetaMetaSel
                                WaiLib.$fFromJSONBlock6
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1
                                             GHC.Generics.R [Data.Text.Internal.Lazy.Text]>_N))
                                @ a
                                (Data.Aeson.Types.Internal.Options
                                   ww1
                                   ww2
                                   ww3
                                   ww4
                                   ww5
                                   GHC.Types.False
                                   ww7)
                                fargs
                          } in
                          (\ (x :: Data.Aeson.Types.Internal.Value) ->
                           case x of wild1 {
                             DEFAULT
                             -> Data.Aeson.Types.FromJSON.typeMismatch
                                  @ (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Maybe.Just "bblock")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.K1
                                          GHC.Generics.R [Data.Text.Internal.Lazy.Text])
                                       a)
                                  Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityM1True1
                                  wild1
                             Data.Aeson.Types.Internal.Object obj -> g1 obj })
                            `cast`
                          (<Data.Aeson.Types.Internal.Value>_R
                           ->_R Sym (Data.Tagged.N:Tagged[0]
                                         <*>_N
                                         <Data.Aeson.Types.Generic.True>_P
                                         <Data.Aeson.Types.Internal.Parser
                                            (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Maybe.Just "bblock")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R [Data.Text.Internal.Lazy.Text])
                                               a)>_R))
                       GHC.Types.True
                       -> (WaiLib.$fFromJSONBlock5 @ a)
                            `cast`
                          (<Data.Aeson.Types.Internal.Value>_R
                           ->_R Sym (Data.Tagged.N:Tagged[0]
                                         <*>_N
                                         <Data.Aeson.Types.Generic.True>_P
                                         <Data.Aeson.Types.Internal.Parser
                                            (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Maybe.Just "bblock")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R [Data.Text.Internal.Lazy.Text])
                                               a)>_R)) } }
                 } in
                 (\ (x :: Data.Aeson.Types.Internal.Value) -> g x)
                   `cast`
                 (<Data.Aeson.Types.Internal.Value>_R
                  ->_R Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Parser
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "bblock")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 [Data.Text.Internal.Lazy.Text])
                                 a)>_R)) -}
a0187f945aa424b9c0a3cf104fb2b4ae
  $fFromJSONBlock5 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Maybe.Just "bblock")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R [Data.Text.Internal.Lazy.Text])
            a)
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ @ a (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          [Data.Text.Internal.Lazy.Text]
                   = Data.Aeson.Types.FromJSON.$fFromJSONKeyText_$cparseJSONList x
                 } in
                 (\ @ f5 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "bblock")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R [Data.Text.Internal.Lazy.Text])
                                a)
                             f5
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <[Data.Text.Internal.Lazy.Text]>_R)
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a3 :: [Data.Text.Internal.Lazy.Text]) ->
                     ks
                       a3
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <[Data.Text.Internal.Lazy.Text]>_R
                                 <a>_P) ; Sym (GHC.Generics.N:M1[0]
                                                   <*>_N
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Maybe.Just "bblock")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      [Data.Text.Internal.Lazy.Text]>_R) <a>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "bblock")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R [Data.Text.Internal.Lazy.Text])
                              a>_R))) -}
131ce55a59f5e2c67625af969126984d
  $fFromJSONBlock6 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [Data.Text.Internal.Lazy.Text] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a2
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a2)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [Data.Text.Internal.Lazy.Text]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   WaiLib.$fFromJSONBlock_$s$fFromJSON[]
                   @ a2
                   w3) -}
a74b9bca6e60bca475d17d6bfe06871c
  $fFromJSONBlock7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.$fFromJSONBlock8) -}
79a04f85c541f8f602962a86740c9836
  $fFromJSONBlock8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("bblock"#) -}
036a62be5a12650aff8e5a89881204da
  $fFromJSONBlock_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser WaiLib.Block
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "bblock")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 [Data.Text.Internal.Lazy.Text])
                             GHC.Types.Any)
                   = WaiLib.$fFromJSONBlock_g x
                 } in
                 (\ @ f5 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success WaiLib.Block f5 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Maybe.Just "bblock")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.Rec0 [Data.Text.Internal.Lazy.Text])
                          GHC.Types.Any>_R)
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a3 :: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "bblock")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 [Data.Text.Internal.Lazy.Text])
                                GHC.Types.Any) ->
                     ks
                       (WaiLib.Block
                          a3
                            `cast`
                          ((Sym (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Block" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "bblock")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0
                                           [Data.Text.Internal.Lazy.Text])>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                          <*>_N
                                                                                          <GHC.Generics.D>_P
                                                                                          <'GHC.Generics.MetaData
                                                                                             "Block"
                                                                                             "WaiLib"
                                                                                             "main"
                                                                                             'GHC.Types.False>_P
                                                                                          <GHC.Generics.M1
                                                                                             GHC.Generics.C
                                                                                             ('GHC.Generics.MetaCons
                                                                                                "Block"
                                                                                                'GHC.Generics.PrefixI
                                                                                                'GHC.Types.True)
                                                                                             (GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Maybe.Just
                                                                                                      "bblock")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.Rec0
                                                                                                   [Data.Text.Internal.Lazy.Text]))>_R)) <GHC.Types.Any>_N ; (Nth:2
                                                                                                                                                                  (Nth:2
                                                                                                                                                                       (Nth:3
                                                                                                                                                                            (Nth:3
                                                                                                                                                                                 (Inst (Inst (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                       <GHC.Generics.M1
                                                                                                                                                                                                          GHC.Generics.D
                                                                                                                                                                                                          ('GHC.Generics.MetaData
                                                                                                                                                                                                             "Block"
                                                                                                                                                                                                             "WaiLib"
                                                                                                                                                                                                             "main"
                                                                                                                                                                                                             'GHC.Types.False)
                                                                                                                                                                                                          (GHC.Generics.M1
                                                                                                                                                                                                             GHC.Generics.C
                                                                                                                                                                                                             ('GHC.Generics.MetaCons
                                                                                                                                                                                                                "Block"
                                                                                                                                                                                                                'GHC.Generics.PrefixI
                                                                                                                                                                                                                'GHC.Types.True)
                                                                                                                                                                                                             (GHC.Generics.M1
                                                                                                                                                                                                                GHC.Generics.S
                                                                                                                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                                                                                                                   ('GHC.Maybe.Just
                                                                                                                                                                                                                      "bblock")
                                                                                                                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                (GHC.Generics.Rec0
                                                                                                                                                                                                                   [Data.Text.Internal.Lazy.Text])))
                                                                                                                                                                                                          GHC.Types.Any>_R) ; (Nth:3
                                                                                                                                                                                                                                   (Nth:3
                                                                                                                                                                                                                                        (Nth:3
                                                                                                                                                                                                                                             (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                                              ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                                                                                                                                                                                                                                      Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                                      GHC.Types.Any>_R
                                                                                                                                                                                                                                              ->_R <Data.Aeson.Types.Internal.Value>_R
                                                                                                                                                                                                                                              ->_R (Data.Aeson.Types.Internal.Parser
                                                                                                                                                                                                                                                      (Sub (Sym (WaiLib.Rep_Block[0])) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                      <GHC.Generics.Rep
                                                                                                                                                                                                                                                                                                                         WaiLib.Block
                                                                                                                                                                                                                                                                                                                         GHC.Types.Any>_R)) (Coh <f5>_N
                                                                                                                                                                                                                                                                                                                                                 (Nth:0
                                                                                                                                                                                                                                                                                                                                                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                                <GHC.Generics.Rep
                                                                                                                                                                                                                                                                                                                                                                   WaiLib.Block
                                                                                                                                                                                                                                                                                                                                                                   GHC.Types.Any>_R) ; (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                            (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                                 (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                                      (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                                                                                                                                                                                                       ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                                                                                                                                                                                                                                                                                                                                                                                               Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                                                                                                                                                                                               GHC.Types.Any>_R
                                                                                                                                                                                                                                                                                                                                                                                                       ->_R <Data.Aeson.Types.Internal.Value>_R
                                                                                                                                                                                                                                                                                                                                                                                                       ->_R (Data.Aeson.Types.Internal.Parser
                                                                                                                                                                                                                                                                                                                                                                                                               (Sub (WaiLib.Rep_Block[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                         <GHC.Generics.M1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GHC.Generics.D
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ('GHC.Generics.MetaData
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               "Block"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               "WaiLib"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               "main"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               'GHC.Types.False)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            (GHC.Generics.M1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               GHC.Generics.C
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ('GHC.Generics.MetaCons
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  "Block"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  'GHC.Generics.PrefixI
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  'GHC.Types.True)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               (GHC.Generics.M1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  GHC.Generics.S
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ('GHC.Maybe.Just
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "bblock")
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  (GHC.Generics.Rec0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     [Data.Text.Internal.Lazy.Text])))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GHC.Types.Any>_R))))) (Coh <r>_N
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       (Nth:0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            (Inst (Sym (Data.Aeson.Types.Internal.N:Parser[0]
enerics.Rep
aiLib.Block
ypes.Any>_R) ; (Nth:3
th:3
th:3
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  (<Data.Aeson.Types.Internal.Options>_R
ata.Aeson.Types.FromJSON.FromArgs
ata.Aeson.Types.Generic.Zero
ypes.Any>_R
ata.Aeson.Types.Internal.Value>_R
ata.Aeson.Types.Internal.Parser
ub (WaiLib.Rep_Block[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     <GHC.Generics.M1
enerics.D
enerics.MetaData
lock"
aiLib"
main"
ypes.False)
enerics.M1
enerics.C
enerics.MetaCons
lock"
enerics.PrefixI
ypes.True)
enerics.M1
enerics.S
enerics.MetaSel
aybe.Just
bblock")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Lazy.Text])))
ypes.Any>_R)) (Sym (Coh <f5>_N
th:0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
enerics.Rep
aiLib.Block
ypes.Any>_R) ; (Nth:3
th:3
th:3
ata.Aeson.Types.Internal.Options>_R
ata.Aeson.Types.FromJSON.FromArgs
ata.Aeson.Types.Generic.Zero
ypes.Any>_R
ata.Aeson.Types.Internal.Value>_R
ata.Aeson.Types.Internal.Parser
ub (WaiLib.Rep_Block[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
enerics.M1
enerics.D
enerics.MetaData
lock"
aiLib"
main"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   'GHC.Types.False)
enerics.M1
enerics.C
enerics.MetaCons
lock"
enerics.PrefixI
ypes.True)
enerics.M1
enerics.S
enerics.MetaSel
aybe.Just
bblock")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         'GHC.Generics.DecidedLazy)
enerics.Rec0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         [Data.Text.Internal.Lazy.Text])))
ypes.Any>_R)))))))))))) ; ((Sub (WaiLib.Rep_Block[0]) ; (GHC.Generics.N:M1[0]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  <*>_N
enerics.D>_P
enerics.MetaData
lock"
aiLib"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     "main"
ypes.False>_P
enerics.M1
enerics.C
enerics.MetaCons
lock"
enerics.PrefixI
ypes.True)
enerics.M1
enerics.S
enerics.MetaSel
aybe.Just
bblock")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           'GHC.Generics.DecidedLazy)
enerics.K1
enerics.R
ata.Text.Internal.Lazy.Text]))>_R ; (GHC.Generics.N:M1[0]

enerics.C>_P
enerics.MetaCons
lock"
enerics.PrefixI
ypes.True>_P
enerics.M1
enerics.S
enerics.MetaSel
aybe.Just
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               "bblock")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
enerics.K1
enerics.R
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            [Data.Text.Internal.Lazy.Text])>_R ; GHC.Generics.N:M1[0]

enerics.S>_P
enerics.MetaSel
aybe.Just
bblock")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy>_P
enerics.K1
enerics.R
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        [Data.Text.Internal.Lazy.Text]>_R))) <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]

enerics.R>_P
ata.Text.Internal.Lazy.Text]>_R
ypes.Any>_P))))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <WaiLib.Block>_R))) -}
036a62be5a12650aff8e5a89881204da
  $fFromJSONBlock_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [WaiLib.Block]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds5 :: Data.Aeson.Types.Internal.Value) ->
                 case ds5 of wild {
                   DEFAULT
                   -> let {
                        msg20 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            WaiLib.$fFromJSONBlock3
                            (GHC.CString.unpackAppendCString#
                               WaiLib.$fFromJSONBlock2
                               (GHC.CString.unpackAppendCString#
                                  WaiLib.$fFromJSONBlock1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success [WaiLib.Block] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg20)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0] <[WaiLib.Block]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo7 :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [2] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds6 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo7 (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      WaiLib.$fFromJSONBlock_go 0# ($wgo7 0#) } }) -}
003cce61420fd476b9620909f84a4224
  $fFromJSONBlock_$s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON [Data.Text.Internal.Lazy.Text]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [Data.Text.Internal.Lazy.Text]
                  Data.Aeson.Types.FromJSON.$fFromJSONKeyText_$cparseJSONList
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ Data.Text.Internal.Lazy.Text
                     Data.Aeson.Types.FromJSON.$fFromJSONText) -}
9675406fb27ef36a0dc6334cff2fd4f5
  $fFromJSONBlock_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "bblock")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Maybe.Just "bblock")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "bblock")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   WaiLib.$fFromJSONBlock7)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "bblock")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceUnpackedness
                          `cast`
                        (GHC.Generics.D:R:SingSourceUnpackednessa0[0] <'GHC.Generics.NoSourceUnpackedness>_N) of wild { GHC.Generics.SNoSourceUnpackedness co ->
                   GHC.Generics.NoSourceUnpackedness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "bblock")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "bblock")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceStrictness
                          `cast`
                        (GHC.Generics.D:R:SingSourceStrictnessa0[0] <'GHC.Generics.NoSourceStrictness>_N) of wild { GHC.Generics.SNoSourceStrictness co ->
                   GHC.Generics.NoSourceStrictness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "bblock")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "bblock")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSDecidedLazy
                          `cast`
                        (GHC.Generics.D:R:SingDecidedStrictnessa0[0] <'GHC.Generics.DecidedLazy>_N) of wild { GHC.Generics.SDecidedLazy co ->
                   GHC.Generics.DecidedLazy
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepDecidedStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "bblock")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepDecidedStrictness[0])) -}
204a4a27d664231e0349be5f8096570e
  $fFromJSONBlock_g ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Maybe.Just "bblock")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 [Data.Text.Internal.Lazy.Text])
            GHC.Types.Any)
  {- Unfolding: (WaiLib.$fFromJSONBlock4
                   @ GHC.Types.Any
                   WaiLib.$fFromJSONBlock_opts
                   (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Types.Any)) -}
036a62be5a12650aff8e5a89881204da
  $fFromJSONBlock_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser [WaiLib.Block]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
fbaa8138c7c6bd34b3453044797f088f
  $fFromJSONBlock_opts :: Data.Aeson.Types.Internal.Options
  {- Strictness: m,
     Unfolding: (Data.Aeson.Types.Internal.Options
                   (GHC.Base.id @ GHC.Base.String)
                   (GHC.Base.id @ GHC.Base.String)
                   GHC.Types.True
                   GHC.Types.False
                   Data.Aeson.Types.Internal.defaultTaggedObject
                   GHC.Types.False
                   GHC.Types.False) -}
4094009eeca0d4f5c386f1c83b59a3e5
  $fFromJSONCompileCode ::
    Data.Aeson.Types.FromJSON.FromJSON WaiLib.CompileCode
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.CompileCode
                  WaiLib.$fFromJSONCompileCode_$cparseJSON
                  WaiLib.$fFromJSONCompileCode_$cparseJSONList -}
0c60a3015d01e547187d8a7e395ae4f0
  $fFromJSONCompileCode1 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a2
    -> Data.Aeson.Types.Internal.Object
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:*:)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Maybe.Just "compiler")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 Data.Text.Internal.Text))
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Maybe.Just "option")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 Data.Text.Internal.Text)
             GHC.Generics.:*: GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "code")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text))
            a2)
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U,U)><L,U><L,U>,
     Unfolding: (\ @ a2
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a2)
                   (obj :: Data.Aeson.Types.Internal.Object) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "compiler")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Data.Text.Internal.Text)
                             a2)
                   = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                       @ ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "compiler")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                       @ Data.Aeson.Types.Generic.Zero
                       @ (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                       WaiLib.$fFromJSONCompileCode_$s$fSelectorMetaMetaSel2
                       WaiLib.$fFromJSONCompileCode6
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text>_N))
                       @ a2
                       opts
                       fargs
                       obj
                 } in
                 let {
                   m1 :: Data.Aeson.Types.Internal.Parser
                           (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "option")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.Rec0 Data.Text.Internal.Text)
                              a2)
                   = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                       @ ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "option")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                       @ Data.Aeson.Types.Generic.Zero
                       @ (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                       WaiLib.$fFromJSONCompileCode_$s$fSelectorMetaMetaSel1
                       WaiLib.$fFromJSONCompileCode6
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text>_N))
                       @ a2
                       opts
                       fargs
                       obj
                 } in
                 let {
                   e :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "code")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Data.Text.Internal.Text)
                             a2)
                   = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                       @ ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "code")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                       @ Data.Aeson.Types.Generic.Zero
                       @ (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                       WaiLib.$fFromJSONCompileCode_$s$fSelectorMetaMetaSel
                       WaiLib.$fFromJSONCompileCode6
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text>_N))
                       @ a2
                       opts
                       fargs
                       obj
                 } in
                 (\ @ f4 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             ((GHC.Generics.:*:)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "compiler")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "option")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "code")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                a2)
                             f4
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Maybe.Just "compiler")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.Rec0 Data.Text.Internal.Text)
                          a2>_R)
                    @ f4
                    @ r
                    path
                    kf
                    (\ (a3 :: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "compiler")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                a2) ->
                     m1
                       `cast`
                     (Data.Aeson.Types.Internal.N:Parser[0]
                          <GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "option")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Data.Text.Internal.Text)
                             a2>_R)
                       @ f4
                       @ r
                       path
                       kf
                       (\ (a1 :: GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "option")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                   a2) ->
                        e `cast`
                        (Data.Aeson.Types.Internal.N:Parser[0]
                             <GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "code")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                a2>_R)
                          @ f4
                          @ r
                          path
                          kf
                          (\ (a4 :: GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "code")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                      a2) ->
                           ks
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "compiler")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                @ (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "option")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Maybe.Just "code")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                @ a2
                                a3
                                (GHC.Generics.:*:
                                   @ *
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "option")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "code")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                   @ a2
                                   a1
                                   a4))))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <(GHC.Generics.:*:)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "compiler")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 Data.Text.Internal.Text))
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "option")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 Data.Text.Internal.Text)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Maybe.Just "code")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.Rec0 Data.Text.Internal.Text))
                              a2>_R))) -}
f78702dca608204c9ce3c5e0db1dbf6b
  $fFromJSONCompileCode2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.$fFromJSONCompileCode3) -}
4b47db7bc32d2434532660d84aaa4ba8
  $fFromJSONCompileCode3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("code"#) -}
1684e869b6c7596266c1ebec4185e8e5
  $fFromJSONCompileCode4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.$fFromJSONCompileCode5) -}
434e2cec923c5adc57034dc3a2fa42a8
  $fFromJSONCompileCode5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("option"#) -}
554e2eb3cf42e8545317d98cd1650e87
  $fFromJSONCompileCode6 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a2
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a2)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ Data.Text.Internal.Text
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Data.Aeson.Types.FromJSON.$fFromJSONText0
                   @ a2
                   w3) -}
1c9d006b99493306c65337e6b3a0384d
  $fFromJSONCompileCode7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.$fFromJSONCompileCode8) -}
4394d3579475d750ea6655dd59d4b408
  $fFromJSONCompileCode8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("compiler"#) -}
4094009eeca0d4f5c386f1c83b59a3e5
  $fFromJSONCompileCode_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser WaiLib.CompileCode
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "compiler")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "option")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Maybe.Just "code")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 Data.Text.Internal.Text))
                             GHC.Types.Any)
                   = WaiLib.$fFromJSONCompileCode_g x
                 } in
                 (\ @ f5 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             WaiLib.CompileCode f5 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "compiler")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Data.Text.Internal.Text))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "option")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Data.Text.Internal.Text)
                           GHC.Generics.:*: GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Maybe.Just "code")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 Data.Text.Internal.Text))
                          GHC.Types.Any>_R)
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a3 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "compiler")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "option")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "code")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                GHC.Types.Any) ->
                     ks
                       (WaiLib.$fFromJSONCompileCode_$cto
                          @ GHC.Types.Any
                          a3
                            `cast`
                          ((Sym (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "CompileCode" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.S1
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "compiler")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                      GHC.Generics.:*: (GHC.Generics.S1
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Maybe.Just "option")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.Rec0
                                                             Data.Text.Internal.Text)
                                                        GHC.Generics.:*: GHC.Generics.S1
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Maybe.Just
                                                                                 "code")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.Rec0
                                                                              Data.Text.Internal.Text))>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                       <*>_N
                                                                                                                       <GHC.Generics.D>_P
                                                                                                                       <'GHC.Generics.MetaData
                                                                                                                          "CompileCode"
                                                                                                                          "WaiLib"
                                                                                                                          "main"
                                                                                                                          'GHC.Types.False>_P
                                                                                                                       <GHC.Generics.M1
                                                                                                                          GHC.Generics.C
                                                                                                                          ('GHC.Generics.MetaCons
                                                                                                                             "CompileCode"
                                                                                                                             'GHC.Generics.PrefixI
                                                                                                                             'GHC.Types.True)
                                                                                                                          (GHC.Generics.S1
                                                                                                                             ('GHC.Generics.MetaSel
                                                                                                                                ('GHC.Maybe.Just
                                                                                                                                   "compiler")
                                                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                             (GHC.Generics.Rec0
                                                                                                                                Data.Text.Internal.Text)
                                                                                                                           GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                               ('GHC.Generics.MetaSel
                                                                                                                                                  ('GHC.Maybe.Just
                                                                                                                                                     "option")
                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                               (GHC.Generics.Rec0
                                                                                                                                                  Data.Text.Internal.Text)
                                                                                                                                             GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                                                                   ('GHC.Maybe.Just
                                                                                                                                                                      "code")
                                                                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                                                                (GHC.Generics.Rec0
                                                                                                                                                                   Data.Text.Internal.Text)))>_R)) <GHC.Types.Any>_N ; Nth:2
                                                                                                                                                                                                                           (Nth:2
                                                                                                                                                                                                                                (Nth:3
                                                                                                                                                                                                                                     (Nth:3
                                                                                                                                                                                                                                          (Inst (Inst (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                <GHC.Generics.M1
                                                                                                                                                                                                                                                                   GHC.Generics.D
                                                                                                                                                                                                                                                                   ('GHC.Generics.MetaData
                                                                                                                                                                                                                                                                      "CompileCode"
                                                                                                                                                                                                                                                                      "WaiLib"
                                                                                                                                                                                                                                                                      "main"
                                                                                                                                                                                                                                                                      'GHC.Types.False)
                                                                                                                                                                                                                                                                   (GHC.Generics.M1
                                                                                                                                                                                                                                                                      GHC.Generics.C
                                                                                                                                                                                                                                                                      ('GHC.Generics.MetaCons
                                                                                                                                                                                                                                                                         "CompileCode"
                                                                                                                                                                                                                                                                         'GHC.Generics.PrefixI
                                                                                                                                                                                                                                                                         'GHC.Types.True)
                                                                                                                                                                                                                                                                      (GHC.Generics.S1
                                                                                                                                                                                                                                                                         ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                                            ('GHC.Maybe.Just
                                                                                                                                                                                                                                                                               "compiler")
                                                                                                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                                         (GHC.Generics.Rec0
                                                                                                                                                                                                                                                                            Data.Text.Internal.Text)
                                                                                                                                                                                                                                                                       GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                                                                                                                                                                           ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                                                              ('GHC.Maybe.Just
                                                                                                                                                                                                                                                                                                 "option")
                                                                                                                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                                                           (GHC.Generics.Rec0
                                                                                                                                                                                                                                                                                              Data.Text.Internal.Text)
                                                                                                                                                                                                                                                                                         GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                                                                                                                                                                            ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                                                                               ('GHC.Maybe.Just
                                                                                                                                                                                                                                                                                                                  "code")
                                                                                                                                                                                                                                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                                                                               'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                                                                            (GHC.Generics.Rec0
                                                                                                                                                                                                                                                                                                               Data.Text.Internal.Text))))
                                                                                                                                                                                                                                                                   GHC.Types.Any>_R) ; (Nth:3
                                                                                                                                                                                                                                                                                            (Nth:3
                                                                                                                                                                                                                                                                                                 (Nth:3
                                                                                                                                                                                                                                                                                                      (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                                                                                                       ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                                                                                                                                                                                                                                                                                               Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                                                                                               GHC.Types.Any>_R
                                                                                                                                                                                                                                                                                                       ->_R <Data.Aeson.Types.Internal.Value>_R
                                                                                                                                                                                                                                                                                                       ->_R (Data.Aeson.Types.Internal.Parser
                                                                                                                                                                                                                                                                                                               (Sub (Sym (WaiLib.Rep_CompileCode[0])) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                                                     <GHC.Generics.Rep
                                                                                                                                                                                                                                                                                                                                                                                        WaiLib.CompileCode
                                                                                                                                                                                                                                                                                                                                                                                        GHC.Types.Any>_R)) (Coh <f5>_N
                                                                                                                                                                                                                                                                                                                                                                                                                (Nth:0
                                                                                                                                                                                                                                                                                                                                                                                                                     (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                                                                                               <GHC.Generics.Rep
                                                                                                                                                                                                                                                                                                                                                                                                                                  WaiLib.CompileCode
                                                                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.Any>_R) ; (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                                                                                           (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                                                                                                (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              GHC.Types.Any>_R
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ->_R <Data.Aeson.Types.Internal.Value>_R
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ->_R (Data.Aeson.Types.Internal.Parser
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              (Sub (WaiLib.Rep_CompileCode[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              <GHC.Generics.M1
enerics.D
enerics.MetaData
ompileCode"
aiLib"
main"
ypes.False)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 (GHC.Generics.M1
enerics.C
enerics.MetaCons
ompileCode"
enerics.PrefixI
ypes.True)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (GHC.Generics.S1
enerics.MetaSel
aybe.Just
compiler")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text)
enerics.:*: (GHC.Generics.S1
enerics.MetaSel
aybe.Just
option")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text)
enerics.:*: GHC.Generics.S1
enerics.MetaSel
aybe.Just
code")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 GHC.Types.Any>_R))))) (Coh <r>_N
th:0
nst (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 <GHC.Generics.Rep
aiLib.CompileCode
ypes.Any>_R) ; (Nth:3
th:3
th:3
ata.Aeson.Types.Internal.Options>_R
ata.Aeson.Types.FromJSON.FromArgs
ata.Aeson.Types.Generic.Zero
ypes.Any>_R
ata.Aeson.Types.Internal.Value>_R
ata.Aeson.Types.Internal.Parser
ub (WaiLib.Rep_CompileCode[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
enerics.M1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   GHC.Generics.D
enerics.MetaData
ompileCode"
aiLib"
main"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      'GHC.Types.False)
enerics.M1
enerics.C
enerics.MetaCons
ompileCode"
enerics.PrefixI
ypes.True)
enerics.S1
enerics.MetaSel
aybe.Just
compiler")
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Data.Text.Internal.Text)
enerics.:*: (GHC.Generics.S1
enerics.MetaSel
aybe.Just
option")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text)
enerics.:*: GHC.Generics.S1
enerics.MetaSel
aybe.Just
code")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text))))
ypes.Any>_R)) (Sym (Coh <f5>_N
th:0
ym (Data.Aeson.Types.Internal.N:Parser[0]
enerics.Rep
aiLib.CompileCode
ypes.Any>_R) ; (Nth:3
th:3
th:3
ata.Aeson.Types.Internal.Options>_R
ata.Aeson.Types.FromJSON.FromArgs
ata.Aeson.Types.Generic.Zero
ypes.Any>_R
ata.Aeson.Types.Internal.Value>_R
ata.Aeson.Types.Internal.Parser
ub (WaiLib.Rep_CompileCode[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
enerics.M1
enerics.D
enerics.MetaData
ompileCode"
aiLib"
main"
ypes.False)
enerics.M1
enerics.C
enerics.MetaCons
ompileCode"
enerics.PrefixI
ypes.True)
enerics.S1
enerics.MetaSel
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ('GHC.Maybe.Just
compiler")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text)
enerics.:*: (GHC.Generics.S1
enerics.MetaSel
aybe.Just
option")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text)
enerics.:*: GHC.Generics.S1
enerics.MetaSel
aybe.Just
code")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text))))
ypes.Any>_R))))))))))))))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <WaiLib.CompileCode>_R))) -}
4094009eeca0d4f5c386f1c83b59a3e5
  $fFromJSONCompileCode_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [WaiLib.CompileCode]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds5 :: Data.Aeson.Types.Internal.Value) ->
                 case ds5 of wild {
                   DEFAULT
                   -> let {
                        msg20 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            WaiLib.$fFromJSONBlock3
                            (GHC.CString.unpackAppendCString#
                               WaiLib.$fFromJSONBlock2
                               (GHC.CString.unpackAppendCString#
                                  WaiLib.$fFromJSONBlock1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [WaiLib.CompileCode] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg20)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[WaiLib.CompileCode]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo7 :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [2] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds6 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo7 (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      WaiLib.$fFromJSONCompileCode_go 0# ($wgo7 0#) } }) -}
4094009eeca0d4f5c386f1c83b59a3e5
  $fFromJSONCompileCode_$cto ::
    GHC.Generics.Rep WaiLib.CompileCode x -> WaiLib.CompileCode
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds5 :: GHC.Generics.Rep WaiLib.CompileCode x) ->
                 case ds5
                        `cast`
                      ((Sub (WaiLib.Rep_CompileCode[0]) ; (GHC.Generics.N:M1[0]
                                                               <*>_N
                                                               <GHC.Generics.D>_P
                                                               <'GHC.Generics.MetaData
                                                                  "CompileCode"
                                                                  "WaiLib"
                                                                  "main"
                                                                  'GHC.Types.False>_P
                                                               <GHC.Generics.M1
                                                                  GHC.Generics.C
                                                                  ('GHC.Generics.MetaCons
                                                                     "CompileCode"
                                                                     'GHC.Generics.PrefixI
                                                                     'GHC.Types.True)
                                                                  (GHC.Generics.M1
                                                                     GHC.Generics.S
                                                                     ('GHC.Generics.MetaSel
                                                                        ('GHC.Maybe.Just "compiler")
                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                        'GHC.Generics.NoSourceStrictness
                                                                        'GHC.Generics.DecidedLazy)
                                                                     (GHC.Generics.K1
                                                                        GHC.Generics.R
                                                                        Data.Text.Internal.Text)
                                                                   GHC.Generics.:*: (GHC.Generics.M1
                                                                                       GHC.Generics.S
                                                                                       ('GHC.Generics.MetaSel
                                                                                          ('GHC.Maybe.Just
                                                                                             "option")
                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                          'GHC.Generics.DecidedLazy)
                                                                                       (GHC.Generics.K1
                                                                                          GHC.Generics.R
                                                                                          Data.Text.Internal.Text)
                                                                                     GHC.Generics.:*: GHC.Generics.M1
                                                                                                        GHC.Generics.S
                                                                                                        ('GHC.Generics.MetaSel
                                                                                                           ('GHC.Maybe.Just
                                                                                                              "code")
                                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                        (GHC.Generics.K1
                                                                                                           GHC.Generics.R
                                                                                                           Data.Text.Internal.Text)))>_R ; GHC.Generics.N:M1[0]
                                                                                                                                               <*>_N
                                                                                                                                               <GHC.Generics.C>_P
                                                                                                                                               <'GHC.Generics.MetaCons
                                                                                                                                                  "CompileCode"
                                                                                                                                                  'GHC.Generics.PrefixI
                                                                                                                                                  'GHC.Types.True>_P
                                                                                                                                               <GHC.Generics.M1
                                                                                                                                                  GHC.Generics.S
                                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                                     ('GHC.Maybe.Just
                                                                                                                                                        "compiler")
                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                                  (GHC.Generics.K1
                                                                                                                                                     GHC.Generics.R
                                                                                                                                                     Data.Text.Internal.Text)
                                                                                                                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                    GHC.Generics.S
                                                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                                                       ('GHC.Maybe.Just
                                                                                                                                                                          "option")
                                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                                    (GHC.Generics.K1
                                                                                                                                                                       GHC.Generics.R
                                                                                                                                                                       Data.Text.Internal.Text)
                                                                                                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                     GHC.Generics.S
                                                                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                                                                        ('GHC.Maybe.Just
                                                                                                                                                                                           "code")
                                                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                                                     (GHC.Generics.K1
                                                                                                                                                                                        GHC.Generics.R
                                                                                                                                                                                        Data.Text.Internal.Text))>_R)) <x>_N) of wild { GHC.Generics.:*: ds6 ds7 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds8 ds9 ->
                 WaiLib.CompileCode
                   ds6
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "compiler")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Text.Internal.Text>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                  <*>_N
                                                                  <GHC.Generics.R>_P
                                                                  <Data.Text.Internal.Text>_R
                                                                  <x>_P)
                   ds8
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "option")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Text.Internal.Text>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                  <*>_N
                                                                  <GHC.Generics.R>_P
                                                                  <Data.Text.Internal.Text>_R
                                                                  <x>_P)
                   ds9
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "code")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Text.Internal.Text>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                  <*>_N
                                                                  <GHC.Generics.R>_P
                                                                  <Data.Text.Internal.Text>_R
                                                                  <x>_P) } }) -}
96519a20ef017bb5a2d213ef23e39500
  $fFromJSONCompileCode_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "code")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Maybe.Just "code")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "code")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   WaiLib.$fFromJSONCompileCode2)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "code")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceUnpackedness
                          `cast`
                        (GHC.Generics.D:R:SingSourceUnpackednessa0[0] <'GHC.Generics.NoSourceUnpackedness>_N) of wild { GHC.Generics.SNoSourceUnpackedness co ->
                   GHC.Generics.NoSourceUnpackedness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "code")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "code")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceStrictness
                          `cast`
                        (GHC.Generics.D:R:SingSourceStrictnessa0[0] <'GHC.Generics.NoSourceStrictness>_N) of wild { GHC.Generics.SNoSourceStrictness co ->
                   GHC.Generics.NoSourceStrictness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "code")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "code")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSDecidedLazy
                          `cast`
                        (GHC.Generics.D:R:SingDecidedStrictnessa0[0] <'GHC.Generics.DecidedLazy>_N) of wild { GHC.Generics.SDecidedLazy co ->
                   GHC.Generics.DecidedLazy
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepDecidedStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "code")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepDecidedStrictness[0])) -}
4ace15a940505e73ea808ad3d93ac602
  $fFromJSONCompileCode_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "option")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Maybe.Just "option")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "option")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   WaiLib.$fFromJSONCompileCode4)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "option")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceUnpackedness
                          `cast`
                        (GHC.Generics.D:R:SingSourceUnpackednessa0[0] <'GHC.Generics.NoSourceUnpackedness>_N) of wild { GHC.Generics.SNoSourceUnpackedness co ->
                   GHC.Generics.NoSourceUnpackedness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "option")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "option")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceStrictness
                          `cast`
                        (GHC.Generics.D:R:SingSourceStrictnessa0[0] <'GHC.Generics.NoSourceStrictness>_N) of wild { GHC.Generics.SNoSourceStrictness co ->
                   GHC.Generics.NoSourceStrictness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "option")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "option")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSDecidedLazy
                          `cast`
                        (GHC.Generics.D:R:SingDecidedStrictnessa0[0] <'GHC.Generics.DecidedLazy>_N) of wild { GHC.Generics.SDecidedLazy co ->
                   GHC.Generics.DecidedLazy
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepDecidedStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "option")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepDecidedStrictness[0])) -}
dcbcac7c5459f47a5bec352159984d12
  $fFromJSONCompileCode_$s$fSelectorMetaMetaSel2 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "compiler")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Maybe.Just "compiler")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "compiler")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   WaiLib.$fFromJSONCompileCode7)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "compiler")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceUnpackedness
                          `cast`
                        (GHC.Generics.D:R:SingSourceUnpackednessa0[0] <'GHC.Generics.NoSourceUnpackedness>_N) of wild { GHC.Generics.SNoSourceUnpackedness co ->
                   GHC.Generics.NoSourceUnpackedness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "compiler")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "compiler")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceStrictness
                          `cast`
                        (GHC.Generics.D:R:SingSourceStrictnessa0[0] <'GHC.Generics.NoSourceStrictness>_N) of wild { GHC.Generics.SNoSourceStrictness co ->
                   GHC.Generics.NoSourceStrictness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "compiler")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "compiler")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSDecidedLazy
                          `cast`
                        (GHC.Generics.D:R:SingDecidedStrictnessa0[0] <'GHC.Generics.DecidedLazy>_N) of wild { GHC.Generics.SDecidedLazy co ->
                   GHC.Generics.DecidedLazy
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepDecidedStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "compiler")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepDecidedStrictness[0])) -}
0b68b00a289924cf20a88cc08c370311
  $fFromJSONCompileCode_g ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:*:)
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Maybe.Just "compiler")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 Data.Text.Internal.Text))
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Maybe.Just "option")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 Data.Text.Internal.Text)
             GHC.Generics.:*: GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "code")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text))
            GHC.Types.Any)
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (eta :: Data.Aeson.Types.Internal.Value) ->
                 case eta of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "compiler")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "option")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Maybe.Just "code")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 Data.Text.Internal.Text))
                             GHC.Types.Any)
                        Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                        wild
                   Data.Aeson.Types.Internal.Object obj
                   -> WaiLib.$fFromJSONCompileCode1
                        @ GHC.Types.Any
                        WaiLib.$fFromJSONBlock_opts
                        (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Types.Any)
                        obj }) -}
4094009eeca0d4f5c386f1c83b59a3e5
  $fFromJSONCompileCode_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser [WaiLib.CompileCode]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
e902f1c8c2c9384e725bf1d73e73ae08
  $fFromJSONGeneMatrix ::
    Data.Aeson.Types.FromJSON.FromJSON WaiLib.GeneMatrix
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.GeneMatrix
                  WaiLib.$fFromJSONGeneMatrix_$cparseJSON
                  WaiLib.$fFromJSONGeneMatrix_$cparseJSONList -}
ffd85bd44a06b871bbb858e3fabb4270
  $fFromJSONGeneMatrix1 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a2
    -> Data.Aeson.Types.Internal.Object
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:*:)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Maybe.Just "cmd")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 Data.Text.Internal.Text))
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Maybe.Just "ncol")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
             GHC.Generics.:*: GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "nrow")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
            a2)
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U,U)><L,U><L,U>,
     Unfolding: (\ @ a2
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a2)
                   (obj :: Data.Aeson.Types.Internal.Object) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "cmd")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Data.Text.Internal.Text)
                             a2)
                   = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                       @ ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "cmd")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                       @ Data.Aeson.Types.Generic.Zero
                       @ (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                       WaiLib.$fFromJSONGeneMatrix_$s$fSelectorMetaMetaSel2
                       WaiLib.$fFromJSONCompileCode6
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text>_N))
                       @ a2
                       opts
                       fargs
                       obj
                 } in
                 let {
                   m1 :: Data.Aeson.Types.Internal.Parser
                           (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "ncol")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                              a2)
                   = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                       @ ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "ncol")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                       @ Data.Aeson.Types.Generic.Zero
                       @ (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                       WaiLib.$fFromJSONGeneMatrix_$s$fSelectorMetaMetaSel1
                       WaiLib.$fFromJSONGeneMatrix4
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_N))
                       @ a2
                       opts
                       fargs
                       obj
                 } in
                 let {
                   e :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "nrow")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                             a2)
                   = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                       @ ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "nrow")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                       @ Data.Aeson.Types.Generic.Zero
                       @ (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                       WaiLib.$fFromJSONGeneMatrix_$s$fSelectorMetaMetaSel
                       WaiLib.$fFromJSONGeneMatrix4
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_N))
                       @ a2
                       opts
                       fargs
                       obj
                 } in
                 (\ @ f4 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             ((GHC.Generics.:*:)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "cmd")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "ncol")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "nrow")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                                a2)
                             f4
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Maybe.Just "cmd")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.Rec0 Data.Text.Internal.Text)
                          a2>_R)
                    @ f4
                    @ r
                    path
                    kf
                    (\ (a3 :: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "cmd")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                a2) ->
                     m1
                       `cast`
                     (Data.Aeson.Types.Internal.N:Parser[0]
                          <GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "ncol")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                             a2>_R)
                       @ f4
                       @ r
                       path
                       kf
                       (\ (a1 :: GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "ncol")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                   a2) ->
                        e `cast`
                        (Data.Aeson.Types.Internal.N:Parser[0]
                             <GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "nrow")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                a2>_R)
                          @ f4
                          @ r
                          path
                          kf
                          (\ (a4 :: GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "nrow")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                      a2) ->
                           ks
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "cmd")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                @ (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "ncol")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Maybe.Just "nrow")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                                @ a2
                                a3
                                (GHC.Generics.:*:
                                   @ *
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "ncol")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "nrow")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                                   @ a2
                                   a1
                                   a4))))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <(GHC.Generics.:*:)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "cmd")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 Data.Text.Internal.Text))
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "ncol")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Maybe.Just "nrow")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                              a2>_R))) -}
3186ad7c0ca44d0604576ef4df09d26e
  $fFromJSONGeneMatrix2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.$fFromJSONGeneMatrix3) -}
b55ac4322c006a0ed71f0fdb500221fd
  $fFromJSONGeneMatrix3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("nrow"#) -}
ede0b2beaa7d7e117b366968c4f89f1b
  $fFromJSONGeneMatrix4 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a2
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a2)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ GHC.Integer.Type.Integer
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Data.Aeson.Types.FromJSON.$fFromJSONInteger
                   @ a2
                   w3) -}
00df335d04cd5aa8e1787ebf7016b1a6
  $fFromJSONGeneMatrix5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.$fFromJSONGeneMatrix6) -}
13d9719fdf7dcb1f0c9a82fe9a61c955
  $fFromJSONGeneMatrix6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ncol"#) -}
0bd25a45462132119634313f9f49bc62
  $fFromJSONGeneMatrix7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.$fFromJSONGeneMatrix8) -}
fee8323723d762e57770465037aab089
  $fFromJSONGeneMatrix8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cmd"#) -}
e902f1c8c2c9384e725bf1d73e73ae08
  $fFromJSONGeneMatrix_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser WaiLib.GeneMatrix
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "cmd")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "ncol")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Maybe.Just "nrow")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                             GHC.Types.Any)
                   = WaiLib.$fFromJSONGeneMatrix_g x
                 } in
                 (\ @ f5 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success WaiLib.GeneMatrix f5 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "cmd")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Data.Text.Internal.Text))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "ncol")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                           GHC.Generics.:*: GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Maybe.Just "nrow")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                          GHC.Types.Any>_R)
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a3 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "cmd")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "ncol")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "nrow")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                                GHC.Types.Any) ->
                     ks
                       (WaiLib.$fFromJSONGeneMatrix_$cto
                          @ GHC.Types.Any
                          a3
                            `cast`
                          ((Sym (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "GeneMatrix" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.S1
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "cmd")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                      GHC.Generics.:*: (GHC.Generics.S1
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Maybe.Just "ncol")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.Rec0
                                                             GHC.Integer.Type.Integer)
                                                        GHC.Generics.:*: GHC.Generics.S1
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Maybe.Just
                                                                                 "nrow")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.Rec0
                                                                              GHC.Integer.Type.Integer))>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                        <*>_N
                                                                                                                        <GHC.Generics.D>_P
                                                                                                                        <'GHC.Generics.MetaData
                                                                                                                           "GeneMatrix"
                                                                                                                           "WaiLib"
                                                                                                                           "main"
                                                                                                                           'GHC.Types.False>_P
                                                                                                                        <GHC.Generics.M1
                                                                                                                           GHC.Generics.C
                                                                                                                           ('GHC.Generics.MetaCons
                                                                                                                              "GeneMatrix"
                                                                                                                              'GHC.Generics.PrefixI
                                                                                                                              'GHC.Types.True)
                                                                                                                           (GHC.Generics.S1
                                                                                                                              ('GHC.Generics.MetaSel
                                                                                                                                 ('GHC.Maybe.Just
                                                                                                                                    "cmd")
                                                                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                                              (GHC.Generics.Rec0
                                                                                                                                 Data.Text.Internal.Text)
                                                                                                                            GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                                                   ('GHC.Maybe.Just
                                                                                                                                                      "ncol")
                                                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                                                (GHC.Generics.Rec0
                                                                                                                                                   GHC.Integer.Type.Integer)
                                                                                                                                              GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                                                                    ('GHC.Maybe.Just
                                                                                                                                                                       "nrow")
                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                 (GHC.Generics.Rec0
                                                                                                                                                                    GHC.Integer.Type.Integer)))>_R)) <GHC.Types.Any>_N ; Nth:2
                                                                                                                                                                                                                             (Nth:2
                                                                                                                                                                                                                                  (Nth:3
                                                                                                                                                                                                                                       (Nth:3
                                                                                                                                                                                                                                            (Inst (Inst (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                  <GHC.Generics.M1
                                                                                                                                                                                                                                                                     GHC.Generics.D
                                                                                                                                                                                                                                                                     ('GHC.Generics.MetaData
                                                                                                                                                                                                                                                                        "GeneMatrix"
                                                                                                                                                                                                                                                                        "WaiLib"
                                                                                                                                                                                                                                                                        "main"
                                                                                                                                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                                                                                                                                     (GHC.Generics.M1
                                                                                                                                                                                                                                                                        GHC.Generics.C
                                                                                                                                                                                                                                                                        ('GHC.Generics.MetaCons
                                                                                                                                                                                                                                                                           "GeneMatrix"
                                                                                                                                                                                                                                                                           'GHC.Generics.PrefixI
                                                                                                                                                                                                                                                                           'GHC.Types.True)
                                                                                                                                                                                                                                                                        (GHC.Generics.S1
                                                                                                                                                                                                                                                                           ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                                              ('GHC.Maybe.Just
                                                                                                                                                                                                                                                                                 "cmd")
                                                                                                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                                           (GHC.Generics.Rec0
                                                                                                                                                                                                                                                                              Data.Text.Internal.Text)
                                                                                                                                                                                                                                                                         GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                                                                                                                                                                             ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                                                                ('GHC.Maybe.Just
                                                                                                                                                                                                                                                                                                   "ncol")
                                                                                                                                                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                                                             (GHC.Generics.Rec0
                                                                                                                                                                                                                                                                                                GHC.Integer.Type.Integer)
                                                                                                                                                                                                                                                                                           GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                                                                                                                                                                              ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                                                                                 ('GHC.Maybe.Just
                                                                                                                                                                                                                                                                                                                    "nrow")
                                                                                                                                                                                                                                                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                                                                              (GHC.Generics.Rec0
                                                                                                                                                                                                                                                                                                                 GHC.Integer.Type.Integer))))
                                                                                                                                                                                                                                                                     GHC.Types.Any>_R) ; (Nth:3
                                                                                                                                                                                                                                                                                              (Nth:3
                                                                                                                                                                                                                                                                                                   (Nth:3
                                                                                                                                                                                                                                                                                                        (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                                                                                                         ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                                                                                                                                                                                                                                                                                                 Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                                                                                                 GHC.Types.Any>_R
                                                                                                                                                                                                                                                                                                         ->_R <Data.Aeson.Types.Internal.Value>_R
                                                                                                                                                                                                                                                                                                         ->_R (Data.Aeson.Types.Internal.Parser
                                                                                                                                                                                                                                                                                                                 (Sub (Sym (WaiLib.Rep_GeneMatrix[0])) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                                                      <GHC.Generics.Rep
                                                                                                                                                                                                                                                                                                                                                                                         WaiLib.GeneMatrix
                                                                                                                                                                                                                                                                                                                                                                                         GHC.Types.Any>_R)) (Coh <f5>_N
                                                                                                                                                                                                                                                                                                                                                                                                                 (Nth:0
                                                                                                                                                                                                                                                                                                                                                                                                                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                                                                                                <GHC.Generics.Rep
                                                                                                                                                                                                                                                                                                                                                                                                                                   WaiLib.GeneMatrix
                                                                                                                                                                                                                                                                                                                                                                                                                                   GHC.Types.Any>_R) ; (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                                                                                            (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                                                                                                 (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               GHC.Types.Any>_R
                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ->_R <Data.Aeson.Types.Internal.Value>_R
                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ->_R (Data.Aeson.Types.Internal.Parser
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               (Sub (WaiLib.Rep_GeneMatrix[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
enerics.M1
enerics.D
enerics.MetaData
eneMatrix"
aiLib"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "main"
ypes.False)
enerics.M1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    GHC.Generics.C
enerics.MetaCons
eneMatrix"
enerics.PrefixI
ypes.True)
enerics.S1
enerics.MetaSel
aybe.Just
cmd")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text)
enerics.:*: (GHC.Generics.S1
enerics.MetaSel
aybe.Just
ncol")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
nteger.Type.Integer)
enerics.:*: GHC.Generics.S1
enerics.MetaSel
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ('GHC.Maybe.Just
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "nrow")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          (GHC.Generics.Rec0
nteger.Type.Integer))))
ypes.Any>_R))))) (Coh <r>_N
th:0
nst (Sym (Data.Aeson.Types.Internal.N:Parser[0]
enerics.Rep
aiLib.GeneMatrix
ypes.Any>_R) ; (Nth:3
th:3
th:3
ata.Aeson.Types.Internal.Options>_R
ata.Aeson.Types.FromJSON.FromArgs
ata.Aeson.Types.Generic.Zero
ypes.Any>_R
ata.Aeson.Types.Internal.Value>_R
ata.Aeson.Types.Internal.Parser
ub (WaiLib.Rep_GeneMatrix[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
enerics.M1
enerics.D
enerics.MetaData
eneMatrix"
aiLib"
main"
ypes.False)
enerics.M1
enerics.C
enerics.MetaCons
eneMatrix"
enerics.PrefixI
ypes.True)
enerics.S1
enerics.MetaSel
aybe.Just
cmd")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text)
enerics.:*: (GHC.Generics.S1
enerics.MetaSel
aybe.Just
ncol")
enerics.NoSourceUnpackedness
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
nteger.Type.Integer)
enerics.:*: GHC.Generics.S1
enerics.MetaSel
aybe.Just
nrow")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
nteger.Type.Integer))))
ypes.Any>_R)) (Sym (Coh <f5>_N
th:0
ym (Data.Aeson.Types.Internal.N:Parser[0]
enerics.Rep
aiLib.GeneMatrix
ypes.Any>_R) ; (Nth:3
th:3
th:3
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (<Data.Aeson.Types.Internal.Options>_R
ata.Aeson.Types.FromJSON.FromArgs
ata.Aeson.Types.Generic.Zero
ypes.Any>_R
ata.Aeson.Types.Internal.Value>_R
ata.Aeson.Types.Internal.Parser
ub (WaiLib.Rep_GeneMatrix[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <GHC.Generics.M1
enerics.D
enerics.MetaData
eneMatrix"
aiLib"
main"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  'GHC.Types.False)
enerics.M1
enerics.C
enerics.MetaCons
eneMatrix"
enerics.PrefixI
ypes.True)
enerics.S1
enerics.MetaSel
aybe.Just
cmd")
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text)
enerics.:*: (GHC.Generics.S1
enerics.MetaSel
aybe.Just
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             "ncol")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          GHC.Integer.Type.Integer)
enerics.:*: GHC.Generics.S1
enerics.MetaSel
aybe.Just
nrow")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
nteger.Type.Integer))))
ypes.Any>_R))))))))))))))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <WaiLib.GeneMatrix>_R))) -}
e902f1c8c2c9384e725bf1d73e73ae08
  $fFromJSONGeneMatrix_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [WaiLib.GeneMatrix]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds5 :: Data.Aeson.Types.Internal.Value) ->
                 case ds5 of wild {
                   DEFAULT
                   -> let {
                        msg20 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            WaiLib.$fFromJSONBlock3
                            (GHC.CString.unpackAppendCString#
                               WaiLib.$fFromJSONBlock2
                               (GHC.CString.unpackAppendCString#
                                  WaiLib.$fFromJSONBlock1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [WaiLib.GeneMatrix] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg20)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[WaiLib.GeneMatrix]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo7 :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [2] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds6 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo7 (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      WaiLib.$fFromJSONGeneMatrix_go 0# ($wgo7 0#) } }) -}
e902f1c8c2c9384e725bf1d73e73ae08
  $fFromJSONGeneMatrix_$cto ::
    GHC.Generics.Rep WaiLib.GeneMatrix x -> WaiLib.GeneMatrix
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds5 :: GHC.Generics.Rep WaiLib.GeneMatrix x) ->
                 case ds5
                        `cast`
                      ((Sub (WaiLib.Rep_GeneMatrix[0]) ; (GHC.Generics.N:M1[0]
                                                              <*>_N
                                                              <GHC.Generics.D>_P
                                                              <'GHC.Generics.MetaData
                                                                 "GeneMatrix"
                                                                 "WaiLib"
                                                                 "main"
                                                                 'GHC.Types.False>_P
                                                              <GHC.Generics.M1
                                                                 GHC.Generics.C
                                                                 ('GHC.Generics.MetaCons
                                                                    "GeneMatrix"
                                                                    'GHC.Generics.PrefixI
                                                                    'GHC.Types.True)
                                                                 (GHC.Generics.M1
                                                                    GHC.Generics.S
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Maybe.Just "cmd")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.NoSourceStrictness
                                                                       'GHC.Generics.DecidedLazy)
                                                                    (GHC.Generics.K1
                                                                       GHC.Generics.R
                                                                       Data.Text.Internal.Text)
                                                                  GHC.Generics.:*: (GHC.Generics.M1
                                                                                      GHC.Generics.S
                                                                                      ('GHC.Generics.MetaSel
                                                                                         ('GHC.Maybe.Just
                                                                                            "ncol")
                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                         'GHC.Generics.DecidedLazy)
                                                                                      (GHC.Generics.K1
                                                                                         GHC.Generics.R
                                                                                         GHC.Integer.Type.Integer)
                                                                                    GHC.Generics.:*: GHC.Generics.M1
                                                                                                       GHC.Generics.S
                                                                                                       ('GHC.Generics.MetaSel
                                                                                                          ('GHC.Maybe.Just
                                                                                                             "nrow")
                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                       (GHC.Generics.K1
                                                                                                          GHC.Generics.R
                                                                                                          GHC.Integer.Type.Integer)))>_R ; GHC.Generics.N:M1[0]
                                                                                                                                               <*>_N
                                                                                                                                               <GHC.Generics.C>_P
                                                                                                                                               <'GHC.Generics.MetaCons
                                                                                                                                                  "GeneMatrix"
                                                                                                                                                  'GHC.Generics.PrefixI
                                                                                                                                                  'GHC.Types.True>_P
                                                                                                                                               <GHC.Generics.M1
                                                                                                                                                  GHC.Generics.S
                                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                                     ('GHC.Maybe.Just
                                                                                                                                                        "cmd")
                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                                  (GHC.Generics.K1
                                                                                                                                                     GHC.Generics.R
                                                                                                                                                     Data.Text.Internal.Text)
                                                                                                                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                    GHC.Generics.S
                                                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                                                       ('GHC.Maybe.Just
                                                                                                                                                                          "ncol")
                                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                                    (GHC.Generics.K1
                                                                                                                                                                       GHC.Generics.R
                                                                                                                                                                       GHC.Integer.Type.Integer)
                                                                                                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                     GHC.Generics.S
                                                                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                                                                        ('GHC.Maybe.Just
                                                                                                                                                                                           "nrow")
                                                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                                                     (GHC.Generics.K1
                                                                                                                                                                                        GHC.Generics.R
                                                                                                                                                                                        GHC.Integer.Type.Integer))>_R)) <x>_N) of wild { GHC.Generics.:*: ds6 ds7 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds8 ds9 ->
                 WaiLib.GeneMatrix
                   ds6
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "cmd")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Text.Internal.Text>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                  <*>_N
                                                                  <GHC.Generics.R>_P
                                                                  <Data.Text.Internal.Text>_R
                                                                  <x>_P)
                   ds8
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "ncol")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           GHC.Integer.Type.Integer>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                   <*>_N
                                                                   <GHC.Generics.R>_P
                                                                   <GHC.Integer.Type.Integer>_R
                                                                   <x>_P)
                   ds9
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "nrow")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           GHC.Integer.Type.Integer>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                   <*>_N
                                                                   <GHC.Generics.R>_P
                                                                   <GHC.Integer.Type.Integer>_R
                                                                   <x>_P) } }) -}
e4e93aaf47ae492f6ee692f80b983086
  $fFromJSONGeneMatrix_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "nrow")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Maybe.Just "nrow")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "nrow")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   WaiLib.$fFromJSONGeneMatrix2)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "nrow")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceUnpackedness
                          `cast`
                        (GHC.Generics.D:R:SingSourceUnpackednessa0[0] <'GHC.Generics.NoSourceUnpackedness>_N) of wild { GHC.Generics.SNoSourceUnpackedness co ->
                   GHC.Generics.NoSourceUnpackedness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "nrow")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "nrow")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceStrictness
                          `cast`
                        (GHC.Generics.D:R:SingSourceStrictnessa0[0] <'GHC.Generics.NoSourceStrictness>_N) of wild { GHC.Generics.SNoSourceStrictness co ->
                   GHC.Generics.NoSourceStrictness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "nrow")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "nrow")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSDecidedLazy
                          `cast`
                        (GHC.Generics.D:R:SingDecidedStrictnessa0[0] <'GHC.Generics.DecidedLazy>_N) of wild { GHC.Generics.SDecidedLazy co ->
                   GHC.Generics.DecidedLazy
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepDecidedStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "nrow")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepDecidedStrictness[0])) -}
5637a505c220a9ec17e92490f767b06c
  $fFromJSONGeneMatrix_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "ncol")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Maybe.Just "ncol")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "ncol")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   WaiLib.$fFromJSONGeneMatrix5)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "ncol")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceUnpackedness
                          `cast`
                        (GHC.Generics.D:R:SingSourceUnpackednessa0[0] <'GHC.Generics.NoSourceUnpackedness>_N) of wild { GHC.Generics.SNoSourceUnpackedness co ->
                   GHC.Generics.NoSourceUnpackedness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "ncol")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "ncol")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceStrictness
                          `cast`
                        (GHC.Generics.D:R:SingSourceStrictnessa0[0] <'GHC.Generics.NoSourceStrictness>_N) of wild { GHC.Generics.SNoSourceStrictness co ->
                   GHC.Generics.NoSourceStrictness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "ncol")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "ncol")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSDecidedLazy
                          `cast`
                        (GHC.Generics.D:R:SingDecidedStrictnessa0[0] <'GHC.Generics.DecidedLazy>_N) of wild { GHC.Generics.SDecidedLazy co ->
                   GHC.Generics.DecidedLazy
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepDecidedStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "ncol")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepDecidedStrictness[0])) -}
04f36d479bdb6d0e8b5fe56fcc672d5b
  $fFromJSONGeneMatrix_$s$fSelectorMetaMetaSel2 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "cmd")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Maybe.Just "cmd")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "cmd")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   WaiLib.$fFromJSONGeneMatrix7)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "cmd")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceUnpackedness
                          `cast`
                        (GHC.Generics.D:R:SingSourceUnpackednessa0[0] <'GHC.Generics.NoSourceUnpackedness>_N) of wild { GHC.Generics.SNoSourceUnpackedness co ->
                   GHC.Generics.NoSourceUnpackedness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "cmd")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "cmd")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceStrictness
                          `cast`
                        (GHC.Generics.D:R:SingSourceStrictnessa0[0] <'GHC.Generics.NoSourceStrictness>_N) of wild { GHC.Generics.SNoSourceStrictness co ->
                   GHC.Generics.NoSourceStrictness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "cmd")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "cmd")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSDecidedLazy
                          `cast`
                        (GHC.Generics.D:R:SingDecidedStrictnessa0[0] <'GHC.Generics.DecidedLazy>_N) of wild { GHC.Generics.SDecidedLazy co ->
                   GHC.Generics.DecidedLazy
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepDecidedStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "cmd")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepDecidedStrictness[0])) -}
5f933dd2b2e94e05d7f3a6db1c1c0650
  $fFromJSONGeneMatrix_g ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:*:)
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Maybe.Just "cmd")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 Data.Text.Internal.Text))
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Maybe.Just "ncol")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
             GHC.Generics.:*: GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "nrow")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
            GHC.Types.Any)
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (eta :: Data.Aeson.Types.Internal.Value) ->
                 case eta of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "cmd")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "ncol")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Maybe.Just "nrow")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                             GHC.Types.Any)
                        Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                        wild
                   Data.Aeson.Types.Internal.Object obj
                   -> WaiLib.$fFromJSONGeneMatrix1
                        @ GHC.Types.Any
                        WaiLib.$fFromJSONBlock_opts
                        (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Types.Any)
                        obj }) -}
e902f1c8c2c9384e725bf1d73e73ae08
  $fFromJSONGeneMatrix_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser [WaiLib.GeneMatrix]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
d389d91074ea84663a226202bbcac89a
  $fFromJSONMBlock ::
    Data.Aeson.Types.FromJSON.FromJSON WaiLib.MBlock
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.MBlock
                  WaiLib.$fFromJSONMBlock_$cparseJSON
                  WaiLib.$fFromJSONMBlock_$cparseJSONList -}
3009506690ba263037838323390e1aac
  $fFromJSONMBlock1 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Maybe.Just "mblock")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 [GHC.Integer.Type.Integer])
            a)
  {- Arity: 2, Strictness: <L,1*U(U,U,U,U,U,1*U,U)><L,U>,
     Unfolding: (\ @ a
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a) ->
                 let {
                   g :: Data.Aeson.Types.Internal.Value
                        -> Data.Tagged.Tagged
                             Data.Aeson.Types.Generic.True
                             (Data.Aeson.Types.Internal.Parser
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "mblock")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 [GHC.Integer.Type.Integer])
                                   a))
                   = case opts of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                     case ww6 of wild {
                       GHC.Types.False
                       -> let {
                            g1 :: Data.Aeson.Types.Internal.Object
                                  -> Data.Aeson.Types.Internal.Parser
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Maybe.Just "mblock")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R [GHC.Integer.Type.Integer])
                                          a)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Maybe.Just "mblock")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R [GHC.Integer.Type.Integer])
                                WaiLib.$fFromJSONMBlock_$s$fSelectorMetaMetaSel
                                WaiLib.$fFromJSONMBlock3
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1
                                             GHC.Generics.R [GHC.Integer.Type.Integer]>_N))
                                @ a
                                (Data.Aeson.Types.Internal.Options
                                   ww1
                                   ww2
                                   ww3
                                   ww4
                                   ww5
                                   GHC.Types.False
                                   ww7)
                                fargs
                          } in
                          (\ (x :: Data.Aeson.Types.Internal.Value) ->
                           case x of wild1 {
                             DEFAULT
                             -> Data.Aeson.Types.FromJSON.typeMismatch
                                  @ (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Maybe.Just "mblock")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.K1 GHC.Generics.R [GHC.Integer.Type.Integer])
                                       a)
                                  Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityM1True1
                                  wild1
                             Data.Aeson.Types.Internal.Object obj -> g1 obj })
                            `cast`
                          (<Data.Aeson.Types.Internal.Value>_R
                           ->_R Sym (Data.Tagged.N:Tagged[0]
                                         <*>_N
                                         <Data.Aeson.Types.Generic.True>_P
                                         <Data.Aeson.Types.Internal.Parser
                                            (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Maybe.Just "mblock")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R [GHC.Integer.Type.Integer])
                                               a)>_R))
                       GHC.Types.True
                       -> (WaiLib.$fFromJSONMBlock2 @ a)
                            `cast`
                          (<Data.Aeson.Types.Internal.Value>_R
                           ->_R Sym (Data.Tagged.N:Tagged[0]
                                         <*>_N
                                         <Data.Aeson.Types.Generic.True>_P
                                         <Data.Aeson.Types.Internal.Parser
                                            (GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Maybe.Just "mblock")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R [GHC.Integer.Type.Integer])
                                               a)>_R)) } }
                 } in
                 (\ (x :: Data.Aeson.Types.Internal.Value) -> g x)
                   `cast`
                 (<Data.Aeson.Types.Internal.Value>_R
                  ->_R Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Parser
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "mblock")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 [GHC.Integer.Type.Integer])
                                 a)>_R)) -}
7cec2b6bcf9f2a31826c79c8e55b6e62
  $fFromJSONMBlock2 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Maybe.Just "mblock")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R [GHC.Integer.Type.Integer])
            a)
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ @ a (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser [GHC.Integer.Type.Integer]
                   = Data.Aeson.Types.FromJSON.$fFromJSONInteger_$cparseJSONList x
                 } in
                 (\ @ f5 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "mblock")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R [GHC.Integer.Type.Integer])
                                a)
                             f5
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <[GHC.Integer.Type.Integer]>_R)
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a3 :: [GHC.Integer.Type.Integer]) ->
                     ks
                       a3
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <[GHC.Integer.Type.Integer]>_R
                                 <a>_P) ; Sym (GHC.Generics.N:M1[0]
                                                   <*>_N
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Maybe.Just "mblock")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      [GHC.Integer.Type.Integer]>_R) <a>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "mblock")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R [GHC.Integer.Type.Integer])
                              a>_R))) -}
6649184f7536f9f7e988b5894ff57e05
  $fFromJSONMBlock3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Integer.Type.Integer] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a2
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a2)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [GHC.Integer.Type.Integer]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   WaiLib.$fFromJSONMBlock_$s$fFromJSON[]
                   @ a2
                   w3) -}
cf9ff9d88e6297d6d95939ccc5eb2ae6
  $fFromJSONMBlock4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.$fFromJSONMBlock5) -}
2dd1859500be4dac40f4ad7ae54c88a9
  $fFromJSONMBlock5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("mblock"#) -}
d389d91074ea84663a226202bbcac89a
  $fFromJSONMBlock_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser WaiLib.MBlock
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "mblock")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 [GHC.Integer.Type.Integer])
                             GHC.Types.Any)
                   = WaiLib.$fFromJSONMBlock_g x
                 } in
                 (\ @ f5 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success WaiLib.MBlock f5 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Maybe.Just "mblock")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.Rec0 [GHC.Integer.Type.Integer])
                          GHC.Types.Any>_R)
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a3 :: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "mblock")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 [GHC.Integer.Type.Integer])
                                GHC.Types.Any) ->
                     ks
                       (WaiLib.MBlock
                          a3
                            `cast`
                          ((Sym (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "MBlock" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "mblock")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0
                                           [GHC.Integer.Type.Integer])>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                      <*>_N
                                                                                      <GHC.Generics.D>_P
                                                                                      <'GHC.Generics.MetaData
                                                                                         "MBlock"
                                                                                         "WaiLib"
                                                                                         "main"
                                                                                         'GHC.Types.False>_P
                                                                                      <GHC.Generics.M1
                                                                                         GHC.Generics.C
                                                                                         ('GHC.Generics.MetaCons
                                                                                            "MBlock"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.True)
                                                                                         (GHC.Generics.M1
                                                                                            GHC.Generics.S
                                                                                            ('GHC.Generics.MetaSel
                                                                                               ('GHC.Maybe.Just
                                                                                                  "mblock")
                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                               'GHC.Generics.DecidedLazy)
                                                                                            (GHC.Generics.Rec0
                                                                                               [GHC.Integer.Type.Integer]))>_R)) <GHC.Types.Any>_N ; (Nth:2
                                                                                                                                                          (Nth:2
                                                                                                                                                               (Nth:3
                                                                                                                                                                    (Nth:3
                                                                                                                                                                         (Inst (Inst (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                               <GHC.Generics.M1
                                                                                                                                                                                                  GHC.Generics.D
                                                                                                                                                                                                  ('GHC.Generics.MetaData
                                                                                                                                                                                                     "MBlock"
                                                                                                                                                                                                     "WaiLib"
                                                                                                                                                                                                     "main"
                                                                                                                                                                                                     'GHC.Types.False)
                                                                                                                                                                                                  (GHC.Generics.M1
                                                                                                                                                                                                     GHC.Generics.C
                                                                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                                                                        "MBlock"
                                                                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                                                                        'GHC.Types.True)
                                                                                                                                                                                                     (GHC.Generics.M1
                                                                                                                                                                                                        GHC.Generics.S
                                                                                                                                                                                                        ('GHC.Generics.MetaSel
                                                                                                                                                                                                           ('GHC.Maybe.Just
                                                                                                                                                                                                              "mblock")
                                                                                                                                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                        (GHC.Generics.Rec0
                                                                                                                                                                                                           [GHC.Integer.Type.Integer])))
                                                                                                                                                                                                  GHC.Types.Any>_R) ; (Nth:3
                                                                                                                                                                                                                           (Nth:3
                                                                                                                                                                                                                                (Nth:3
                                                                                                                                                                                                                                     (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                                      ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                                                                                                                                                                                                                              Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                              GHC.Types.Any>_R
                                                                                                                                                                                                                                      ->_R <Data.Aeson.Types.Internal.Value>_R
                                                                                                                                                                                                                                      ->_R (Data.Aeson.Types.Internal.Parser
                                                                                                                                                                                                                                              (Sub (Sym (WaiLib.Rep_MBlock[0])) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                               <GHC.Generics.Rep
                                                                                                                                                                                                                                                                                                                  WaiLib.MBlock
                                                                                                                                                                                                                                                                                                                  GHC.Types.Any>_R)) (Coh <f5>_N
                                                                                                                                                                                                                                                                                                                                          (Nth:0
                                                                                                                                                                                                                                                                                                                                               (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                         <GHC.Generics.Rep
                                                                                                                                                                                                                                                                                                                                                            WaiLib.MBlock
                                                                                                                                                                                                                                                                                                                                                            GHC.Types.Any>_R) ; (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                     (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                          (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                               (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                                                                                                                                                                                                ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                                                                                                                                                                                                                                                                                                                                                                                        Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                                                                                                                                                                                        GHC.Types.Any>_R
                                                                                                                                                                                                                                                                                                                                                                                                ->_R <Data.Aeson.Types.Internal.Value>_R
                                                                                                                                                                                                                                                                                                                                                                                                ->_R (Data.Aeson.Types.Internal.Parser
                                                                                                                                                                                                                                                                                                                                                                                                        (Sub (WaiLib.Rep_MBlock[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   <GHC.Generics.M1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      GHC.Generics.D
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ('GHC.Generics.MetaData
                                                                                                                                                                                                                                                                                                                                                                                                                                                                         "MBlock"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                         "WaiLib"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                         "main"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                         'GHC.Types.False)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      (GHC.Generics.M1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                         GHC.Generics.C
                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ('GHC.Generics.MetaCons
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "MBlock"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            'GHC.Generics.PrefixI
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            'GHC.Types.True)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                         (GHC.Generics.M1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GHC.Generics.S
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ('GHC.Maybe.Just
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  "mblock")
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            (GHC.Generics.Rec0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               [GHC.Integer.Type.Integer])))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      GHC.Types.Any>_R))))) (Coh <r>_N
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 (Nth:0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      (Inst (Sym (Data.Aeson.Types.Internal.N:Parser[0]
enerics.Rep
aiLib.MBlock
ypes.Any>_R) ; (Nth:3
th:3
th:3
ata.Aeson.Types.Internal.Options>_R
ata.Aeson.Types.FromJSON.FromArgs
ata.Aeson.Types.Generic.Zero
ypes.Any>_R
ata.Aeson.Types.Internal.Value>_R
ata.Aeson.Types.Internal.Parser
ub (WaiLib.Rep_MBlock[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
enerics.M1
enerics.D
enerics.MetaData
lock"
aiLib"
main"
ypes.False)
enerics.M1
enerics.C
enerics.MetaCons
lock"
enerics.PrefixI
ypes.True)
enerics.M1
enerics.S
enerics.MetaSel
aybe.Just
mblock")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            [GHC.Integer.Type.Integer])))
ypes.Any>_R)) (Sym (Coh <f5>_N
th:0
ym (Data.Aeson.Types.Internal.N:Parser[0]
enerics.Rep
aiLib.MBlock
ypes.Any>_R) ; (Nth:3
th:3
th:3
ata.Aeson.Types.Internal.Options>_R
ata.Aeson.Types.FromJSON.FromArgs
ata.Aeson.Types.Generic.Zero
ypes.Any>_R
ata.Aeson.Types.Internal.Value>_R
ata.Aeson.Types.Internal.Parser
ub (WaiLib.Rep_MBlock[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
enerics.M1
enerics.D
enerics.MetaData
lock"
aiLib"
main"
ypes.False)
enerics.M1
enerics.C
enerics.MetaCons
lock"
enerics.PrefixI
ypes.True)
enerics.M1
enerics.S
enerics.MetaSel
aybe.Just
mblock")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
nteger.Type.Integer])))
ypes.Any>_R)))))))))))) ; ((Sub (WaiLib.Rep_MBlock[0]) ; (GHC.Generics.N:M1[0]

enerics.D>_P
enerics.MetaData
lock"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  "WaiLib"
main"
ypes.False>_P
enerics.M1
enerics.C
enerics.MetaCons
lock"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     'GHC.Generics.PrefixI
ypes.True)
enerics.M1
enerics.S
enerics.MetaSel
aybe.Just
mblock")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.K1
enerics.R
nteger.Type.Integer]))>_R ; (GHC.Generics.N:M1[0]

enerics.C>_P
enerics.MetaCons
lock"
enerics.PrefixI
ypes.True>_P
enerics.M1
enerics.S
enerics.MetaSel
aybe.Just
mblock")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     'GHC.Generics.DecidedLazy)
enerics.K1
enerics.R
nteger.Type.Integer])>_R ; GHC.Generics.N:M1[0]

enerics.S>_P
enerics.MetaSel
aybe.Just
mblock")
enerics.NoSourceUnpackedness
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness
enerics.DecidedLazy>_P
enerics.K1
enerics.R
nteger.Type.Integer]>_R))) <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]

enerics.R>_P
nteger.Type.Integer]>_R
ypes.Any>_P))))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <WaiLib.MBlock>_R))) -}
d389d91074ea84663a226202bbcac89a
  $fFromJSONMBlock_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [WaiLib.MBlock]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds5 :: Data.Aeson.Types.Internal.Value) ->
                 case ds5 of wild {
                   DEFAULT
                   -> let {
                        msg20 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            WaiLib.$fFromJSONBlock3
                            (GHC.CString.unpackAppendCString#
                               WaiLib.$fFromJSONBlock2
                               (GHC.CString.unpackAppendCString#
                                  WaiLib.$fFromJSONBlock1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success [WaiLib.MBlock] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg20)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0] <[WaiLib.MBlock]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo7 :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [2] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds6 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo7 (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      WaiLib.$fFromJSONMBlock_go 0# ($wgo7 0#) } }) -}
77edff6a4174b59afe13f611501af521
  $fFromJSONMBlock_$s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON [GHC.Integer.Type.Integer]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Integer.Type.Integer]
                  Data.Aeson.Types.FromJSON.$fFromJSONInteger_$cparseJSONList
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ GHC.Integer.Type.Integer
                     Data.Aeson.Types.FromJSON.$fFromJSONInteger) -}
f91237b6d163cc224e1347550bcab0e0
  $fFromJSONMBlock_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "mblock")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Maybe.Just "mblock")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "mblock")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   WaiLib.$fFromJSONMBlock4)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "mblock")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceUnpackedness
                          `cast`
                        (GHC.Generics.D:R:SingSourceUnpackednessa0[0] <'GHC.Generics.NoSourceUnpackedness>_N) of wild { GHC.Generics.SNoSourceUnpackedness co ->
                   GHC.Generics.NoSourceUnpackedness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "mblock")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "mblock")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceStrictness
                          `cast`
                        (GHC.Generics.D:R:SingSourceStrictnessa0[0] <'GHC.Generics.NoSourceStrictness>_N) of wild { GHC.Generics.SNoSourceStrictness co ->
                   GHC.Generics.NoSourceStrictness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "mblock")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "mblock")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSDecidedLazy
                          `cast`
                        (GHC.Generics.D:R:SingDecidedStrictnessa0[0] <'GHC.Generics.DecidedLazy>_N) of wild { GHC.Generics.SDecidedLazy co ->
                   GHC.Generics.DecidedLazy
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepDecidedStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "mblock")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepDecidedStrictness[0])) -}
d69f9bf5ddc52fb3ff3e3c9a96d8b311
  $fFromJSONMBlock_g ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Maybe.Just "mblock")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 [GHC.Integer.Type.Integer])
            GHC.Types.Any)
  {- Unfolding: (WaiLib.$fFromJSONMBlock1
                   @ GHC.Types.Any
                   WaiLib.$fFromJSONBlock_opts
                   (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Types.Any)) -}
d389d91074ea84663a226202bbcac89a
  $fFromJSONMBlock_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser [WaiLib.MBlock]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
f1a65188febf657dbbd7006cade26c93
  $fFromJSONMatInt ::
    Data.Aeson.Types.FromJSON.FromJSON WaiLib.MatInt
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.MatInt
                  WaiLib.$fFromJSONMatInt_$cparseJSON
                  WaiLib.$fFromJSONMatInt_$cparseJSONList -}
c8e29b81696c4ce7f79088844dc5e866
  $fFromJSONMatInt1 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a2
    -> Data.Aeson.Types.Internal.Object
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:*:)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Maybe.Just "name")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 Data.Text.Internal.Text))
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Maybe.Just "matrix")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 [[GHC.Integer.Type.Integer]]))
            a2)
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U,U)><L,U><L,U>,
     Unfolding: (\ @ a2
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a2)
                   (obj :: Data.Aeson.Types.Internal.Object) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "name")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Data.Text.Internal.Text)
                             a2)
                   = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                       @ ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "name")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                       @ Data.Aeson.Types.Generic.Zero
                       @ (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                       WaiLib.$fFromJSONMatInt_$s$fSelectorMetaMetaSel1
                       WaiLib.$fFromJSONCompileCode6
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text>_N))
                       @ a2
                       opts
                       fargs
                       obj
                 } in
                 let {
                   e :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "matrix")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 [[GHC.Integer.Type.Integer]])
                             a2)
                   = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                       @ ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "matrix")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                       @ Data.Aeson.Types.Generic.Zero
                       @ (GHC.Generics.K1 GHC.Generics.R [[GHC.Integer.Type.Integer]])
                       WaiLib.$fFromJSONMatInt_$s$fSelectorMetaMetaSel
                       WaiLib.$fFromJSONMatInt2
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.K1 GHC.Generics.R [[GHC.Integer.Type.Integer]]>_N))
                       @ a2
                       opts
                       fargs
                       obj
                 } in
                 (\ @ f4 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             ((GHC.Generics.:*:)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "name")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "matrix")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 [[GHC.Integer.Type.Integer]]))
                                a2)
                             f4
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Maybe.Just "name")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.Rec0 Data.Text.Internal.Text)
                          a2>_R)
                    @ f4
                    @ r
                    path
                    kf
                    (\ (a3 :: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "name")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                a2) ->
                     e `cast`
                     (Data.Aeson.Types.Internal.N:Parser[0]
                          <GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "matrix")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 [[GHC.Integer.Type.Integer]])
                             a2>_R)
                       @ f4
                       @ r
                       path
                       kf
                       (\ (a4 :: GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "matrix")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 [[GHC.Integer.Type.Integer]])
                                   a2) ->
                        ks
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Maybe.Just "name")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 Data.Text.Internal.Text))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Maybe.Just "matrix")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 [[GHC.Integer.Type.Integer]]))
                             @ a2
                             a3
                             a4))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <(GHC.Generics.:*:)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "name")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 Data.Text.Internal.Text))
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "matrix")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 [[GHC.Integer.Type.Integer]]))
                              a2>_R))) -}
79c4f26bd2176301e3582a11539bf8ae
  $fFromJSONMatInt2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [[GHC.Integer.Type.Integer]] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a2
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a2)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [[GHC.Integer.Type.Integer]]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   WaiLib.$fFromJSONMatInt3
                   @ a2
                   w3) -}
17aa169b64fb45d59a791f7d7efbcde5
  $fFromJSONMatInt3 ::
    Data.Aeson.Types.FromJSON.FromJSON [[GHC.Integer.Type.Integer]]
  {- Unfolding: (Data.Aeson.Types.FromJSON.$fFromJSON[]
                   @ [GHC.Integer.Type.Integer]
                   WaiLib.$fFromJSONMBlock_$s$fFromJSON[]) -}
0af6293a0e13e8a439343a5342e19991
  $fFromJSONMatInt4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.$fFromJSONMatInt5) -}
cec5fb7e20ce9a28f218db90a203d99f
  $fFromJSONMatInt5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("matrix"#) -}
26365b7bd5effb376fcb515334196854
  $fFromJSONMatInt6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.$fFromJSONMatInt_addr#) -}
f1a65188febf657dbbd7006cade26c93
  $fFromJSONMatInt_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser WaiLib.MatInt
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "name")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "matrix")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 [[GHC.Integer.Type.Integer]]))
                             GHC.Types.Any)
                   = case x of wild {
                       DEFAULT
                       -> let {
                            msg20 :: GHC.Base.String
                            = GHC.CString.unpackAppendCString#
                                Data.Aeson.Types.FromJSON.typeMismatch4
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                                   (GHC.CString.unpackAppendCString#
                                      Data.Aeson.Types.FromJSON.typeMismatch3
                                      (case wild of wild1 {
                                         Data.Aeson.Types.Internal.Array ds5
                                         -> Data.Aeson.Types.FromJSON.typeMismatch1
                                         Data.Aeson.Types.Internal.String ds5
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                         Data.Aeson.Types.Internal.Number ds5
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                         Data.Aeson.Types.Internal.Bool ds5
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                         Data.Aeson.Types.Internal.Null
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                          } in
                          (\ @ f4 :: * -> *
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f4 r)[OneShot]
                             (_ks :: Data.Aeson.Types.Internal.Success
                                       ((GHC.Generics.:*:)
                                          (GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Maybe.Just "name")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                          (GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Maybe.Just "matrix")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 [[GHC.Integer.Type.Integer]]))
                                          GHC.Types.Any)
                                       f4
                                       r)[OneShot] ->
                           kf
                             (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                             msg20)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <(GHC.Generics.:*:)
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Maybe.Just "name")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Maybe.Just "matrix")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 [[GHC.Integer.Type.Integer]]))
                                       GHC.Types.Any>_R))
                       Data.Aeson.Types.Internal.Object obj
                       -> WaiLib.$fFromJSONMatInt1
                            @ GHC.Types.Any
                            WaiLib.$fFromJSONBlock_opts
                            (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Types.Any)
                            obj }
                 } in
                 (\ @ f5 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success WaiLib.MatInt f5 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "name")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Data.Text.Internal.Text))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "matrix")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 [[GHC.Integer.Type.Integer]]))
                          GHC.Types.Any>_R)
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a3 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "name")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "matrix")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 [[GHC.Integer.Type.Integer]]))
                                GHC.Types.Any) ->
                     ks
                       (case a3 of wild { GHC.Generics.:*: ds5 ds6 ->
                        WaiLib.MatInt
                          ds5
                            `cast`
                          (GHC.Generics.N:M1[0]
                               <*>_N
                               <GHC.Generics.S>_P
                               <'GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "name")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy>_P
                               <GHC.Generics.K1
                                  GHC.Generics.R
                                  Data.Text.Internal.Text>_R <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                     <*>_N
                                                                                     <GHC.Generics.R>_P
                                                                                     <Data.Text.Internal.Text>_R
                                                                                     <GHC.Types.Any>_P)
                          ds6
                            `cast`
                          (GHC.Generics.N:M1[0]
                               <*>_N
                               <GHC.Generics.S>_P
                               <'GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "matrix")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy>_P
                               <GHC.Generics.K1
                                  GHC.Generics.R
                                  [[GHC.Integer.Type.Integer]]>_R <GHC.Types.Any>_N ; GHC.Generics.N:K1[0]
                                                                                          <*>_N
                                                                                          <GHC.Generics.R>_P
                                                                                          <[[GHC.Integer.Type.Integer]]>_R
                                                                                          <GHC.Types.Any>_P) })))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <WaiLib.MatInt>_R))) -}
f1a65188febf657dbbd7006cade26c93
  $fFromJSONMatInt_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [WaiLib.MatInt]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds5 :: Data.Aeson.Types.Internal.Value) ->
                 case ds5 of wild {
                   DEFAULT
                   -> let {
                        msg20 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            WaiLib.$fFromJSONBlock3
                            (GHC.CString.unpackAppendCString#
                               WaiLib.$fFromJSONBlock2
                               (GHC.CString.unpackAppendCString#
                                  WaiLib.$fFromJSONBlock1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success [WaiLib.MatInt] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg20)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0] <[WaiLib.MatInt]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo7 :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [2] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds6 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo7 (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      WaiLib.$fFromJSONMatInt_go 0# ($wgo7 0#) } }) -}
ac6ed2d5f122546d2f955cf2f6f1af0e
  $fFromJSONMatInt_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "matrix")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Maybe.Just "matrix")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "matrix")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   WaiLib.$fFromJSONMatInt4)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "matrix")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceUnpackedness
                          `cast`
                        (GHC.Generics.D:R:SingSourceUnpackednessa0[0] <'GHC.Generics.NoSourceUnpackedness>_N) of wild { GHC.Generics.SNoSourceUnpackedness co ->
                   GHC.Generics.NoSourceUnpackedness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "matrix")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "matrix")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceStrictness
                          `cast`
                        (GHC.Generics.D:R:SingSourceStrictnessa0[0] <'GHC.Generics.NoSourceStrictness>_N) of wild { GHC.Generics.SNoSourceStrictness co ->
                   GHC.Generics.NoSourceStrictness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "matrix")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "matrix")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSDecidedLazy
                          `cast`
                        (GHC.Generics.D:R:SingDecidedStrictnessa0[0] <'GHC.Generics.DecidedLazy>_N) of wild { GHC.Generics.SDecidedLazy co ->
                   GHC.Generics.DecidedLazy
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepDecidedStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "matrix")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepDecidedStrictness[0])) -}
6e5a4028b70bd80fa98f24923b38caf8
  $fFromJSONMatInt_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "name")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Maybe.Just "name")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "name")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   WaiLib.$fFromJSONMatInt6)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "name")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceUnpackedness
                          `cast`
                        (GHC.Generics.D:R:SingSourceUnpackednessa0[0] <'GHC.Generics.NoSourceUnpackedness>_N) of wild { GHC.Generics.SNoSourceUnpackedness co ->
                   GHC.Generics.NoSourceUnpackedness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "name")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "name")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceStrictness
                          `cast`
                        (GHC.Generics.D:R:SingSourceStrictnessa0[0] <'GHC.Generics.NoSourceStrictness>_N) of wild { GHC.Generics.SNoSourceStrictness co ->
                   GHC.Generics.NoSourceStrictness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "name")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "name")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSDecidedLazy
                          `cast`
                        (GHC.Generics.D:R:SingDecidedStrictnessa0[0] <'GHC.Generics.DecidedLazy>_N) of wild { GHC.Generics.SDecidedLazy co ->
                   GHC.Generics.DecidedLazy
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepDecidedStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "name")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepDecidedStrictness[0])) -}
80e060e3d1b1d8d582227430ae9a94df
  $fFromJSONMatInt_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("name"#) -}
f1a65188febf657dbbd7006cade26c93
  $fFromJSONMatInt_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser [WaiLib.MatInt]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
7b43be4a14f888fb43c27f767eb58be1
  $fFromJSONReplyCode ::
    Data.Aeson.Types.FromJSON.FromJSON WaiLib.ReplyCode
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.ReplyCode
                  WaiLib.$fFromJSONReplyCode_$cparseJSON
                  WaiLib.$fFromJSONReplyCode_$cparseJSONList -}
545b0e71066f405c813589005c2e5752
  $fFromJSONReplyCode1 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a2
    -> Data.Aeson.Types.Internal.Object
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:*:)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Maybe.Just "rcmd")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 Data.Text.Internal.Text))
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Maybe.Just "rerror")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 Data.Text.Internal.Text)
             GHC.Generics.:*: GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "stdout")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text))
            a2)
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U,U)><L,U><L,U>,
     Unfolding: (\ @ a2
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a2)
                   (obj :: Data.Aeson.Types.Internal.Object) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "rcmd")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Data.Text.Internal.Text)
                             a2)
                   = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                       @ ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "rcmd")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                       @ Data.Aeson.Types.Generic.Zero
                       @ (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                       WaiLib.$fFromJSONReplyCode_$s$fSelectorMetaMetaSel2
                       WaiLib.$fFromJSONCompileCode6
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text>_N))
                       @ a2
                       opts
                       fargs
                       obj
                 } in
                 let {
                   m1 :: Data.Aeson.Types.Internal.Parser
                           (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "rerror")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.Rec0 Data.Text.Internal.Text)
                              a2)
                   = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                       @ ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "rerror")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                       @ Data.Aeson.Types.Generic.Zero
                       @ (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                       WaiLib.$fFromJSONReplyCode_$s$fSelectorMetaMetaSel1
                       WaiLib.$fFromJSONCompileCode6
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text>_N))
                       @ a2
                       opts
                       fargs
                       obj
                 } in
                 let {
                   e :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "stdout")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Data.Text.Internal.Text)
                             a2)
                   = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                       @ ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "stdout")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                       @ Data.Aeson.Types.Generic.Zero
                       @ (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                       WaiLib.$fFromJSONReplyCode_$s$fSelectorMetaMetaSel
                       WaiLib.$fFromJSONCompileCode6
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text>_N))
                       @ a2
                       opts
                       fargs
                       obj
                 } in
                 (\ @ f4 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             ((GHC.Generics.:*:)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "rcmd")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "rerror")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "stdout")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                a2)
                             f4
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Maybe.Just "rcmd")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.Rec0 Data.Text.Internal.Text)
                          a2>_R)
                    @ f4
                    @ r
                    path
                    kf
                    (\ (a3 :: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "rcmd")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                a2) ->
                     m1
                       `cast`
                     (Data.Aeson.Types.Internal.N:Parser[0]
                          <GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "rerror")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Data.Text.Internal.Text)
                             a2>_R)
                       @ f4
                       @ r
                       path
                       kf
                       (\ (a1 :: GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "rerror")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                   a2) ->
                        e `cast`
                        (Data.Aeson.Types.Internal.N:Parser[0]
                             <GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "stdout")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                a2>_R)
                          @ f4
                          @ r
                          path
                          kf
                          (\ (a4 :: GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "stdout")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                      a2) ->
                           ks
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "rcmd")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                @ (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "rerror")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Maybe.Just "stdout")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                @ a2
                                a3
                                (GHC.Generics.:*:
                                   @ *
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "rerror")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "stdout")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                   @ a2
                                   a1
                                   a4))))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <(GHC.Generics.:*:)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "rcmd")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 Data.Text.Internal.Text))
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "rerror")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 Data.Text.Internal.Text)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Maybe.Just "stdout")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.Rec0 Data.Text.Internal.Text))
                              a2>_R))) -}
e8b14f2733aefc7913463abf67253baf
  $fFromJSONReplyCode2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.$fFromJSONReplyCode3) -}
599b80be11216d6a04b2ff46f175b110
  $fFromJSONReplyCode3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("stdout"#) -}
232c1d8f7e432b65a5652e83d1c1fd54
  $fFromJSONReplyCode4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.$fFromJSONReplyCode5) -}
036b636425cc1a4931b832c703df9066
  $fFromJSONReplyCode5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("rerror"#) -}
e2f08fff043c40234981b9f552137ea3
  $fFromJSONReplyCode6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.$fFromJSONReplyCode7) -}
7a1590237016c91a138b44b11daa202f
  $fFromJSONReplyCode7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("rcmd"#) -}
7b43be4a14f888fb43c27f767eb58be1
  $fFromJSONReplyCode_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser WaiLib.ReplyCode
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "rcmd")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "rerror")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Maybe.Just "stdout")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 Data.Text.Internal.Text))
                             GHC.Types.Any)
                   = case x of wild {
                       DEFAULT
                       -> let {
                            msg20 :: GHC.Base.String
                            = GHC.CString.unpackAppendCString#
                                Data.Aeson.Types.FromJSON.typeMismatch4
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                                   (GHC.CString.unpackAppendCString#
                                      Data.Aeson.Types.FromJSON.typeMismatch3
                                      (case wild of wild1 {
                                         Data.Aeson.Types.Internal.Array ds5
                                         -> Data.Aeson.Types.FromJSON.typeMismatch1
                                         Data.Aeson.Types.Internal.String ds5
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                         Data.Aeson.Types.Internal.Number ds5
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                         Data.Aeson.Types.Internal.Bool ds5
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                         Data.Aeson.Types.Internal.Null
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                          } in
                          (\ @ f4 :: * -> *
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f4 r)[OneShot]
                             (_ks :: Data.Aeson.Types.Internal.Success
                                       ((GHC.Generics.:*:)
                                          (GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Maybe.Just "rcmd")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                          (GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Maybe.Just "rerror")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                           GHC.Generics.:*: GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Maybe.Just "stdout")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0
                                                                 Data.Text.Internal.Text))
                                          GHC.Types.Any)
                                       f4
                                       r)[OneShot] ->
                           kf
                             (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                             msg20)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <(GHC.Generics.:*:)
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Maybe.Just "rcmd")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Maybe.Just "rerror")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Maybe.Just "stdout")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0
                                                              Data.Text.Internal.Text))
                                       GHC.Types.Any>_R))
                       Data.Aeson.Types.Internal.Object obj
                       -> WaiLib.$fFromJSONReplyCode1
                            @ GHC.Types.Any
                            WaiLib.$fFromJSONBlock_opts
                            (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Types.Any)
                            obj }
                 } in
                 (\ @ f5 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success WaiLib.ReplyCode f5 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "rcmd")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Data.Text.Internal.Text))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "rerror")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Data.Text.Internal.Text)
                           GHC.Generics.:*: GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Maybe.Just "stdout")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 Data.Text.Internal.Text))
                          GHC.Types.Any>_R)
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a3 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "rcmd")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "rerror")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "stdout")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 Data.Text.Internal.Text))
                                GHC.Types.Any) ->
                     ks
                       (WaiLib.$fFromJSONReplyCode_$cto
                          @ GHC.Types.Any
                          a3
                            `cast`
                          ((Sym (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "ReplyCode" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.S1
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "rcmd")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                      GHC.Generics.:*: (GHC.Generics.S1
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Maybe.Just "rerror")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.Rec0
                                                             Data.Text.Internal.Text)
                                                        GHC.Generics.:*: GHC.Generics.S1
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Maybe.Just
                                                                                 "stdout")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.Rec0
                                                                              Data.Text.Internal.Text))>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                       <*>_N
                                                                                                                       <GHC.Generics.D>_P
                                                                                                                       <'GHC.Generics.MetaData
                                                                                                                          "ReplyCode"
                                                                                                                          "WaiLib"
                                                                                                                          "main"
                                                                                                                          'GHC.Types.False>_P
                                                                                                                       <GHC.Generics.M1
                                                                                                                          GHC.Generics.C
                                                                                                                          ('GHC.Generics.MetaCons
                                                                                                                             "ReplyCode"
                                                                                                                             'GHC.Generics.PrefixI
                                                                                                                             'GHC.Types.True)
                                                                                                                          (GHC.Generics.S1
                                                                                                                             ('GHC.Generics.MetaSel
                                                                                                                                ('GHC.Maybe.Just
                                                                                                                                   "rcmd")
                                                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                             (GHC.Generics.Rec0
                                                                                                                                Data.Text.Internal.Text)
                                                                                                                           GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                               ('GHC.Generics.MetaSel
                                                                                                                                                  ('GHC.Maybe.Just
                                                                                                                                                     "rerror")
                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                               (GHC.Generics.Rec0
                                                                                                                                                  Data.Text.Internal.Text)
                                                                                                                                             GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                                                                   ('GHC.Maybe.Just
                                                                                                                                                                      "stdout")
                                                                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                                                                (GHC.Generics.Rec0
                                                                                                                                                                   Data.Text.Internal.Text)))>_R)) <GHC.Types.Any>_N ; Nth:2
                                                                                                                                                                                                                           (Nth:2
                                                                                                                                                                                                                                (Nth:3
                                                                                                                                                                                                                                     (Nth:3
                                                                                                                                                                                                                                          (Inst (Inst (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                <GHC.Generics.M1
                                                                                                                                                                                                                                                                   GHC.Generics.D
                                                                                                                                                                                                                                                                   ('GHC.Generics.MetaData
                                                                                                                                                                                                                                                                      "ReplyCode"
                                                                                                                                                                                                                                                                      "WaiLib"
                                                                                                                                                                                                                                                                      "main"
                                                                                                                                                                                                                                                                      'GHC.Types.False)
                                                                                                                                                                                                                                                                   (GHC.Generics.M1
                                                                                                                                                                                                                                                                      GHC.Generics.C
                                                                                                                                                                                                                                                                      ('GHC.Generics.MetaCons
                                                                                                                                                                                                                                                                         "ReplyCode"
                                                                                                                                                                                                                                                                         'GHC.Generics.PrefixI
                                                                                                                                                                                                                                                                         'GHC.Types.True)
                                                                                                                                                                                                                                                                      (GHC.Generics.S1
                                                                                                                                                                                                                                                                         ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                                            ('GHC.Maybe.Just
                                                                                                                                                                                                                                                                               "rcmd")
                                                                                                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                                         (GHC.Generics.Rec0
                                                                                                                                                                                                                                                                            Data.Text.Internal.Text)
                                                                                                                                                                                                                                                                       GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                                                                                                                                                                           ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                                                              ('GHC.Maybe.Just
                                                                                                                                                                                                                                                                                                 "rerror")
                                                                                                                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                                                           (GHC.Generics.Rec0
                                                                                                                                                                                                                                                                                              Data.Text.Internal.Text)
                                                                                                                                                                                                                                                                                         GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                                                                                                                                                                            ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                                                                               ('GHC.Maybe.Just
                                                                                                                                                                                                                                                                                                                  "stdout")
                                                                                                                                                                                                                                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                                                                               'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                                                                            (GHC.Generics.Rec0
                                                                                                                                                                                                                                                                                                               Data.Text.Internal.Text))))
                                                                                                                                                                                                                                                                   GHC.Types.Any>_R) ; (Nth:3
                                                                                                                                                                                                                                                                                            (Nth:3
                                                                                                                                                                                                                                                                                                 (Nth:3
                                                                                                                                                                                                                                                                                                      (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                                                                                                       ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                                                                                                                                                                                                                                                                                               Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                                                                                               GHC.Types.Any>_R
                                                                                                                                                                                                                                                                                                       ->_R <Data.Aeson.Types.Internal.Value>_R
                                                                                                                                                                                                                                                                                                       ->_R (Data.Aeson.Types.Internal.Parser
                                                                                                                                                                                                                                                                                                               (Sub (Sym (WaiLib.Rep_ReplyCode[0])) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                                                   <GHC.Generics.Rep
                                                                                                                                                                                                                                                                                                                                                                                      WaiLib.ReplyCode
                                                                                                                                                                                                                                                                                                                                                                                      GHC.Types.Any>_R)) (Coh <f5>_N
                                                                                                                                                                                                                                                                                                                                                                                                              (Nth:0
                                                                                                                                                                                                                                                                                                                                                                                                                   (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                                                                                             <GHC.Generics.Rep
                                                                                                                                                                                                                                                                                                                                                                                                                                WaiLib.ReplyCode
                                                                                                                                                                                                                                                                                                                                                                                                                                GHC.Types.Any>_R) ; (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                                                                                         (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                                                                                              (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            GHC.Types.Any>_R
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ->_R <Data.Aeson.Types.Internal.Value>_R
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ->_R (Data.Aeson.Types.Internal.Parser
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            (Sub (WaiLib.Rep_ReplyCode[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
enerics.M1
enerics.D
enerics.MetaData
eplyCode"
aiLib"
main"
ypes.False)
enerics.M1
enerics.C
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ('GHC.Generics.MetaCons
eplyCode"
enerics.PrefixI
ypes.True)
enerics.S1
enerics.MetaSel
aybe.Just
rcmd")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text)
enerics.:*: (GHC.Generics.S1
enerics.MetaSel
aybe.Just
rerror")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        'GHC.Generics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text)
enerics.:*: GHC.Generics.S1
enerics.MetaSel
aybe.Just
stdout")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text))))
ypes.Any>_R))))) (Coh <r>_N
th:0
nst (Sym (Data.Aeson.Types.Internal.N:Parser[0]
enerics.Rep
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                WaiLib.ReplyCode
ypes.Any>_R) ; (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              (Nth:3
ata.Aeson.Types.Internal.Options>_R
ata.Aeson.Types.FromJSON.FromArgs
ata.Aeson.Types.Generic.Zero
ypes.Any>_R
ata.Aeson.Types.Internal.Value>_R
ata.Aeson.Types.Internal.Parser
ub (WaiLib.Rep_ReplyCode[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
enerics.M1
enerics.D
enerics.MetaData
eplyCode"
aiLib"
main"
ypes.False)
enerics.M1
enerics.C
enerics.MetaCons
eplyCode"
enerics.PrefixI
ypes.True)
enerics.S1
enerics.MetaSel
aybe.Just
rcmd")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text)
enerics.:*: (GHC.Generics.S1
enerics.MetaSel
aybe.Just
rerror")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text)
enerics.:*: GHC.Generics.S1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ('GHC.Generics.MetaSel
aybe.Just
stdout")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text))))
ypes.Any>_R)) (Sym (Coh <f5>_N
th:0
ym (Data.Aeson.Types.Internal.N:Parser[0]
enerics.Rep
aiLib.ReplyCode
ypes.Any>_R) ; (Nth:3
th:3
th:3
ata.Aeson.Types.Internal.Options>_R
ata.Aeson.Types.FromJSON.FromArgs
ata.Aeson.Types.Generic.Zero
ypes.Any>_R
ata.Aeson.Types.Internal.Value>_R
ata.Aeson.Types.Internal.Parser
ub (WaiLib.Rep_ReplyCode[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
enerics.M1
enerics.D
enerics.MetaData
eplyCode"
aiLib"
main"
ypes.False)
enerics.M1
enerics.C
enerics.MetaCons
eplyCode"
enerics.PrefixI
ypes.True)
enerics.S1
enerics.MetaSel
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ('GHC.Maybe.Just
rcmd")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text)
enerics.:*: (GHC.Generics.S1
enerics.MetaSel
aybe.Just
rerror")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text)
enerics.:*: GHC.Generics.S1
enerics.MetaSel
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ('GHC.Maybe.Just
stdout")
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ata.Text.Internal.Text))))
ypes.Any>_R))))))))))))))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <WaiLib.ReplyCode>_R))) -}
7b43be4a14f888fb43c27f767eb58be1
  $fFromJSONReplyCode_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [WaiLib.ReplyCode]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds5 :: Data.Aeson.Types.Internal.Value) ->
                 case ds5 of wild {
                   DEFAULT
                   -> let {
                        msg20 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            WaiLib.$fFromJSONBlock3
                            (GHC.CString.unpackAppendCString#
                               WaiLib.$fFromJSONBlock2
                               (GHC.CString.unpackAppendCString#
                                  WaiLib.$fFromJSONBlock1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds6
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [WaiLib.ReplyCode] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg20)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[WaiLib.ReplyCode]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo7 :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [2] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds6 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo7 (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      WaiLib.$fFromJSONReplyCode_go 0# ($wgo7 0#) } }) -}
7b43be4a14f888fb43c27f767eb58be1
  $fFromJSONReplyCode_$cto ::
    GHC.Generics.Rep WaiLib.ReplyCode x -> WaiLib.ReplyCode
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds5 :: GHC.Generics.Rep WaiLib.ReplyCode x) ->
                 case ds5
                        `cast`
                      ((Sub (WaiLib.Rep_ReplyCode[0]) ; (GHC.Generics.N:M1[0]
                                                             <*>_N
                                                             <GHC.Generics.D>_P
                                                             <'GHC.Generics.MetaData
                                                                "ReplyCode"
                                                                "WaiLib"
                                                                "main"
                                                                'GHC.Types.False>_P
                                                             <GHC.Generics.M1
                                                                GHC.Generics.C
                                                                ('GHC.Generics.MetaCons
                                                                   "ReplyCode"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.True)
                                                                (GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Maybe.Just "rcmd")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.Text.Internal.Text)
                                                                 GHC.Generics.:*: (GHC.Generics.M1
                                                                                     GHC.Generics.S
                                                                                     ('GHC.Generics.MetaSel
                                                                                        ('GHC.Maybe.Just
                                                                                           "rerror")
                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                        'GHC.Generics.DecidedLazy)
                                                                                     (GHC.Generics.K1
                                                                                        GHC.Generics.R
                                                                                        Data.Text.Internal.Text)
                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                      GHC.Generics.S
                                                                                                      ('GHC.Generics.MetaSel
                                                                                                         ('GHC.Maybe.Just
                                                                                                            "stdout")
                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                      (GHC.Generics.K1
                                                                                                         GHC.Generics.R
                                                                                                         Data.Text.Internal.Text)))>_R ; GHC.Generics.N:M1[0]
                                                                                                                                             <*>_N
                                                                                                                                             <GHC.Generics.C>_P
                                                                                                                                             <'GHC.Generics.MetaCons
                                                                                                                                                "ReplyCode"
                                                                                                                                                'GHC.Generics.PrefixI
                                                                                                                                                'GHC.Types.True>_P
                                                                                                                                             <GHC.Generics.M1
                                                                                                                                                GHC.Generics.S
                                                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                                                   ('GHC.Maybe.Just
                                                                                                                                                      "rcmd")
                                                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                                                (GHC.Generics.K1
                                                                                                                                                   GHC.Generics.R
                                                                                                                                                   Data.Text.Internal.Text)
                                                                                                                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                                  GHC.Generics.S
                                                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                                                     ('GHC.Maybe.Just
                                                                                                                                                                        "rerror")
                                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                                                  (GHC.Generics.K1
                                                                                                                                                                     GHC.Generics.R
                                                                                                                                                                     Data.Text.Internal.Text)
                                                                                                                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                                   GHC.Generics.S
                                                                                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                                                                                      ('GHC.Maybe.Just
                                                                                                                                                                                         "stdout")
                                                                                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                                                                   (GHC.Generics.K1
                                                                                                                                                                                      GHC.Generics.R
                                                                                                                                                                                      Data.Text.Internal.Text))>_R)) <x>_N) of wild { GHC.Generics.:*: ds6 ds7 ->
                 case ds7 of wild1 { GHC.Generics.:*: ds8 ds9 ->
                 WaiLib.ReplyCode
                   ds6
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "rcmd")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Text.Internal.Text>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                  <*>_N
                                                                  <GHC.Generics.R>_P
                                                                  <Data.Text.Internal.Text>_R
                                                                  <x>_P)
                   ds8
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "rerror")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Text.Internal.Text>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                  <*>_N
                                                                  <GHC.Generics.R>_P
                                                                  <Data.Text.Internal.Text>_R
                                                                  <x>_P)
                   ds9
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "stdout")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Text.Internal.Text>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                  <*>_N
                                                                  <GHC.Generics.R>_P
                                                                  <Data.Text.Internal.Text>_R
                                                                  <x>_P) } }) -}
12c3e72fdba736ab6d606a5747c306dc
  $fFromJSONReplyCode_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "stdout")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Maybe.Just "stdout")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "stdout")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   WaiLib.$fFromJSONReplyCode2)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "stdout")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceUnpackedness
                          `cast`
                        (GHC.Generics.D:R:SingSourceUnpackednessa0[0] <'GHC.Generics.NoSourceUnpackedness>_N) of wild { GHC.Generics.SNoSourceUnpackedness co ->
                   GHC.Generics.NoSourceUnpackedness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "stdout")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "stdout")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceStrictness
                          `cast`
                        (GHC.Generics.D:R:SingSourceStrictnessa0[0] <'GHC.Generics.NoSourceStrictness>_N) of wild { GHC.Generics.SNoSourceStrictness co ->
                   GHC.Generics.NoSourceStrictness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "stdout")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "stdout")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSDecidedLazy
                          `cast`
                        (GHC.Generics.D:R:SingDecidedStrictnessa0[0] <'GHC.Generics.DecidedLazy>_N) of wild { GHC.Generics.SDecidedLazy co ->
                   GHC.Generics.DecidedLazy
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepDecidedStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "stdout")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepDecidedStrictness[0])) -}
ac9effa4a26a1db196c90e4468cbd15b
  $fFromJSONReplyCode_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "rerror")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Maybe.Just "rerror")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "rerror")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   WaiLib.$fFromJSONReplyCode4)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "rerror")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceUnpackedness
                          `cast`
                        (GHC.Generics.D:R:SingSourceUnpackednessa0[0] <'GHC.Generics.NoSourceUnpackedness>_N) of wild { GHC.Generics.SNoSourceUnpackedness co ->
                   GHC.Generics.NoSourceUnpackedness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "rerror")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "rerror")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceStrictness
                          `cast`
                        (GHC.Generics.D:R:SingSourceStrictnessa0[0] <'GHC.Generics.NoSourceStrictness>_N) of wild { GHC.Generics.SNoSourceStrictness co ->
                   GHC.Generics.NoSourceStrictness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "rerror")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "rerror")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSDecidedLazy
                          `cast`
                        (GHC.Generics.D:R:SingDecidedStrictnessa0[0] <'GHC.Generics.DecidedLazy>_N) of wild { GHC.Generics.SDecidedLazy co ->
                   GHC.Generics.DecidedLazy
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepDecidedStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "rerror")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepDecidedStrictness[0])) -}
5982e409d47a73fb1e25fc50015dc8d0
  $fFromJSONReplyCode_$s$fSelectorMetaMetaSel2 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "rcmd")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Maybe.Just "rcmd")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "rcmd")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   WaiLib.$fFromJSONReplyCode6)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "rcmd")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceUnpackedness
                          `cast`
                        (GHC.Generics.D:R:SingSourceUnpackednessa0[0] <'GHC.Generics.NoSourceUnpackedness>_N) of wild { GHC.Generics.SNoSourceUnpackedness co ->
                   GHC.Generics.NoSourceUnpackedness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "rcmd")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "rcmd")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceStrictness
                          `cast`
                        (GHC.Generics.D:R:SingSourceStrictnessa0[0] <'GHC.Generics.NoSourceStrictness>_N) of wild { GHC.Generics.SNoSourceStrictness co ->
                   GHC.Generics.NoSourceStrictness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "rcmd")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds5 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "rcmd")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSDecidedLazy
                          `cast`
                        (GHC.Generics.D:R:SingDecidedStrictnessa0[0] <'GHC.Generics.DecidedLazy>_N) of wild { GHC.Generics.SDecidedLazy co ->
                   GHC.Generics.DecidedLazy
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepDecidedStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "rcmd")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepDecidedStrictness[0])) -}
7b43be4a14f888fb43c27f767eb58be1
  $fFromJSONReplyCode_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser [WaiLib.ReplyCode]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fFromRowPerson ::
    Database.SQLite.Simple.FromRow.FromRow WaiLib.Person
  DFunId
  {- Arity: 2, Strictness: <S(S),1*U(U)><S(S(S)L),1*U(1*U(U),1*U)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                WaiLib.$fFromRowPerson1
                  `cast`
                ((<Database.SQLite.Simple.Internal.RowParseRO>_R
                  ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                <(GHC.Types.Int, [Database.SQLite3.SQLData])>_N
                                <Database.SQLite.Simple.Ok.Ok>_R
                                <WaiLib.Person>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                <Database.SQLite.Simple.Internal.RowParseRO>_R
                                                                <Control.Monad.Trans.State.Strict.StateT
                                                                   (GHC.Types.Int,
                                                                    [Database.SQLite3.SQLData])
                                                                   Database.SQLite.Simple.Ok.Ok>_R
                                                                <WaiLib.Person>_N) ; (Sym (Database.SQLite.Simple.Internal.N:RowParser[0]) ; Sym (Database.SQLite.Simple.FromRow.N:FromRow[0])) <WaiLib.Person>_N)) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fFromRowPerson1 ::
    Database.SQLite.Simple.Internal.RowParseRO
    -> (GHC.Types.Int, [Database.SQLite3.SQLData])
    -> Database.SQLite.Simple.Ok.Ok
         (WaiLib.Person, (GHC.Types.Int, [Database.SQLite3.SQLData]))
  {- Arity: 2, Strictness: <S(S),1*U(U)><S(S(S)L),1*U(1*U(U),1*U)>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Database.SQLite.Simple.Internal.RowParseRO)
                   (w1 :: (GHC.Types.Int, [Database.SQLite3.SQLData])) ->
                 case w `cast`
                      (Database.SQLite.Simple.Internal.N:RowParseRO[0]) of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { (,) ww3 ww4 ->
                 case ww3 of ww5 { GHC.Types.I# ww6 ->
                 WaiLib.$w$cfromRow ww1 ww6 ww4 } } }) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fFromRowUserInput ::
    Database.SQLite.Simple.FromRow.FromRow WaiLib.UserInput
  DFunId
  {- Arity: 2, Strictness: <S(S),1*U(U)><S(S(S)L),1*U(1*U(U),1*U)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                WaiLib.$fFromRowUserInput1
                  `cast`
                ((<Database.SQLite.Simple.Internal.RowParseRO>_R
                  ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                <(GHC.Types.Int, [Database.SQLite3.SQLData])>_N
                                <Database.SQLite.Simple.Ok.Ok>_R
                                <WaiLib.UserInput>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                   <Database.SQLite.Simple.Internal.RowParseRO>_R
                                                                   <Control.Monad.Trans.State.Strict.StateT
                                                                      (GHC.Types.Int,
                                                                       [Database.SQLite3.SQLData])
                                                                      Database.SQLite.Simple.Ok.Ok>_R
                                                                   <WaiLib.UserInput>_N) ; (Sym (Database.SQLite.Simple.Internal.N:RowParser[0]) ; Sym (Database.SQLite.Simple.FromRow.N:FromRow[0])) <WaiLib.UserInput>_N)) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fFromRowUserInput1 ::
    Database.SQLite.Simple.Internal.RowParseRO
    -> (GHC.Types.Int, [Database.SQLite3.SQLData])
    -> Database.SQLite.Simple.Ok.Ok
         (WaiLib.UserInput, (GHC.Types.Int, [Database.SQLite3.SQLData]))
  {- Arity: 2, Strictness: <S(S),1*U(U)><S(S(S)L),1*U(1*U(U),1*U)>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Database.SQLite.Simple.Internal.RowParseRO)
                   (w1 :: (GHC.Types.Int, [Database.SQLite3.SQLData])) ->
                 case w `cast`
                      (Database.SQLite.Simple.Internal.N:RowParseRO[0]) of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { (,) ww3 ww4 ->
                 case ww3 of ww5 { GHC.Types.I# ww6 ->
                 WaiLib.$w$cfromRow1 ww1 ww6 ww4 } } }) -}
036a62be5a12650aff8e5a89881204da
  $fGenericBlock :: GHC.Generics.Generic WaiLib.Block
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.Block
                  WaiLib.$fGenericBlock1
                    `cast`
                  (forall (x :: <*>_N).
                   <WaiLib.Block>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "Block" "WaiLib" "main" 'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Block" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "bblock")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R
                                           [Data.Text.Internal.Lazy.Text]))>_R) ; Sub (Sym (WaiLib.Rep_Block[0]))) <x>_N)
                  WaiLib.$fGenericBlock_$cto -}
036a62be5a12650aff8e5a89881204da
  $fGenericBlock1 ::
    WaiLib.Block
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Block" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Maybe.Just "bblock")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R [Data.Text.Internal.Lazy.Text]))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: WaiLib.Block) ->
                 case x1 of wild { WaiLib.Block g1 ->
                 g1
                   `cast`
                 (Sym (GHC.Generics.N:K1[0]
                           <*>_N
                           <GHC.Generics.R>_P
                           <[Data.Text.Internal.Lazy.Text]>_R
                           <x>_P) ; (Sym (GHC.Generics.N:M1[0]
                                              <*>_N
                                              <GHC.Generics.S>_P
                                              <'GHC.Generics.MetaSel
                                                 ('GHC.Maybe.Just "bblock")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy>_P
                                              <GHC.Generics.K1
                                                 GHC.Generics.R
                                                 [Data.Text.Internal.Lazy.Text]>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                               <*>_N
                                                                                               <GHC.Generics.C>_P
                                                                                               <'GHC.Generics.MetaCons
                                                                                                  "Block"
                                                                                                  'GHC.Generics.PrefixI
                                                                                                  'GHC.Types.True>_P
                                                                                               <GHC.Generics.M1
                                                                                                  GHC.Generics.S
                                                                                                  ('GHC.Generics.MetaSel
                                                                                                     ('GHC.Maybe.Just
                                                                                                        "bblock")
                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                  (GHC.Generics.K1
                                                                                                     GHC.Generics.R
                                                                                                     [Data.Text.Internal.Lazy.Text])>_R)) <x>_N) }) -}
036a62be5a12650aff8e5a89881204da
  $fGenericBlock_$cto ::
    GHC.Generics.Rep WaiLib.Block x -> WaiLib.Block
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, True)
                (\ @ x (ds5 :: GHC.Generics.Rep WaiLib.Block x) ->
                 WaiLib.Block
                   ds5
                     `cast`
                   ((Sub (WaiLib.Rep_Block[0]) ; (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.D>_P
                                                      <'GHC.Generics.MetaData
                                                         "Block" "WaiLib" "main" 'GHC.Types.False>_P
                                                      <GHC.Generics.M1
                                                         GHC.Generics.C
                                                         ('GHC.Generics.MetaCons
                                                            "Block"
                                                            'GHC.Generics.PrefixI
                                                            'GHC.Types.True)
                                                         (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Maybe.Just "bblock")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               [Data.Text.Internal.Lazy.Text]))>_R ; (GHC.Generics.N:M1[0]
                                                                                                          <*>_N
                                                                                                          <GHC.Generics.C>_P
                                                                                                          <'GHC.Generics.MetaCons
                                                                                                             "Block"
                                                                                                             'GHC.Generics.PrefixI
                                                                                                             'GHC.Types.True>_P
                                                                                                          <GHC.Generics.M1
                                                                                                             GHC.Generics.S
                                                                                                             ('GHC.Generics.MetaSel
                                                                                                                ('GHC.Maybe.Just
                                                                                                                   "bblock")
                                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                             (GHC.Generics.K1
                                                                                                                GHC.Generics.R
                                                                                                                [Data.Text.Internal.Lazy.Text])>_R ; GHC.Generics.N:M1[0]
                                                                                                                                                         <*>_N
                                                                                                                                                         <GHC.Generics.S>_P
                                                                                                                                                         <'GHC.Generics.MetaSel
                                                                                                                                                            ('GHC.Maybe.Just
                                                                                                                                                               "bblock")
                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                                                                            'GHC.Generics.DecidedLazy>_P
                                                                                                                                                         <GHC.Generics.K1
                                                                                                                                                            GHC.Generics.R
                                                                                                                                                            [Data.Text.Internal.Lazy.Text]>_R))) <x>_N ; GHC.Generics.N:K1[0]
                                                                                                                                                                                                             <*>_N
                                                                                                                                                                                                             <GHC.Generics.R>_P
                                                                                                                                                                                                             <[Data.Text.Internal.Lazy.Text]>_R
                                                                                                                                                                                                             <x>_P)) -}
4094009eeca0d4f5c386f1c83b59a3e5
  $fGenericCompileCode :: GHC.Generics.Generic WaiLib.CompileCode
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.CompileCode
                  WaiLib.$fGenericCompileCode1
                    `cast`
                  (forall (x :: <*>_N).
                   <WaiLib.CompileCode>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "CompileCode" "WaiLib" "main" 'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "CompileCode" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "compiler")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Maybe.Just "option")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R Data.Text.Internal.Text)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Maybe.Just
                                                                                 "code")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Data.Text.Internal.Text)))>_R) ; Sub (Sym (WaiLib.Rep_CompileCode[0]))) <x>_N)
                  WaiLib.$fFromJSONCompileCode_$cto -}
4094009eeca0d4f5c386f1c83b59a3e5
  $fGenericCompileCode1 ::
    WaiLib.CompileCode
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "CompileCode" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Maybe.Just "compiler")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "option")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Maybe.Just "code")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R Data.Text.Internal.Text)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: WaiLib.CompileCode) ->
                 case x1 of wild { WaiLib.CompileCode g1 g2 g3 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "compiler")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "option")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Maybe.Just "code")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                    @ x
                    g1
                      `cast`
                    (Sym (GHC.Generics.N:K1[0]
                              <*>_N
                              <GHC.Generics.R>_P
                              <Data.Text.Internal.Text>_R
                              <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                <*>_N
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "compiler")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text>_R) <x>_N)
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "option")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "code")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                       @ x
                       g2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Data.Text.Internal.Text>_R
                                 <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                   <*>_N
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Maybe.Just "option")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.Text.Internal.Text>_R) <x>_N)
                       g3
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Data.Text.Internal.Text>_R
                                 <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                   <*>_N
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Maybe.Just "code")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.Text.Internal.Text>_R) <x>_N)))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "CompileCode" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "compiler")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "option")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Maybe.Just "code")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.Text.Internal.Text))>_R) <x>_N) }) -}
e902f1c8c2c9384e725bf1d73e73ae08
  $fGenericGeneMatrix :: GHC.Generics.Generic WaiLib.GeneMatrix
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.GeneMatrix
                  WaiLib.$fGenericGeneMatrix1
                    `cast`
                  (forall (x :: <*>_N).
                   <WaiLib.GeneMatrix>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "GeneMatrix" "WaiLib" "main" 'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "GeneMatrix" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "cmd")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Maybe.Just "ncol")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             GHC.Integer.Type.Integer)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Maybe.Just
                                                                                 "nrow")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              GHC.Integer.Type.Integer)))>_R) ; Sub (Sym (WaiLib.Rep_GeneMatrix[0]))) <x>_N)
                  WaiLib.$fFromJSONGeneMatrix_$cto -}
e902f1c8c2c9384e725bf1d73e73ae08
  $fGenericGeneMatrix1 ::
    WaiLib.GeneMatrix
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "GeneMatrix" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Maybe.Just "cmd")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "ncol")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Maybe.Just "nrow")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Integer.Type.Integer)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: WaiLib.GeneMatrix) ->
                 case x1 of wild { WaiLib.GeneMatrix g1 g2 g3 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "cmd")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "ncol")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Maybe.Just "nrow")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                    @ x
                    g1
                      `cast`
                    (Sym (GHC.Generics.N:K1[0]
                              <*>_N
                              <GHC.Generics.R>_P
                              <Data.Text.Internal.Text>_R
                              <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                <*>_N
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "cmd")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text>_R) <x>_N)
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "ncol")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "nrow")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                       @ x
                       g2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <GHC.Integer.Type.Integer>_R
                                 <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                   <*>_N
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Maybe.Just "ncol")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      GHC.Integer.Type.Integer>_R) <x>_N)
                       g3
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <GHC.Integer.Type.Integer>_R
                                 <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                   <*>_N
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Maybe.Just "nrow")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      GHC.Integer.Type.Integer>_R) <x>_N)))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "GeneMatrix" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "cmd")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "ncol")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R GHC.Integer.Type.Integer)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Maybe.Just "nrow")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    GHC.Integer.Type.Integer))>_R) <x>_N) }) -}
d389d91074ea84663a226202bbcac89a
  $fGenericMBlock :: GHC.Generics.Generic WaiLib.MBlock
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.MBlock
                  WaiLib.$fGenericMBlock1
                    `cast`
                  (forall (x :: <*>_N).
                   <WaiLib.MBlock>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "MBlock" "WaiLib" "main" 'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "MBlock" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "mblock")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R
                                           [GHC.Integer.Type.Integer]))>_R) ; Sub (Sym (WaiLib.Rep_MBlock[0]))) <x>_N)
                  WaiLib.$fGenericMBlock_$cto -}
d389d91074ea84663a226202bbcac89a
  $fGenericMBlock1 ::
    WaiLib.MBlock
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "MBlock" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Maybe.Just "mblock")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R [GHC.Integer.Type.Integer]))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: WaiLib.MBlock) ->
                 case x1 of wild { WaiLib.MBlock g1 ->
                 g1
                   `cast`
                 (Sym (GHC.Generics.N:K1[0]
                           <*>_N
                           <GHC.Generics.R>_P
                           <[GHC.Integer.Type.Integer]>_R
                           <x>_P) ; (Sym (GHC.Generics.N:M1[0]
                                              <*>_N
                                              <GHC.Generics.S>_P
                                              <'GHC.Generics.MetaSel
                                                 ('GHC.Maybe.Just "mblock")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy>_P
                                              <GHC.Generics.K1
                                                 GHC.Generics.R
                                                 [GHC.Integer.Type.Integer]>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                           <*>_N
                                                                                           <GHC.Generics.C>_P
                                                                                           <'GHC.Generics.MetaCons
                                                                                              "MBlock"
                                                                                              'GHC.Generics.PrefixI
                                                                                              'GHC.Types.True>_P
                                                                                           <GHC.Generics.M1
                                                                                              GHC.Generics.S
                                                                                              ('GHC.Generics.MetaSel
                                                                                                 ('GHC.Maybe.Just
                                                                                                    "mblock")
                                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                              (GHC.Generics.K1
                                                                                                 GHC.Generics.R
                                                                                                 [GHC.Integer.Type.Integer])>_R)) <x>_N) }) -}
d389d91074ea84663a226202bbcac89a
  $fGenericMBlock_$cto ::
    GHC.Generics.Rep WaiLib.MBlock x -> WaiLib.MBlock
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, True)
                (\ @ x (ds5 :: GHC.Generics.Rep WaiLib.MBlock x) ->
                 WaiLib.MBlock
                   ds5
                     `cast`
                   ((Sub (WaiLib.Rep_MBlock[0]) ; (GHC.Generics.N:M1[0]
                                                       <*>_N
                                                       <GHC.Generics.D>_P
                                                       <'GHC.Generics.MetaData
                                                          "MBlock"
                                                          "WaiLib"
                                                          "main"
                                                          'GHC.Types.False>_P
                                                       <GHC.Generics.M1
                                                          GHC.Generics.C
                                                          ('GHC.Generics.MetaCons
                                                             "MBlock"
                                                             'GHC.Generics.PrefixI
                                                             'GHC.Types.True)
                                                          (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Maybe.Just "mblock")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                [GHC.Integer.Type.Integer]))>_R ; (GHC.Generics.N:M1[0]
                                                                                                       <*>_N
                                                                                                       <GHC.Generics.C>_P
                                                                                                       <'GHC.Generics.MetaCons
                                                                                                          "MBlock"
                                                                                                          'GHC.Generics.PrefixI
                                                                                                          'GHC.Types.True>_P
                                                                                                       <GHC.Generics.M1
                                                                                                          GHC.Generics.S
                                                                                                          ('GHC.Generics.MetaSel
                                                                                                             ('GHC.Maybe.Just
                                                                                                                "mblock")
                                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                          (GHC.Generics.K1
                                                                                                             GHC.Generics.R
                                                                                                             [GHC.Integer.Type.Integer])>_R ; GHC.Generics.N:M1[0]
                                                                                                                                                  <*>_N
                                                                                                                                                  <GHC.Generics.S>_P
                                                                                                                                                  <'GHC.Generics.MetaSel
                                                                                                                                                     ('GHC.Maybe.Just
                                                                                                                                                        "mblock")
                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                                     'GHC.Generics.DecidedLazy>_P
                                                                                                                                                  <GHC.Generics.K1
                                                                                                                                                     GHC.Generics.R
                                                                                                                                                     [GHC.Integer.Type.Integer]>_R))) <x>_N ; GHC.Generics.N:K1[0]
                                                                                                                                                                                                  <*>_N
                                                                                                                                                                                                  <GHC.Generics.R>_P
                                                                                                                                                                                                  <[GHC.Integer.Type.Integer]>_R
                                                                                                                                                                                                  <x>_P)) -}
f1a65188febf657dbbd7006cade26c93
  $fGenericMatInt :: GHC.Generics.Generic WaiLib.MatInt
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.MatInt
                  WaiLib.$fGenericMatInt1
                    `cast`
                  (forall (x :: <*>_N).
                   <WaiLib.MatInt>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "MatInt" "WaiLib" "main" 'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "MatInt" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "name")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Maybe.Just "matrix")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            [[GHC.Integer.Type.Integer]]))>_R) ; Sub (Sym (WaiLib.Rep_MatInt[0]))) <x>_N)
                  WaiLib.$fGenericMatInt_$cto -}
f1a65188febf657dbbd7006cade26c93
  $fGenericMatInt1 ::
    WaiLib.MatInt
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "MatInt" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Maybe.Just "name")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "matrix")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1 GHC.Generics.R [[GHC.Integer.Type.Integer]]))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: WaiLib.MatInt) ->
                 case x1 of wild { WaiLib.MatInt g1 g2 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "name")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "matrix")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R [[GHC.Integer.Type.Integer]]))
                    @ x
                    g1
                      `cast`
                    (Sym (GHC.Generics.N:K1[0]
                              <*>_N
                              <GHC.Generics.R>_P
                              <Data.Text.Internal.Text>_R
                              <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                <*>_N
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "name")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text>_R) <x>_N)
                    g2
                      `cast`
                    (Sym (GHC.Generics.N:K1[0]
                              <*>_N
                              <GHC.Generics.R>_P
                              <[[GHC.Integer.Type.Integer]]>_R
                              <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                <*>_N
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "matrix")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R
                                                   [[GHC.Integer.Type.Integer]]>_R) <x>_N))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "MatInt" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "name")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Maybe.Just "matrix")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  [[GHC.Integer.Type.Integer]])>_R) <x>_N) }) -}
f1a65188febf657dbbd7006cade26c93
  $fGenericMatInt_$cto ::
    GHC.Generics.Rep WaiLib.MatInt x -> WaiLib.MatInt
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds5 :: GHC.Generics.Rep WaiLib.MatInt x) ->
                 case ds5
                        `cast`
                      ((Sub (WaiLib.Rep_MatInt[0]) ; (GHC.Generics.N:M1[0]
                                                          <*>_N
                                                          <GHC.Generics.D>_P
                                                          <'GHC.Generics.MetaData
                                                             "MatInt"
                                                             "WaiLib"
                                                             "main"
                                                             'GHC.Types.False>_P
                                                          <GHC.Generics.M1
                                                             GHC.Generics.C
                                                             ('GHC.Generics.MetaCons
                                                                "MatInt"
                                                                'GHC.Generics.PrefixI
                                                                'GHC.Types.True)
                                                             (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Maybe.Just "name")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.Text.Internal.Text)
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Maybe.Just
                                                                                       "matrix")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    [[GHC.Integer.Type.Integer]]))>_R ; GHC.Generics.N:M1[0]
                                                                                                                            <*>_N
                                                                                                                            <GHC.Generics.C>_P
                                                                                                                            <'GHC.Generics.MetaCons
                                                                                                                               "MatInt"
                                                                                                                               'GHC.Generics.PrefixI
                                                                                                                               'GHC.Types.True>_P
                                                                                                                            <GHC.Generics.M1
                                                                                                                               GHC.Generics.S
                                                                                                                               ('GHC.Generics.MetaSel
                                                                                                                                  ('GHC.Maybe.Just
                                                                                                                                     "name")
                                                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                               (GHC.Generics.K1
                                                                                                                                  GHC.Generics.R
                                                                                                                                  Data.Text.Internal.Text)
                                                                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                GHC.Generics.S
                                                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                                                   ('GHC.Maybe.Just
                                                                                                                                                      "matrix")
                                                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                                                (GHC.Generics.K1
                                                                                                                                                   GHC.Generics.R
                                                                                                                                                   [[GHC.Integer.Type.Integer]])>_R)) <x>_N) of wild { GHC.Generics.:*: ds6 ds7 ->
                 WaiLib.MatInt
                   ds6
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "name")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Text.Internal.Text>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                  <*>_N
                                                                  <GHC.Generics.R>_P
                                                                  <Data.Text.Internal.Text>_R
                                                                  <x>_P)
                   ds7
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "matrix")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           [[GHC.Integer.Type.Integer]]>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                       <*>_N
                                                                       <GHC.Generics.R>_P
                                                                       <[[GHC.Integer.Type.Integer]]>_R
                                                                       <x>_P) }) -}
7b43be4a14f888fb43c27f767eb58be1
  $fGenericReplyCode :: GHC.Generics.Generic WaiLib.ReplyCode
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.ReplyCode
                  WaiLib.$fGenericReplyCode1
                    `cast`
                  (forall (x :: <*>_N).
                   <WaiLib.ReplyCode>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "ReplyCode" "WaiLib" "main" 'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "ReplyCode" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "rcmd")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Maybe.Just "rerror")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R Data.Text.Internal.Text)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Maybe.Just
                                                                                 "stdout")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Data.Text.Internal.Text)))>_R) ; Sub (Sym (WaiLib.Rep_ReplyCode[0]))) <x>_N)
                  WaiLib.$fFromJSONReplyCode_$cto -}
7b43be4a14f888fb43c27f767eb58be1
  $fGenericReplyCode1 ::
    WaiLib.ReplyCode
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ReplyCode" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Maybe.Just "rcmd")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "rerror")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Maybe.Just "stdout")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R Data.Text.Internal.Text)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: WaiLib.ReplyCode) ->
                 case x1 of wild { WaiLib.ReplyCode g1 g2 g3 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "rcmd")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "rerror")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Maybe.Just "stdout")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                    @ x
                    g1
                      `cast`
                    (Sym (GHC.Generics.N:K1[0]
                              <*>_N
                              <GHC.Generics.R>_P
                              <Data.Text.Internal.Text>_R
                              <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                <*>_N
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "rcmd")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text>_R) <x>_N)
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "rerror")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "stdout")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                       @ x
                       g2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Data.Text.Internal.Text>_R
                                 <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                   <*>_N
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Maybe.Just "rerror")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.Text.Internal.Text>_R) <x>_N)
                       g3
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Data.Text.Internal.Text>_R
                                 <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                   <*>_N
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Maybe.Just "stdout")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.Text.Internal.Text>_R) <x>_N)))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "ReplyCode" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "rcmd")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "rerror")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Maybe.Just "stdout")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.Text.Internal.Text))>_R) <x>_N) }) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fReadPerson :: GHC.Read.Read WaiLib.Person
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.Person
                  WaiLib.$fReadPerson_$creadsPrec
                  WaiLib.$fReadPerson_$creadList
                  WaiLib.$fReadPerson1
                    `cast`
                  ((<Text.ParserCombinators.ReadPrec.Prec>_R
                    ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                  <WaiLib.Person>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                 <WaiLib.Person>_R))
                  WaiLib.$fReadPerson_$creadListPrec -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fReadPerson1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (WaiLib.Person -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2,
     Unfolding: (GHC.Read.$fRead()6
                   @ WaiLib.Person
                   WaiLib.$fReadPerson2
                     `cast`
                   ((<Text.ParserCombinators.ReadPrec.Prec>_R
                     ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <WaiLib.Person>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                  <WaiLib.Person>_R))) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fReadPerson2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (WaiLib.Person -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: WaiLib.Person -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 WaiLib.$w$creadPrec ww1 @ b w1 }) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fReadPerson3 :: Text.ParserCombinators.ReadP.P [WaiLib.Person]
  {- Unfolding: ((WaiLib.$fReadPerson_$creadListPrec
                    `cast`
                  (Text.ParserCombinators.ReadPrec.N:ReadPrec[0] <[WaiLib.Person]>_R)
                    GHC.Read.$fRead()8)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0] <[WaiLib.Person]>_R)
                   @ [WaiLib.Person]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [WaiLib.Person])) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fReadPerson_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [WaiLib.Person]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [WaiLib.Person]
                   WaiLib.$fReadPerson3) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fReadPerson_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [WaiLib.Person]
  {- Unfolding: (GHC.Read.list
                   @ WaiLib.Person
                   WaiLib.$fReadPerson1
                     `cast`
                   ((<Text.ParserCombinators.ReadPrec.Prec>_R
                     ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <WaiLib.Person>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                  <WaiLib.Person>_R))) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fReadPerson_$creadsPrec ::
    GHC.Types.Int -> Text.ParserCombinators.ReadP.ReadS WaiLib.Person
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n1 :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ WaiLib.Person
                   (GHC.Read.$fRead()6
                      @ WaiLib.Person
                      WaiLib.$fReadPerson2
                        `cast`
                      ((<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <WaiLib.Person>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                     <WaiLib.Person>_R))
                      n1
                      @ WaiLib.Person
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ WaiLib.Person))) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fReadUserInput :: GHC.Read.Read WaiLib.UserInput
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.UserInput
                  WaiLib.$fReadUserInput_$creadsPrec
                  WaiLib.$fReadUserInput_$creadList
                  WaiLib.$fReadUserInput1
                    `cast`
                  ((<Text.ParserCombinators.ReadPrec.Prec>_R
                    ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                  <WaiLib.UserInput>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                    <WaiLib.UserInput>_R))
                  WaiLib.$fReadUserInput_$creadListPrec -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fReadUserInput1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (WaiLib.UserInput -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2,
     Unfolding: (GHC.Read.$fRead()6
                   @ WaiLib.UserInput
                   WaiLib.$fReadUserInput2
                     `cast`
                   ((<Text.ParserCombinators.ReadPrec.Prec>_R
                     ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <WaiLib.UserInput>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                     <WaiLib.UserInput>_R))) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fReadUserInput2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (WaiLib.UserInput -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: WaiLib.UserInput -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 WaiLib.$w$creadPrec1 ww1 @ b w1 }) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fReadUserInput3 ::
    Text.ParserCombinators.ReadP.P [WaiLib.UserInput]
  {- Unfolding: ((WaiLib.$fReadUserInput_$creadListPrec
                    `cast`
                  (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                       <[WaiLib.UserInput]>_R)
                    GHC.Read.$fRead()8)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0] <[WaiLib.UserInput]>_R)
                   @ [WaiLib.UserInput]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [WaiLib.UserInput])) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fReadUserInput_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [WaiLib.UserInput]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [WaiLib.UserInput]
                   WaiLib.$fReadUserInput3) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fReadUserInput_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [WaiLib.UserInput]
  {- Unfolding: (GHC.Read.list
                   @ WaiLib.UserInput
                   WaiLib.$fReadUserInput1
                     `cast`
                   ((<Text.ParserCombinators.ReadPrec.Prec>_R
                     ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <WaiLib.UserInput>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                     <WaiLib.UserInput>_R))) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fReadUserInput_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS WaiLib.UserInput
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n1 :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ WaiLib.UserInput
                   (GHC.Read.$fRead()6
                      @ WaiLib.UserInput
                      WaiLib.$fReadUserInput2
                        `cast`
                      ((<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <WaiLib.UserInput>_R)) ; Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                                        <WaiLib.UserInput>_R))
                      n1
                      @ WaiLib.UserInput
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ WaiLib.UserInput))) -}
036a62be5a12650aff8e5a89881204da
  $fShowBlock :: GHC.Show.Show WaiLib.Block
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.Block
                  WaiLib.$fShowBlock_$cshowsPrec
                  WaiLib.$fShowBlock_$cshow
                  WaiLib.$fShowBlock_$cshowList -}
036a62be5a12650aff8e5a89881204da
  $fShowBlock1 :: WaiLib.Block -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U)><L,U>,
     Unfolding: (\ (w :: WaiLib.Block) (w1 :: GHC.Base.String) ->
                 case w of ww { WaiLib.Block ww1 ->
                 WaiLib.$w$cshowsPrec 0# ww1 w1 }) -}
165e806355dd02078f747c575f8dae52
  $fShowBlock2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
62c712bcbea6032d400fe04a9b99ff02
  $fShowBlock3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("bblock = "#) -}
28cbb7e23c42af55ad9e93d52f093dda
  $fShowBlock4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Block {"#) -}
036a62be5a12650aff8e5a89881204da
  $fShowBlock_$cshow :: WaiLib.Block -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: WaiLib.Block) ->
                 WaiLib.$fShowBlock_$cshowsPrec
                   WaiLib.$fShowBlock_n
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
036a62be5a12650aff8e5a89881204da
  $fShowBlock_$cshowList :: [WaiLib.Block] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [WaiLib.Block]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ WaiLib.Block WaiLib.$fShowBlock1 ls s) -}
036a62be5a12650aff8e5a89881204da
  $fShowBlock_$cshowsPrec ::
    GHC.Types.Int -> WaiLib.Block -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: WaiLib.Block)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { WaiLib.Block ww3 ->
                 WaiLib.$w$cshowsPrec ww1 ww3 w2 } }) -}
63fd28141213d7b60b28c532e210f116
  $fShowBlock_n :: WaiLib.ClientId
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
4094009eeca0d4f5c386f1c83b59a3e5
  $fShowCompileCode :: GHC.Show.Show WaiLib.CompileCode
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.CompileCode
                  WaiLib.$fShowCompileCode_$cshowsPrec
                  WaiLib.$fShowCompileCode_$cshow
                  WaiLib.$fShowCompileCode_$cshowList -}
4094009eeca0d4f5c386f1c83b59a3e5
  $fShowCompileCode1 :: WaiLib.CompileCode -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S,1*U(1*U(U,U,U),1*U(U,U,U),1*U(U,U,U))><L,U>,
     Unfolding: (\ (w :: WaiLib.CompileCode) (w1 :: GHC.Base.String) ->
                 case w of ww { WaiLib.CompileCode ww1 ww2 ww3 ->
                 WaiLib.$w$cshowsPrec1 0# ww1 ww2 ww3 w1 }) -}
c8fef5840ab4528b7820bcf5f3729421
  $fShowCompileCode2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("code = "#) -}
d9886bbcbb9fd5d263bc14c4f765dcd7
  $fShowCompileCode3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("option = "#) -}
cc3ff37576d089e7638bc5c061dc8432
  $fShowCompileCode4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("compiler = "#) -}
d5ebf608ec31418ce27fe6445c702378
  $fShowCompileCode5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CompileCode {"#) -}
4094009eeca0d4f5c386f1c83b59a3e5
  $fShowCompileCode_$cshow :: WaiLib.CompileCode -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U,U),1*U(U,U,U),1*U(U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: WaiLib.CompileCode) ->
                 WaiLib.$fShowCompileCode_$cshowsPrec
                   WaiLib.$fShowBlock_n
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4094009eeca0d4f5c386f1c83b59a3e5
  $fShowCompileCode_$cshowList ::
    [WaiLib.CompileCode] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [WaiLib.CompileCode]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ WaiLib.CompileCode
                   WaiLib.$fShowCompileCode1
                   ls
                   s) -}
4094009eeca0d4f5c386f1c83b59a3e5
  $fShowCompileCode_$cshowsPrec ::
    GHC.Types.Int -> WaiLib.CompileCode -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U),1*U(U,U,U),1*U(U,U,U))><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: WaiLib.CompileCode)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { WaiLib.CompileCode ww3 ww4 ww5 ->
                 WaiLib.$w$cshowsPrec1 ww1 ww3 ww4 ww5 w2 } }) -}
e902f1c8c2c9384e725bf1d73e73ae08
  $fShowGeneMatrix :: GHC.Show.Show WaiLib.GeneMatrix
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.GeneMatrix
                  WaiLib.$fShowGeneMatrix_$cshowsPrec
                  WaiLib.$fShowGeneMatrix_$cshow
                  WaiLib.$fShowGeneMatrix_$cshowList -}
e902f1c8c2c9384e725bf1d73e73ae08
  $fShowGeneMatrix1 :: WaiLib.GeneMatrix -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U(U,U,U),U,U)><L,U>,
     Unfolding: (\ (w :: WaiLib.GeneMatrix) (w1 :: GHC.Base.String) ->
                 case w of ww { WaiLib.GeneMatrix ww1 ww2 ww3 ->
                 WaiLib.$w$cshowsPrec2 0# ww1 ww2 ww3 w1 }) -}
c329a77353474bc1c120791a1bbb1c41
  $fShowGeneMatrix2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("nrow = "#) -}
53307aa21b14a0b7845fb6f30ff002af
  $fShowGeneMatrix3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ncol = "#) -}
727e00839e0f0975470d322f5dd4e521
  $fShowGeneMatrix4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cmd = "#) -}
100bb15ef7ff578bf322f8478c6e3e50
  $fShowGeneMatrix5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GeneMatrix {"#) -}
e902f1c8c2c9384e725bf1d73e73ae08
  $fShowGeneMatrix_$cshow :: WaiLib.GeneMatrix -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U,U),U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: WaiLib.GeneMatrix) ->
                 WaiLib.$fShowGeneMatrix_$cshowsPrec
                   WaiLib.$fShowBlock_n
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
e902f1c8c2c9384e725bf1d73e73ae08
  $fShowGeneMatrix_$cshowList ::
    [WaiLib.GeneMatrix] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [WaiLib.GeneMatrix]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ WaiLib.GeneMatrix
                   WaiLib.$fShowGeneMatrix1
                   ls
                   s) -}
e902f1c8c2c9384e725bf1d73e73ae08
  $fShowGeneMatrix_$cshowsPrec ::
    GHC.Types.Int -> WaiLib.GeneMatrix -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U),U,U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: WaiLib.GeneMatrix)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { WaiLib.GeneMatrix ww3 ww4 ww5 ->
                 WaiLib.$w$cshowsPrec2 ww1 ww3 ww4 ww5 w2 } }) -}
d389d91074ea84663a226202bbcac89a
  $fShowMBlock :: GHC.Show.Show WaiLib.MBlock
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.MBlock
                  WaiLib.$fShowMBlock_$cshowsPrec
                  WaiLib.$fShowMBlock_$cshow
                  WaiLib.$fShowMBlock_$cshowList -}
d389d91074ea84663a226202bbcac89a
  $fShowMBlock1 :: WaiLib.MBlock -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U)><L,U>,
     Unfolding: (\ (w :: WaiLib.MBlock) (w1 :: GHC.Base.String) ->
                 case w of ww { WaiLib.MBlock ww1 ->
                 WaiLib.$w$cshowsPrec3 0# ww1 w1 }) -}
379cb296b0dbf6f43355802b2b7fea6b
  $fShowMBlock2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("mblock = "#) -}
3edd18e2017e2d9416c41a9d7463a4cc
  $fShowMBlock3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MBlock {"#) -}
5b078788a1a619864ede9d6e5d5eaa16
  $fShowMBlock4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.$fShowBlock2) -}
d389d91074ea84663a226202bbcac89a
  $fShowMBlock_$cshow :: WaiLib.MBlock -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U)>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: WaiLib.MBlock) ->
                 case w of ww { WaiLib.MBlock ww1 -> WaiLib.$w$cshow ww1 }) -}
d389d91074ea84663a226202bbcac89a
  $fShowMBlock_$cshowList :: [WaiLib.MBlock] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [WaiLib.MBlock]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ WaiLib.MBlock WaiLib.$fShowMBlock1 ls s) -}
d389d91074ea84663a226202bbcac89a
  $fShowMBlock_$cshowsPrec ::
    GHC.Types.Int -> WaiLib.MBlock -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: WaiLib.MBlock)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { WaiLib.MBlock ww3 ->
                 WaiLib.$w$cshowsPrec3 ww1 ww3 w2 } }) -}
f1a65188febf657dbbd7006cade26c93
  $fShowMatInt :: GHC.Show.Show WaiLib.MatInt
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.MatInt
                  WaiLib.$fShowMatInt_$cshowsPrec
                  WaiLib.$fShowMatInt_$cshow
                  WaiLib.$fShowMatInt_$cshowList -}
f1a65188febf657dbbd7006cade26c93
  $fShowMatInt1 :: WaiLib.MatInt -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U(U,U,U),1*U)><L,U>,
     Unfolding: (\ (w :: WaiLib.MatInt) (w1 :: GHC.Base.String) ->
                 case w of ww { WaiLib.MatInt ww1 ww2 ->
                 WaiLib.$w$cshowsPrec4 0# ww1 ww2 w1 }) -}
901042a9bf4c3e6d1f724cf6304bdc30
  $fShowMatInt2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.$fShowMatInt3) -}
f44d32a4270db05275540288b4edbc7e
  $fShowMatInt3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MatInt {"#) -}
cfa0ee6d88a19299d02c0df600065ec5
  $fShowMatInt4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("matrix = "#) -}
c4c4cd3386e392f2e45d41b18bf0c67a
  $fShowMatInt5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("name = "#) -}
f1a65188febf657dbbd7006cade26c93
  $fShowMatInt_$cshow :: WaiLib.MatInt -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U,U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: WaiLib.MatInt) ->
                 WaiLib.$fShowMatInt_$cshowsPrec
                   WaiLib.$fShowBlock_n
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
f1a65188febf657dbbd7006cade26c93
  $fShowMatInt_$cshowList :: [WaiLib.MatInt] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [WaiLib.MatInt]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ WaiLib.MatInt WaiLib.$fShowMatInt1 ls s) -}
f1a65188febf657dbbd7006cade26c93
  $fShowMatInt_$cshowsPrec ::
    GHC.Types.Int -> WaiLib.MatInt -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U),1*U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: WaiLib.MatInt)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { WaiLib.MatInt ww3 ww4 ->
                 WaiLib.$w$cshowsPrec4 ww1 ww3 ww4 w2 } }) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fShowPerson :: GHC.Show.Show WaiLib.Person
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.Person
                  WaiLib.$fShowPerson_$cshowsPrec
                  WaiLib.$fShowPerson_$cshow
                  WaiLib.$fShowPerson_$cshowList -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fShowPerson1 :: WaiLib.Person -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S,1*U(1*U(U),1*U(U,U,U),1*U(U,U,U))><L,U>,
     Unfolding: (\ (w :: WaiLib.Person) (w1 :: GHC.Base.String) ->
                 case w of ww { WaiLib.Person ww1 ww2 ww3 ->
                 WaiLib.$w$cshowsPrec5 0# ww1 ww2 ww3 w1 }) -}
5654a5157af663a08800c6c76c8e0a09
  $fShowPerson2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("personAge = "#) -}
c9321d6287623a6d3ff3d948c8c03293
  $fShowPerson3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("personName = "#) -}
a16dfb0360133f35d17731fbdb66806e
  $fShowPerson4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("personId = "#) -}
45bd65ab292b23174c8bd411afcdd99f
  $fShowPerson5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Person {"#) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fShowPerson_$cshow :: WaiLib.Person -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U(U,U,U),1*U(U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: WaiLib.Person) ->
                 WaiLib.$fShowPerson_$cshowsPrec
                   WaiLib.$fShowBlock_n
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fShowPerson_$cshowList :: [WaiLib.Person] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [WaiLib.Person]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ WaiLib.Person WaiLib.$fShowPerson1 ls s) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fShowPerson_$cshowsPrec ::
    GHC.Types.Int -> WaiLib.Person -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U(U,U,U),1*U(U,U,U))><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: WaiLib.Person)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { WaiLib.Person ww3 ww4 ww5 ->
                 WaiLib.$w$cshowsPrec5 ww1 ww3 ww4 ww5 w2 } }) -}
7b43be4a14f888fb43c27f767eb58be1
  $fShowReplyCode :: GHC.Show.Show WaiLib.ReplyCode
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.ReplyCode
                  WaiLib.$fShowReplyCode_$cshowsPrec
                  WaiLib.$fShowReplyCode_$cshow
                  WaiLib.$fShowReplyCode_$cshowList -}
7b43be4a14f888fb43c27f767eb58be1
  $fShowReplyCode1 :: WaiLib.ReplyCode -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S,1*U(1*U(U,U,U),1*U(U,U,U),1*U(U,U,U))><L,U>,
     Unfolding: (\ (w :: WaiLib.ReplyCode) (w1 :: GHC.Base.String) ->
                 case w of ww { WaiLib.ReplyCode ww1 ww2 ww3 ->
                 WaiLib.$w$cshowsPrec6 0# ww1 ww2 ww3 w1 }) -}
a663ad612739d728cda5ba94153798dc
  $fShowReplyCode2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("stdout = "#) -}
6f107d5252c18b666341b2d08d009207
  $fShowReplyCode3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("rerror = "#) -}
a6bea44ee4680dcb29c049099cf788c4
  $fShowReplyCode4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("rcmd = "#) -}
48fa8aa4f6878765f1fac64cdb14ddef
  $fShowReplyCode5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ReplyCode {"#) -}
7b43be4a14f888fb43c27f767eb58be1
  $fShowReplyCode_$cshow :: WaiLib.ReplyCode -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U,U),1*U(U,U,U),1*U(U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: WaiLib.ReplyCode) ->
                 WaiLib.$fShowReplyCode_$cshowsPrec
                   WaiLib.$fShowBlock_n
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
7b43be4a14f888fb43c27f767eb58be1
  $fShowReplyCode_$cshowList :: [WaiLib.ReplyCode] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [WaiLib.ReplyCode]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ WaiLib.ReplyCode
                   WaiLib.$fShowReplyCode1
                   ls
                   s) -}
7b43be4a14f888fb43c27f767eb58be1
  $fShowReplyCode_$cshowsPrec ::
    GHC.Types.Int -> WaiLib.ReplyCode -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U),1*U(U,U,U),1*U(U,U,U))><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: WaiLib.ReplyCode)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { WaiLib.ReplyCode ww3 ww4 ww5 ->
                 WaiLib.$w$cshowsPrec6 ww1 ww3 ww4 ww5 w2 } }) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fShowUserInput :: GHC.Show.Show WaiLib.UserInput
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.UserInput
                  WaiLib.$fShowUserInput_$cshowsPrec
                  WaiLib.$fShowUserInput_$cshow
                  WaiLib.$fShowUserInput_$cshowList -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fShowUserInput1 :: WaiLib.UserInput -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U(U),1*U(U,U,U))><L,U>,
     Unfolding: (\ (w :: WaiLib.UserInput) (w1 :: GHC.Base.String) ->
                 case w of ww { WaiLib.UserInput ww1 ww2 ->
                 WaiLib.$w$cshowsPrec7 0# ww1 ww2 w1 }) -}
c5fa8b1ffa5a90f090b4764d8a14e2e4
  $fShowUserInput2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("xcmd = "#) -}
a81cbab5f9fe16640263f8dba15b174c
  $fShowUserInput3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cmdId = "#) -}
1f51740efd0a672151683ced07f80e14
  $fShowUserInput4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.$fShowUserInput5) -}
c2c25d7404a578515b8a8c22a2c42717
  $fShowUserInput5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UserInput {"#) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fShowUserInput_$cshow :: WaiLib.UserInput -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U(U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: WaiLib.UserInput) ->
                 WaiLib.$fShowUserInput_$cshowsPrec
                   WaiLib.$fShowBlock_n
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fShowUserInput_$cshowList :: [WaiLib.UserInput] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [WaiLib.UserInput]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ WaiLib.UserInput
                   WaiLib.$fShowUserInput1
                   ls
                   s) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fShowUserInput_$cshowsPrec ::
    GHC.Types.Int -> WaiLib.UserInput -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U(U,U,U))><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: WaiLib.UserInput)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { WaiLib.UserInput ww3 ww4 ->
                 WaiLib.$w$cshowsPrec7 ww1 ww3 ww4 w2 } }) -}
036a62be5a12650aff8e5a89881204da
  $fToJSONBlock :: Data.Aeson.Types.ToJSON.ToJSON WaiLib.Block
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.Block
                  WaiLib.$fToJSONBlock_$ctoJSON
                  WaiLib.$fToJSONBlock1
                    `cast`
                  (<WaiLib.Block>_R
                   ->_R (forall (r :: <*>_N).
                         <Data.ByteString.Builder.Internal.BuildStep r>_R
                         ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Builder.Internal.BuildSignal r>_R)) ; Nth:3
                                                                                                  (((Sym (GHC.Generics.N:M1[0]
                                                                                                              <*>_N
                                                                                                              <GHC.Generics.C>_P
                                                                                                              <'GHC.Generics.MetaCons
                                                                                                                 "Block"
                                                                                                                 'GHC.Generics.PrefixI
                                                                                                                 'GHC.Types.True>_P
                                                                                                              <GHC.Generics.M1
                                                                                                                 GHC.Generics.S
                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                    ('GHC.Maybe.Just
                                                                                                                       "bblock")
                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                 (GHC.Generics.Rec0
                                                                                                                    [Data.Text.Internal.Lazy.Text])>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                                                                   <*>_N
                                                                                                                                                                   <GHC.Generics.D>_P
                                                                                                                                                                   <'GHC.Generics.MetaData
                                                                                                                                                                      "Block"
                                                                                                                                                                      "WaiLib"
                                                                                                                                                                      "main"
                                                                                                                                                                      'GHC.Types.False>_P
                                                                                                                                                                   <GHC.Generics.M1
                                                                                                                                                                      GHC.Generics.C
                                                                                                                                                                      ('GHC.Generics.MetaCons
                                                                                                                                                                         "Block"
                                                                                                                                                                         'GHC.Generics.PrefixI
                                                                                                                                                                         'GHC.Types.True)
                                                                                                                                                                      (GHC.Generics.M1
                                                                                                                                                                         GHC.Generics.S
                                                                                                                                                                         ('GHC.Generics.MetaSel
                                                                                                                                                                            ('GHC.Maybe.Just
                                                                                                                                                                               "bblock")
                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                         (GHC.Generics.Rec0
                                                                                                                                                                            [Data.Text.Internal.Lazy.Text]))>_R)) <GHC.Types.Any>_N
                                                                                                    ->_R Sym (Data.ByteString.Builder.Internal.N:Builder[0]) ; Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                                                                                                                        <Data.Aeson.Types.Internal.Value>_P)) ; Nth:3
                                                                                                                                                                                                                    (Nth:3
                                                                                                                                                                                                                         (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                          ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                                                                                                                                                                                                                  Data.Aeson.Encoding.Internal.Encoding
                                                                                                                                                                                                                                  Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                  GHC.Types.Any>_R
                                                                                                                                                                                                                          ->_R Sub (Sym (WaiLib.Rep_Block[0])) <GHC.Types.Any>_N
                                                                                                                                                                                                                          ->_R <Data.Aeson.Encoding.Internal.Encoding>_R))))
                  WaiLib.$fToJSONBlock_$ctoJSONList
                  WaiLib.$fToJSONBlock_$ctoEncodingList -}
036a62be5a12650aff8e5a89881204da
  $fToJSONBlock1 ::
    WaiLib.Block
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BufferRange
       -> GHC.Prim.State# GHC.Prim.RealWorld
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 4,
     Strictness: <L,1*U(1*U)><L,C(C1(U(U,U)))><S(SS),1*U(U,U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: WaiLib.Block)
                   @ r
                   (w1 :: Data.ByteString.Builder.Internal.BuildStep r)
                   (w2 :: Data.ByteString.Builder.Internal.BufferRange)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w2 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                 WaiLib.$w$ctoEncoding w @ r w1 ww1 ww2 w3 }) -}
487e1db3ce9ca284939b3d89a10ea234
  $fToJSONBlock2 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        WaiLib.$fToJSONBlock3 of ds5 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
0d26faf9d6a8f7c04aa53821e24c9712
  $fToJSONBlock3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds5 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   WaiLib.$fFromJSONBlock7
                   0#
                   ipv1 }) -}
036a62be5a12650aff8e5a89881204da
  $fToJSONBlock_$ctoEncodingList ::
    [WaiLib.Block] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ WaiLib.Block
                   WaiLib.$fToJSONBlock1
                     `cast`
                   (<WaiLib.Block>_R
                    ->_R (forall (r :: <*>_N).
                          <Data.ByteString.Builder.Internal.BuildStep r>_R
                          ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <Data.ByteString.Builder.Internal.BuildSignal r>_R)) ; Nth:3
                                                                                                   (((Sym (GHC.Generics.N:M1[0]
                                                                                                               <*>_N
                                                                                                               <GHC.Generics.C>_P
                                                                                                               <'GHC.Generics.MetaCons
                                                                                                                  "Block"
                                                                                                                  'GHC.Generics.PrefixI
                                                                                                                  'GHC.Types.True>_P
                                                                                                               <GHC.Generics.M1
                                                                                                                  GHC.Generics.S
                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                     ('GHC.Maybe.Just
                                                                                                                        "bblock")
                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                  (GHC.Generics.Rec0
                                                                                                                     [Data.Text.Internal.Lazy.Text])>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                                                                    <*>_N
                                                                                                                                                                    <GHC.Generics.D>_P
                                                                                                                                                                    <'GHC.Generics.MetaData
                                                                                                                                                                       "Block"
                                                                                                                                                                       "WaiLib"
                                                                                                                                                                       "main"
                                                                                                                                                                       'GHC.Types.False>_P
                                                                                                                                                                    <GHC.Generics.M1
                                                                                                                                                                       GHC.Generics.C
                                                                                                                                                                       ('GHC.Generics.MetaCons
                                                                                                                                                                          "Block"
                                                                                                                                                                          'GHC.Generics.PrefixI
                                                                                                                                                                          'GHC.Types.True)
                                                                                                                                                                       (GHC.Generics.M1
                                                                                                                                                                          GHC.Generics.S
                                                                                                                                                                          ('GHC.Generics.MetaSel
                                                                                                                                                                             ('GHC.Maybe.Just
                                                                                                                                                                                "bblock")
                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                          (GHC.Generics.Rec0
                                                                                                                                                                             [Data.Text.Internal.Lazy.Text]))>_R)) <GHC.Types.Any>_N
                                                                                                     ->_R Sym (Data.ByteString.Builder.Internal.N:Builder[0]) ; Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                                                                                                                         <Data.Aeson.Types.Internal.Value>_P)) ; Nth:3
                                                                                                                                                                                                                     (Nth:3
                                                                                                                                                                                                                          (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                           ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                                                                                                                                                                                                                   Data.Aeson.Encoding.Internal.Encoding
                                                                                                                                                                                                                                   Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                   GHC.Types.Any>_R
                                                                                                                                                                                                                           ->_R Sub (Sym (WaiLib.Rep_Block[0])) <GHC.Types.Any>_N
                                                                                                                                                                                                                           ->_R <Data.Aeson.Encoding.Internal.Encoding>_R))))) -}
036a62be5a12650aff8e5a89881204da
  $fToJSONBlock_$ctoJSON ::
    WaiLib.Block -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <L,1*U(1*U)>m1, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: WaiLib.Block) ->
                 case WaiLib.$w$ctoJSON w of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Object ww1 }) -}
036a62be5a12650aff8e5a89881204da
  $fToJSONBlock_$ctoJSONList ::
    [WaiLib.Block] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [WaiLib.Block]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ WaiLib.Block
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ WaiLib.Block
                                     c
                                     WaiLib.$fToJSONBlock_$ctoJSON)
                                  n1
                                  x)))))) -}
4094009eeca0d4f5c386f1c83b59a3e5
  $fToJSONCompileCode ::
    Data.Aeson.Types.ToJSON.ToJSON WaiLib.CompileCode
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.CompileCode
                  WaiLib.$fToJSONCompileCode_$ctoJSON
                  WaiLib.$fToJSONCompileCode1
                    `cast`
                  (<WaiLib.CompileCode>_R
                   ->_R (forall (r :: <*>_N).
                         <Data.ByteString.Builder.Internal.BuildStep r>_R
                         ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Builder.Internal.BuildSignal r>_R)) ; Nth:3
                                                                                                  (((Sym (GHC.Generics.N:M1[0]
                                                                                                              <*>_N
                                                                                                              <GHC.Generics.C>_P
                                                                                                              <'GHC.Generics.MetaCons
                                                                                                                 "CompileCode"
                                                                                                                 'GHC.Generics.PrefixI
                                                                                                                 'GHC.Types.True>_P
                                                                                                              <GHC.Generics.S1
                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                    ('GHC.Maybe.Just
                                                                                                                       "compiler")
                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                 (GHC.Generics.Rec0
                                                                                                                    Data.Text.Internal.Text)
                                                                                                               GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                                      ('GHC.Maybe.Just
                                                                                                                                         "option")
                                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                   (GHC.Generics.Rec0
                                                                                                                                      Data.Text.Internal.Text)
                                                                                                                                 GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                                       ('GHC.Maybe.Just
                                                                                                                                                          "code")
                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                    (GHC.Generics.Rec0
                                                                                                                                                       Data.Text.Internal.Text))>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                                                                                                <*>_N
                                                                                                                                                                                                <GHC.Generics.D>_P
                                                                                                                                                                                                <'GHC.Generics.MetaData
                                                                                                                                                                                                   "CompileCode"
                                                                                                                                                                                                   "WaiLib"
                                                                                                                                                                                                   "main"
                                                                                                                                                                                                   'GHC.Types.False>_P
                                                                                                                                                                                                <GHC.Generics.M1
                                                                                                                                                                                                   GHC.Generics.C
                                                                                                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                                                                                                      "CompileCode"
                                                                                                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                                                                                                      'GHC.Types.True)
                                                                                                                                                                                                   (GHC.Generics.S1
                                                                                                                                                                                                      ('GHC.Generics.MetaSel
                                                                                                                                                                                                         ('GHC.Maybe.Just
                                                                                                                                                                                                            "compiler")
                                                                                                                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                      (GHC.Generics.Rec0
                                                                                                                                                                                                         Data.Text.Internal.Text)
                                                                                                                                                                                                    GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                                                                                                        ('GHC.Generics.MetaSel
                                                                                                                                                                                                                           ('GHC.Maybe.Just
                                                                                                                                                                                                                              "option")
                                                                                                                                                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                        (GHC.Generics.Rec0
                                                                                                                                                                                                                           Data.Text.Internal.Text)
                                                                                                                                                                                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                                                                                                         ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                            ('GHC.Maybe.Just
                                                                                                                                                                                                                                               "code")
                                                                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                         (GHC.Generics.Rec0
                                                                                                                                                                                                                                            Data.Text.Internal.Text)))>_R)) <GHC.Types.Any>_N
                                                                                                    ->_R Sym (Data.ByteString.Builder.Internal.N:Builder[0]) ; Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                                                                                                                        <Data.Aeson.Types.Internal.Value>_P)) ; Nth:3
                                                                                                                                                                                                                    (Nth:3
                                                                                                                                                                                                                         (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                          ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                                                                                                                                                                                                                  Data.Aeson.Encoding.Internal.Encoding
                                                                                                                                                                                                                                  Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                  GHC.Types.Any>_R
                                                                                                                                                                                                                          ->_R Sub (Sym (WaiLib.Rep_CompileCode[0])) <GHC.Types.Any>_N
                                                                                                                                                                                                                          ->_R <Data.Aeson.Encoding.Internal.Encoding>_R))))
                  WaiLib.$fToJSONCompileCode_$ctoJSONList
                  WaiLib.$fToJSONCompileCode_$ctoEncodingList -}
4094009eeca0d4f5c386f1c83b59a3e5
  $fToJSONCompileCode1 ::
    WaiLib.CompileCode
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BufferRange
       -> GHC.Prim.State# GHC.Prim.RealWorld
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 4,
     Strictness: <S,1*U(U(U,U,U),U(U,U,U),U(U,U,U))><L,C(C1(U(U,U)))><S(SS),1*U(U,U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: WaiLib.CompileCode)
                   @ r
                   (w1 :: Data.ByteString.Builder.Internal.BuildStep r)
                   (w2 :: Data.ByteString.Builder.Internal.BufferRange)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { WaiLib.CompileCode ww1 ww2 ww3 ->
                 case w2 of ww4 { Data.ByteString.Builder.Internal.BufferRange ww5 ww6 ->
                 WaiLib.$w$ctoEncoding1 ww1 ww2 ww3 @ r w1 ww5 ww6 w3 } }) -}
297302b6b6ba6ad8d4b4311728001d3e
  $fToJSONCompileCode2 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        WaiLib.$fToJSONCompileCode3 of ds5 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
469bd391ca5862dbed519da8086a601e
  $fToJSONCompileCode3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds5 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   WaiLib.$fFromJSONCompileCode2
                   0#
                   ipv1 }) -}
a537f5d1d146c510fcc6b8a3b485eab5
  $fToJSONCompileCode4 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        WaiLib.$fToJSONCompileCode5 of ds5 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
aa283fd3b3c141de32b9c2a0a423eb53
  $fToJSONCompileCode5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds5 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   WaiLib.$fFromJSONCompileCode4
                   0#
                   ipv1 }) -}
bc10e4a6156a6d40449fbf0f519280b0
  $fToJSONCompileCode6 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        WaiLib.$fToJSONCompileCode7 of ds5 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
8c1358a90283b65c667397d7fe65f337
  $fToJSONCompileCode7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds5 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   WaiLib.$fFromJSONCompileCode7
                   0#
                   ipv1 }) -}
4094009eeca0d4f5c386f1c83b59a3e5
  $fToJSONCompileCode_$ctoEncodingList ::
    [WaiLib.CompileCode] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ WaiLib.CompileCode
                   WaiLib.$fToJSONCompileCode1
                     `cast`
                   (<WaiLib.CompileCode>_R
                    ->_R (forall (r :: <*>_N).
                          <Data.ByteString.Builder.Internal.BuildStep r>_R
                          ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <Data.ByteString.Builder.Internal.BuildSignal r>_R)) ; Nth:3
                                                                                                   (((Sym (GHC.Generics.N:M1[0]
                                                                                                               <*>_N
                                                                                                               <GHC.Generics.C>_P
                                                                                                               <'GHC.Generics.MetaCons
                                                                                                                  "CompileCode"
                                                                                                                  'GHC.Generics.PrefixI
                                                                                                                  'GHC.Types.True>_P
                                                                                                               <GHC.Generics.S1
                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                     ('GHC.Maybe.Just
                                                                                                                        "compiler")
                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                  (GHC.Generics.Rec0
                                                                                                                     Data.Text.Internal.Text)
                                                                                                                GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                       ('GHC.Maybe.Just
                                                                                                                                          "option")
                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                    (GHC.Generics.Rec0
                                                                                                                                       Data.Text.Internal.Text)
                                                                                                                                  GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                                        ('GHC.Maybe.Just
                                                                                                                                                           "code")
                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                     (GHC.Generics.Rec0
                                                                                                                                                        Data.Text.Internal.Text))>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                                                                                                 <*>_N
                                                                                                                                                                                                 <GHC.Generics.D>_P
                                                                                                                                                                                                 <'GHC.Generics.MetaData
                                                                                                                                                                                                    "CompileCode"
                                                                                                                                                                                                    "WaiLib"
                                                                                                                                                                                                    "main"
                                                                                                                                                                                                    'GHC.Types.False>_P
                                                                                                                                                                                                 <GHC.Generics.M1
                                                                                                                                                                                                    GHC.Generics.C
                                                                                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                                                                                       "CompileCode"
                                                                                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                                                                                       'GHC.Types.True)
                                                                                                                                                                                                    (GHC.Generics.S1
                                                                                                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                                                                                                          ('GHC.Maybe.Just
                                                                                                                                                                                                             "compiler")
                                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                       (GHC.Generics.Rec0
                                                                                                                                                                                                          Data.Text.Internal.Text)
                                                                                                                                                                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                                                                                                         ('GHC.Generics.MetaSel
                                                                                                                                                                                                                            ('GHC.Maybe.Just
                                                                                                                                                                                                                               "option")
                                                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                         (GHC.Generics.Rec0
                                                                                                                                                                                                                            Data.Text.Internal.Text)
                                                                                                                                                                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                                                                                                          ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                             ('GHC.Maybe.Just
                                                                                                                                                                                                                                                "code")
                                                                                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                          (GHC.Generics.Rec0
                                                                                                                                                                                                                                             Data.Text.Internal.Text)))>_R)) <GHC.Types.Any>_N
                                                                                                     ->_R Sym (Data.ByteString.Builder.Internal.N:Builder[0]) ; Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                                                                                                                         <Data.Aeson.Types.Internal.Value>_P)) ; Nth:3
                                                                                                                                                                                                                     (Nth:3
                                                                                                                                                                                                                          (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                           ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                                                                                                                                                                                                                   Data.Aeson.Encoding.Internal.Encoding
                                                                                                                                                                                                                                   Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                   GHC.Types.Any>_R
                                                                                                                                                                                                                           ->_R Sub (Sym (WaiLib.Rep_CompileCode[0])) <GHC.Types.Any>_N
                                                                                                                                                                                                                           ->_R <Data.Aeson.Encoding.Internal.Encoding>_R))))) -}
4094009eeca0d4f5c386f1c83b59a3e5
  $fToJSONCompileCode_$ctoJSON ::
    WaiLib.CompileCode -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U,U)>m1, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: WaiLib.CompileCode) ->
                 case w of ww { WaiLib.CompileCode ww1 ww2 ww3 ->
                 case WaiLib.$w$ctoJSON1 ww1 ww2 ww3 of ww4 { Unit# ww5 ->
                 Data.Aeson.Types.Internal.Object ww5 } }) -}
4094009eeca0d4f5c386f1c83b59a3e5
  $fToJSONCompileCode_$ctoJSONList ::
    [WaiLib.CompileCode] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [WaiLib.CompileCode]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ WaiLib.CompileCode
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ WaiLib.CompileCode
                                     c
                                     WaiLib.$fToJSONCompileCode_$ctoJSON)
                                  n1
                                  x)))))) -}
e902f1c8c2c9384e725bf1d73e73ae08
  $fToJSONGeneMatrix ::
    Data.Aeson.Types.ToJSON.ToJSON WaiLib.GeneMatrix
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.GeneMatrix
                  WaiLib.$fToJSONGeneMatrix_$ctoJSON
                  WaiLib.$fToJSONGeneMatrix1
                    `cast`
                  (<WaiLib.GeneMatrix>_R
                   ->_R Nth:3
                            (((Sym (GHC.Generics.N:M1[0]
                                        <*>_N
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "GeneMatrix" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                        <GHC.Generics.S1
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Maybe.Just "cmd")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                         GHC.Generics.:*: (GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Maybe.Just "ncol")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0
                                                                GHC.Integer.Type.Integer)
                                                           GHC.Generics.:*: GHC.Generics.S1
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Maybe.Just
                                                                                    "nrow")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.Rec0
                                                                                 GHC.Integer.Type.Integer))>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                           <*>_N
                                                                                                                           <GHC.Generics.D>_P
                                                                                                                           <'GHC.Generics.MetaData
                                                                                                                              "GeneMatrix"
                                                                                                                              "WaiLib"
                                                                                                                              "main"
                                                                                                                              'GHC.Types.False>_P
                                                                                                                           <GHC.Generics.M1
                                                                                                                              GHC.Generics.C
                                                                                                                              ('GHC.Generics.MetaCons
                                                                                                                                 "GeneMatrix"
                                                                                                                                 'GHC.Generics.PrefixI
                                                                                                                                 'GHC.Types.True)
                                                                                                                              (GHC.Generics.S1
                                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                                    ('GHC.Maybe.Just
                                                                                                                                       "cmd")
                                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                 (GHC.Generics.Rec0
                                                                                                                                    Data.Text.Internal.Text)
                                                                                                                               GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                                                      ('GHC.Maybe.Just
                                                                                                                                                         "ncol")
                                                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                                   (GHC.Generics.Rec0
                                                                                                                                                      GHC.Integer.Type.Integer)
                                                                                                                                                 GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                                                       ('GHC.Maybe.Just
                                                                                                                                                                          "nrow")
                                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                                    (GHC.Generics.Rec0
                                                                                                                                                                       GHC.Integer.Type.Integer)))>_R)) <GHC.Types.Any>_N
                              ->_R Sym (Data.ByteString.Builder.Internal.N:Builder[0]) ; Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                                                  <Data.Aeson.Types.Internal.Value>_P)) ; Nth:3
                                                                                                                                              (Nth:3
                                                                                                                                                   (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                    ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                                                                                                                                            Data.Aeson.Encoding.Internal.Encoding
                                                                                                                                                            Data.Aeson.Types.Generic.Zero
                                                                                                                                                            GHC.Types.Any>_R
                                                                                                                                                    ->_R Sub (Sym (WaiLib.Rep_GeneMatrix[0])) <GHC.Types.Any>_N
                                                                                                                                                    ->_R <Data.Aeson.Encoding.Internal.Encoding>_R))))
                  WaiLib.$fToJSONGeneMatrix_$ctoJSONList
                  WaiLib.$fToJSONGeneMatrix_$ctoEncodingList -}
e902f1c8c2c9384e725bf1d73e73ae08
  $fToJSONGeneMatrix1 ::
    WaiLib.GeneMatrix
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BuildStep r
  {- Arity: 1, Strictness: <L,1*U(U(U,U,U),1*U,1*U)> -}
3d30c6de4edeccec0314e0eec361743e
  $fToJSONGeneMatrix2 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        WaiLib.$fToJSONGeneMatrix3 of ds5 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
bd6a95aede498b25391b432a98872d02
  $fToJSONGeneMatrix3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds5 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   WaiLib.$fFromJSONGeneMatrix2
                   0#
                   ipv1 }) -}
f99320fafb77e05086574c51e09a51f4
  $fToJSONGeneMatrix4 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        WaiLib.$fToJSONGeneMatrix5 of ds5 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
ab845cc7f9252d13695551724c068e4a
  $fToJSONGeneMatrix5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds5 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   WaiLib.$fFromJSONGeneMatrix5
                   0#
                   ipv1 }) -}
686e07e264dfe203a6599865b310a3f6
  $fToJSONGeneMatrix6 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        WaiLib.$fToJSONGeneMatrix7 of ds5 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
8a08629bc56015761a0e23a30dc4ea41
  $fToJSONGeneMatrix7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds5 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   WaiLib.$fFromJSONGeneMatrix7
                   0#
                   ipv1 }) -}
e902f1c8c2c9384e725bf1d73e73ae08
  $fToJSONGeneMatrix_$ctoEncodingList ::
    [WaiLib.GeneMatrix] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ WaiLib.GeneMatrix
                   WaiLib.$fToJSONGeneMatrix1
                     `cast`
                   (<WaiLib.GeneMatrix>_R
                    ->_R Nth:3
                             (((Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.C>_P
                                         <'GHC.Generics.MetaCons
                                            "GeneMatrix" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                         <GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Maybe.Just "cmd")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                          GHC.Generics.:*: (GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Maybe.Just "ncol")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0
                                                                 GHC.Integer.Type.Integer)
                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Maybe.Just
                                                                                     "nrow")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.Rec0
                                                                                  GHC.Integer.Type.Integer))>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                            <*>_N
                                                                                                                            <GHC.Generics.D>_P
                                                                                                                            <'GHC.Generics.MetaData
                                                                                                                               "GeneMatrix"
                                                                                                                               "WaiLib"
                                                                                                                               "main"
                                                                                                                               'GHC.Types.False>_P
                                                                                                                            <GHC.Generics.M1
                                                                                                                               GHC.Generics.C
                                                                                                                               ('GHC.Generics.MetaCons
                                                                                                                                  "GeneMatrix"
                                                                                                                                  'GHC.Generics.PrefixI
                                                                                                                                  'GHC.Types.True)
                                                                                                                               (GHC.Generics.S1
                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                     ('GHC.Maybe.Just
                                                                                                                                        "cmd")
                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                  (GHC.Generics.Rec0
                                                                                                                                     Data.Text.Internal.Text)
                                                                                                                                GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                                       ('GHC.Maybe.Just
                                                                                                                                                          "ncol")
                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                    (GHC.Generics.Rec0
                                                                                                                                                       GHC.Integer.Type.Integer)
                                                                                                                                                  GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                                                        ('GHC.Maybe.Just
                                                                                                                                                                           "nrow")
                                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                                     (GHC.Generics.Rec0
                                                                                                                                                                        GHC.Integer.Type.Integer)))>_R)) <GHC.Types.Any>_N
                               ->_R Sym (Data.ByteString.Builder.Internal.N:Builder[0]) ; Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                                                   <Data.Aeson.Types.Internal.Value>_P)) ; Nth:3
                                                                                                                                               (Nth:3
                                                                                                                                                    (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                     ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                                                                                                                                             Data.Aeson.Encoding.Internal.Encoding
                                                                                                                                                             Data.Aeson.Types.Generic.Zero
                                                                                                                                                             GHC.Types.Any>_R
                                                                                                                                                     ->_R Sub (Sym (WaiLib.Rep_GeneMatrix[0])) <GHC.Types.Any>_N
                                                                                                                                                     ->_R <Data.Aeson.Encoding.Internal.Encoding>_R))))) -}
e902f1c8c2c9384e725bf1d73e73ae08
  $fToJSONGeneMatrix_$ctoJSON ::
    WaiLib.GeneMatrix -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,1*U,1*U)>m1, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: WaiLib.GeneMatrix) ->
                 case w of ww { WaiLib.GeneMatrix ww1 ww2 ww3 ->
                 case WaiLib.$w$ctoJSON2 ww1 ww2 ww3 of ww4 { Unit# ww5 ->
                 Data.Aeson.Types.Internal.Object ww5 } }) -}
e902f1c8c2c9384e725bf1d73e73ae08
  $fToJSONGeneMatrix_$ctoJSONList ::
    [WaiLib.GeneMatrix] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [WaiLib.GeneMatrix]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ WaiLib.GeneMatrix
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ WaiLib.GeneMatrix
                                     c
                                     WaiLib.$fToJSONGeneMatrix_$ctoJSON)
                                  n1
                                  x)))))) -}
d389d91074ea84663a226202bbcac89a
  $fToJSONMBlock :: Data.Aeson.Types.ToJSON.ToJSON WaiLib.MBlock
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.MBlock
                  WaiLib.$fToJSONMBlock_$ctoJSON
                  WaiLib.$fToJSONMBlock1
                    `cast`
                  (<WaiLib.MBlock>_R
                   ->_R Nth:3
                            (((Sym (GHC.Generics.N:M1[0]
                                        <*>_N
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "MBlock" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                        <GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Maybe.Just "mblock")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0
                                              [GHC.Integer.Type.Integer])>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                         <*>_N
                                                                                         <GHC.Generics.D>_P
                                                                                         <'GHC.Generics.MetaData
                                                                                            "MBlock"
                                                                                            "WaiLib"
                                                                                            "main"
                                                                                            'GHC.Types.False>_P
                                                                                         <GHC.Generics.M1
                                                                                            GHC.Generics.C
                                                                                            ('GHC.Generics.MetaCons
                                                                                               "MBlock"
                                                                                               'GHC.Generics.PrefixI
                                                                                               'GHC.Types.True)
                                                                                            (GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Maybe.Just
                                                                                                     "mblock")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.Rec0
                                                                                                  [GHC.Integer.Type.Integer]))>_R)) <GHC.Types.Any>_N
                              ->_R Sym (Data.ByteString.Builder.Internal.N:Builder[0]) ; Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                                                  <Data.Aeson.Types.Internal.Value>_P)) ; Nth:3
                                                                                                                                              (Nth:3
                                                                                                                                                   (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                    ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                                                                                                                                            Data.Aeson.Encoding.Internal.Encoding
                                                                                                                                                            Data.Aeson.Types.Generic.Zero
                                                                                                                                                            GHC.Types.Any>_R
                                                                                                                                                    ->_R Sub (Sym (WaiLib.Rep_MBlock[0])) <GHC.Types.Any>_N
                                                                                                                                                    ->_R <Data.Aeson.Encoding.Internal.Encoding>_R))))
                  WaiLib.$fToJSONMBlock_$ctoJSONList
                  WaiLib.$fToJSONMBlock_$ctoEncodingList -}
d389d91074ea84663a226202bbcac89a
  $fToJSONMBlock1 ::
    WaiLib.MBlock
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BuildStep r
  {- Arity: 1, Strictness: <L,1*U(1*U)>,
     Unfolding: (\ (x :: WaiLib.MBlock) ->
                 let {
                   w1 :: Data.ByteString.Builder.Internal.Builder
                   = case x of wild { WaiLib.MBlock g1 ->
                     case g1 of wild1 {
                       []
                       -> Data.Aeson.Encoding.Builder.emptyArray_1
                            `cast`
                          ((forall (r :: <*>_N).
                            <Data.ByteString.Builder.Internal.BuildStep r>_R
                            ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                            ->_R Sym (GHC.Types.N:IO[0]
                                          <Data.ByteString.Builder.Internal.BuildSignal
                                             r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                       : x1 xs
                       -> (\ @ r ->
                           let {
                             f :: Data.ByteString.Builder.Internal.BuildStep r
                                  -> Data.ByteString.Builder.Internal.BuildStep r
                             = (Data.ByteString.Builder.ASCII.integerDec x1)
                                 `cast`
                               (Data.ByteString.Builder.Internal.N:Builder[0])
                                 @ r
                           } in
                           let {
                             f1 :: Data.ByteString.Builder.Internal.BuildStep r
                                   -> Data.ByteString.Builder.Internal.BuildStep r
                             = (WaiLib.$fToJSONMBlock_go xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P ; Data.ByteString.Builder.Internal.N:Builder[0])
                                 @ r
                           } in
                           \ (x2 :: Data.ByteString.Builder.Internal.BuildStep r) ->
                           let {
                             w :: Data.ByteString.Builder.Internal.BuildStep r
                             = f (f1
                                    (Data.Aeson.Encoding.Internal.closeBracket1 @ r x2)
                                      `cast`
                                    (<Data.ByteString.Builder.Internal.BufferRange>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <Data.ByteString.Builder.Internal.BuildSignal
                                                      r>_R)))
                           } in
                           (\ (w2 :: Data.ByteString.Builder.Internal.BufferRange)
                              (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case w2 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                            Data.Aeson.Encoding.Internal.$wopenBracket @ r w ww1 ww2 w3 })
                             `cast`
                           (<Data.ByteString.Builder.Internal.BufferRange>_R
                            ->_R Sym (GHC.Types.N:IO[0]
                                          <Data.ByteString.Builder.Internal.BuildSignal r>_R)))
                            `cast`
                          (Sym (Data.ByteString.Builder.Internal.N:Builder[0])) } }
                 } in
                 \ @ r (w2 :: Data.ByteString.Builder.Internal.BuildStep r) ->
                 let {
                   w :: Data.ByteString.Builder.Internal.BuildStep r
                   = w1 `cast` (Data.ByteString.Builder.Internal.N:Builder[0])
                       @ r
                       (Data.Aeson.Encoding.Internal.closeCurly1 @ r w2)
                         `cast`
                       (<Data.ByteString.Builder.Internal.BufferRange>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                 } in
                 let {
                   w4 :: Data.ByteString.Builder.Internal.BufferRange
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                               Data.ByteString.Builder.Internal.BuildSignal r #)
                     {- Arity: 2, Strictness: <S(SS),1*U(U,U)><S,U>,
                        Unfolding: InlineRule (2, True, False)
                                   (\ (w4 :: Data.ByteString.Builder.Internal.BufferRange)
                                      (w5 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                    case w4 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                                    Data.Aeson.Encoding.Internal.$wcolon @ r w ww1 ww2 w5 }) -}
                   = \ (w5 :: Data.ByteString.Builder.Internal.BufferRange)
                       (w6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     case w5 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                     Data.Aeson.Encoding.Internal.$wcolon @ r w ww1 ww2 w6 }
                 } in
                 let {
                   lvl286 :: Data.ByteString.Builder.Internal.BufferRange
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                   Data.ByteString.Builder.Internal.BuildSignal r #)
                     {- Arity: 2, Strictness: <S(SS),1*U(U,U)><S,U> -}
                   = \ (ds5 :: Data.ByteString.Builder.Internal.BufferRange)
                       (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     case ds5 of wild { Data.ByteString.Builder.Internal.BufferRange dt dt1 ->
                     case GHC.Prim.writeWord8OffAddr#
                            @ GHC.Prim.RealWorld
                            dt
                            0#
                            123##
                            eta of s2 { DEFAULT ->
                     Data.Aeson.Encoding.Builder.$wstring
                       WaiLib.$fFromJSONMBlock4
                       @ r
                       w4
                         `cast`
                       (<Data.ByteString.Builder.Internal.BufferRange>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                       (GHC.Prim.plusAddr# dt 1#)
                       dt1
                       s2 } }
                 } in
                 (\ (w3 :: Data.ByteString.Builder.Internal.BufferRange)
                    (w5 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case w3 of ww1 { Data.ByteString.Builder.Internal.BufferRange ww2 ww3 ->
                  case GHC.Prim.<# (GHC.Prim.minusAddr# ww3 ww2) 1# of lwild {
                    DEFAULT
                    -> case GHC.Prim.writeWord8OffAddr#
                              @ GHC.Prim.RealWorld
                              ww2
                              0#
                              123##
                              w5 of s2 { DEFAULT ->
                       Data.Aeson.Encoding.Builder.$wstring
                         WaiLib.$fFromJSONMBlock4
                         @ r
                         w4
                           `cast`
                         (<Data.ByteString.Builder.Internal.BufferRange>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                         (GHC.Prim.plusAddr# ww2 1#)
                         ww3
                         s2 }
                    1#
                    -> (# w5,
                          Data.ByteString.Builder.Internal.BufferFull
                            @ r
                            1#
                            ww2
                            lvl286
                              `cast`
                            (<Data.ByteString.Builder.Internal.BufferRange>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           <Data.ByteString.Builder.Internal.BuildSignal
                                              r>_R)) #) } })
                   `cast`
                 (<Data.ByteString.Builder.Internal.BufferRange>_R
                  ->_R Sym (GHC.Types.N:IO[0]
                                <Data.ByteString.Builder.Internal.BuildSignal r>_R))) -}
3b8fcc601d340922d16c5e64c4c0671f
  $fToJSONMBlock2 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        WaiLib.$fToJSONMBlock3 of ds5 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
614c3604d60c7bcde171a74038402f46
  $fToJSONMBlock3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds5 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   WaiLib.$fFromJSONMBlock4
                   0#
                   ipv1 }) -}
d389d91074ea84663a226202bbcac89a
  $fToJSONMBlock_$ctoEncodingList ::
    [WaiLib.MBlock] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ WaiLib.MBlock
                   WaiLib.$fToJSONMBlock1
                     `cast`
                   (<WaiLib.MBlock>_R
                    ->_R Nth:3
                             (((Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.C>_P
                                         <'GHC.Generics.MetaCons
                                            "MBlock" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                         <GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Maybe.Just "mblock")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0
                                               [GHC.Integer.Type.Integer])>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                          <*>_N
                                                                                          <GHC.Generics.D>_P
                                                                                          <'GHC.Generics.MetaData
                                                                                             "MBlock"
                                                                                             "WaiLib"
                                                                                             "main"
                                                                                             'GHC.Types.False>_P
                                                                                          <GHC.Generics.M1
                                                                                             GHC.Generics.C
                                                                                             ('GHC.Generics.MetaCons
                                                                                                "MBlock"
                                                                                                'GHC.Generics.PrefixI
                                                                                                'GHC.Types.True)
                                                                                             (GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Maybe.Just
                                                                                                      "mblock")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.Rec0
                                                                                                   [GHC.Integer.Type.Integer]))>_R)) <GHC.Types.Any>_N
                               ->_R Sym (Data.ByteString.Builder.Internal.N:Builder[0]) ; Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                                                   <Data.Aeson.Types.Internal.Value>_P)) ; Nth:3
                                                                                                                                               (Nth:3
                                                                                                                                                    (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                     ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                                                                                                                                             Data.Aeson.Encoding.Internal.Encoding
                                                                                                                                                             Data.Aeson.Types.Generic.Zero
                                                                                                                                                             GHC.Types.Any>_R
                                                                                                                                                     ->_R Sub (Sym (WaiLib.Rep_MBlock[0])) <GHC.Types.Any>_N
                                                                                                                                                     ->_R <Data.Aeson.Encoding.Internal.Encoding>_R))))) -}
d389d91074ea84663a226202bbcac89a
  $fToJSONMBlock_$ctoJSON ::
    WaiLib.MBlock -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <L,1*U(1*U)>m1, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: WaiLib.MBlock) ->
                 case WaiLib.$w$ctoJSON3 w of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Object ww1 }) -}
d389d91074ea84663a226202bbcac89a
  $fToJSONMBlock_$ctoJSONList ::
    [WaiLib.MBlock] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [WaiLib.MBlock]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ WaiLib.MBlock
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ WaiLib.MBlock
                                     c
                                     WaiLib.$fToJSONMBlock_$ctoJSON)
                                  n1
                                  x)))))) -}
e0bbbf827c930c5a3e6c119fdfad6b3b
  $fToJSONMBlock_go ::
    [GHC.Integer.Type.Integer]
    -> Data.Aeson.Encoding.Internal.Encoding'
         Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U> -}
f1a65188febf657dbbd7006cade26c93
  $fToJSONMatInt :: Data.Aeson.Types.ToJSON.ToJSON WaiLib.MatInt
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.MatInt
                  WaiLib.$fToJSONMatInt_$ctoJSON
                  WaiLib.$fToJSONMatInt1
                    `cast`
                  (<WaiLib.MatInt>_R
                   ->_R Nth:3
                            (((Sym (GHC.Generics.N:M1[0]
                                        <*>_N
                                        <GHC.Generics.C>_P
                                        <'GHC.Generics.MetaCons
                                           "MatInt" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                        <GHC.Generics.S1
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Maybe.Just "name")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                         GHC.Generics.:*: GHC.Generics.S1
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Maybe.Just "matrix")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.Rec0
                                                               [[GHC.Integer.Type.Integer]])>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                            <*>_N
                                                                                                            <GHC.Generics.D>_P
                                                                                                            <'GHC.Generics.MetaData
                                                                                                               "MatInt"
                                                                                                               "WaiLib"
                                                                                                               "main"
                                                                                                               'GHC.Types.False>_P
                                                                                                            <GHC.Generics.M1
                                                                                                               GHC.Generics.C
                                                                                                               ('GHC.Generics.MetaCons
                                                                                                                  "MatInt"
                                                                                                                  'GHC.Generics.PrefixI
                                                                                                                  'GHC.Types.True)
                                                                                                               (GHC.Generics.S1
                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                     ('GHC.Maybe.Just
                                                                                                                        "name")
                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                  (GHC.Generics.Rec0
                                                                                                                     Data.Text.Internal.Text)
                                                                                                                GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                                      ('GHC.Maybe.Just
                                                                                                                                         "matrix")
                                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                   (GHC.Generics.Rec0
                                                                                                                                      [[GHC.Integer.Type.Integer]]))>_R)) <GHC.Types.Any>_N
                              ->_R Sym (Data.ByteString.Builder.Internal.N:Builder[0]) ; Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                                                  <Data.Aeson.Types.Internal.Value>_P)) ; Nth:3
                                                                                                                                              (Nth:3
                                                                                                                                                   (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                    ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                                                                                                                                            Data.Aeson.Encoding.Internal.Encoding
                                                                                                                                                            Data.Aeson.Types.Generic.Zero
                                                                                                                                                            GHC.Types.Any>_R
                                                                                                                                                    ->_R Sub (Sym (WaiLib.Rep_MatInt[0])) <GHC.Types.Any>_N
                                                                                                                                                    ->_R <Data.Aeson.Encoding.Internal.Encoding>_R))))
                  WaiLib.$fToJSONMatInt_$ctoJSONList
                  WaiLib.$fToJSONMatInt_$ctoEncodingList -}
f1a65188febf657dbbd7006cade26c93
  $fToJSONMatInt1 ::
    WaiLib.MatInt
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BuildStep r
  {- Arity: 1, Strictness: <L,1*U(U(U,U,U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: WaiLib.MatInt) ->
                 WaiLib.$fToJSONMatInt2
                   (case x of wild { WaiLib.MatInt g1 g2 ->
                    GHC.Generics.:*:
                      @ *
                      @ (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              ('GHC.Maybe.Just "name")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                      @ (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              ('GHC.Maybe.Just "matrix")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1 GHC.Generics.R [[GHC.Integer.Type.Integer]]))
                      @ GHC.Types.Any
                      g1
                        `cast`
                      (Sym (GHC.Generics.N:K1[0]
                                <*>_N
                                <GHC.Generics.R>_P
                                <Data.Text.Internal.Text>_R
                                <GHC.Types.Any>_P) ; Sym (GHC.Generics.N:M1[0]
                                                              <*>_N
                                                              <GHC.Generics.S>_P
                                                              <'GHC.Generics.MetaSel
                                                                 ('GHC.Maybe.Just "name")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy>_P
                                                              <GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.Text.Internal.Text>_R) <GHC.Types.Any>_N)
                      g2
                        `cast`
                      (Sym (GHC.Generics.N:K1[0]
                                <*>_N
                                <GHC.Generics.R>_P
                                <[[GHC.Integer.Type.Integer]]>_R
                                <GHC.Types.Any>_P) ; Sym (GHC.Generics.N:M1[0]
                                                              <*>_N
                                                              <GHC.Generics.S>_P
                                                              <'GHC.Generics.MetaSel
                                                                 ('GHC.Maybe.Just "matrix")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy>_P
                                                              <GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 [[GHC.Integer.Type.Integer]]>_R) <GHC.Types.Any>_N) })) -}
3e3298e4cf111ce3d78f91aa8aef2477
  $fToJSONMatInt2 ::
    (GHC.Generics.:*:)
      (GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Maybe.Just "name")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 Data.Text.Internal.Text))
      (GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Maybe.Just "matrix")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 [[GHC.Integer.Type.Integer]]))
      GHC.Types.Any
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BuildStep r
  {- Arity: 1, Strictness: <L,1*U(U(U,U,U),1*U)> -}
318d6394849cc88f0abb2406359dfb92
  $fToJSONMatInt3 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        WaiLib.$fToJSONMatInt4 of ds5 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
e89af62aa5965b20de6e8e983f95bb05
  $fToJSONMatInt4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds5 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   WaiLib.$fFromJSONMatInt4
                   0#
                   ipv1 }) -}
a0dd5c5358f2220c33170b3fcf8df29c
  $fToJSONMatInt5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        WaiLib.$fToJSONMatInt6 of ds5 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
a95995663a7e6963876299ce9f2873d0
  $fToJSONMatInt6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds5 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   WaiLib.$fFromJSONMatInt6
                   0#
                   ipv1 }) -}
f1a65188febf657dbbd7006cade26c93
  $fToJSONMatInt_$ctoEncodingList ::
    [WaiLib.MatInt] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ WaiLib.MatInt
                   WaiLib.$fToJSONMatInt1
                     `cast`
                   (<WaiLib.MatInt>_R
                    ->_R Nth:3
                             (((Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.C>_P
                                         <'GHC.Generics.MetaCons
                                            "MatInt" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                         <GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Maybe.Just "name")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Maybe.Just "matrix")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0
                                                                [[GHC.Integer.Type.Integer]])>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                             <*>_N
                                                                                                             <GHC.Generics.D>_P
                                                                                                             <'GHC.Generics.MetaData
                                                                                                                "MatInt"
                                                                                                                "WaiLib"
                                                                                                                "main"
                                                                                                                'GHC.Types.False>_P
                                                                                                             <GHC.Generics.M1
                                                                                                                GHC.Generics.C
                                                                                                                ('GHC.Generics.MetaCons
                                                                                                                   "MatInt"
                                                                                                                   'GHC.Generics.PrefixI
                                                                                                                   'GHC.Types.True)
                                                                                                                (GHC.Generics.S1
                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                      ('GHC.Maybe.Just
                                                                                                                         "name")
                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                   (GHC.Generics.Rec0
                                                                                                                      Data.Text.Internal.Text)
                                                                                                                 GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                       ('GHC.Maybe.Just
                                                                                                                                          "matrix")
                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                    (GHC.Generics.Rec0
                                                                                                                                       [[GHC.Integer.Type.Integer]]))>_R)) <GHC.Types.Any>_N
                               ->_R Sym (Data.ByteString.Builder.Internal.N:Builder[0]) ; Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                                                   <Data.Aeson.Types.Internal.Value>_P)) ; Nth:3
                                                                                                                                               (Nth:3
                                                                                                                                                    (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                     ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                                                                                                                                             Data.Aeson.Encoding.Internal.Encoding
                                                                                                                                                             Data.Aeson.Types.Generic.Zero
                                                                                                                                                             GHC.Types.Any>_R
                                                                                                                                                     ->_R Sub (Sym (WaiLib.Rep_MatInt[0])) <GHC.Types.Any>_N
                                                                                                                                                     ->_R <Data.Aeson.Encoding.Internal.Encoding>_R))))) -}
f1a65188febf657dbbd7006cade26c93
  $fToJSONMatInt_$ctoJSON ::
    WaiLib.MatInt -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,1*U)>m1, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: WaiLib.MatInt) ->
                 case w of ww { WaiLib.MatInt ww1 ww2 ->
                 case WaiLib.$w$ctoJSON4 ww1 ww2 of ww3 { Unit# ww4 ->
                 Data.Aeson.Types.Internal.Object ww4 } }) -}
f1a65188febf657dbbd7006cade26c93
  $fToJSONMatInt_$ctoJSONList ::
    [WaiLib.MatInt] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [WaiLib.MatInt]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ WaiLib.MatInt
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ WaiLib.MatInt
                                     c
                                     WaiLib.$fToJSONMatInt_$ctoJSON)
                                  n1
                                  x)))))) -}
7b43be4a14f888fb43c27f767eb58be1
  $fToJSONReplyCode ::
    Data.Aeson.Types.ToJSON.ToJSON WaiLib.ReplyCode
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ WaiLib.ReplyCode
                  WaiLib.$fToJSONReplyCode_$ctoJSON
                  WaiLib.$fToJSONReplyCode1
                    `cast`
                  (<WaiLib.ReplyCode>_R
                   ->_R (forall (r :: <*>_N).
                         <Data.ByteString.Builder.Internal.BuildStep r>_R
                         ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Builder.Internal.BuildSignal r>_R)) ; Nth:3
                                                                                                  (((Sym (GHC.Generics.N:M1[0]
                                                                                                              <*>_N
                                                                                                              <GHC.Generics.C>_P
                                                                                                              <'GHC.Generics.MetaCons
                                                                                                                 "ReplyCode"
                                                                                                                 'GHC.Generics.PrefixI
                                                                                                                 'GHC.Types.True>_P
                                                                                                              <GHC.Generics.S1
                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                    ('GHC.Maybe.Just
                                                                                                                       "rcmd")
                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                 (GHC.Generics.Rec0
                                                                                                                    Data.Text.Internal.Text)
                                                                                                               GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                                      ('GHC.Maybe.Just
                                                                                                                                         "rerror")
                                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                   (GHC.Generics.Rec0
                                                                                                                                      Data.Text.Internal.Text)
                                                                                                                                 GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                                       ('GHC.Maybe.Just
                                                                                                                                                          "stdout")
                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                    (GHC.Generics.Rec0
                                                                                                                                                       Data.Text.Internal.Text))>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                                                                                                <*>_N
                                                                                                                                                                                                <GHC.Generics.D>_P
                                                                                                                                                                                                <'GHC.Generics.MetaData
                                                                                                                                                                                                   "ReplyCode"
                                                                                                                                                                                                   "WaiLib"
                                                                                                                                                                                                   "main"
                                                                                                                                                                                                   'GHC.Types.False>_P
                                                                                                                                                                                                <GHC.Generics.M1
                                                                                                                                                                                                   GHC.Generics.C
                                                                                                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                                                                                                      "ReplyCode"
                                                                                                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                                                                                                      'GHC.Types.True)
                                                                                                                                                                                                   (GHC.Generics.S1
                                                                                                                                                                                                      ('GHC.Generics.MetaSel
                                                                                                                                                                                                         ('GHC.Maybe.Just
                                                                                                                                                                                                            "rcmd")
                                                                                                                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                      (GHC.Generics.Rec0
                                                                                                                                                                                                         Data.Text.Internal.Text)
                                                                                                                                                                                                    GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                                                                                                        ('GHC.Generics.MetaSel
                                                                                                                                                                                                                           ('GHC.Maybe.Just
                                                                                                                                                                                                                              "rerror")
                                                                                                                                                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                        (GHC.Generics.Rec0
                                                                                                                                                                                                                           Data.Text.Internal.Text)
                                                                                                                                                                                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                                                                                                         ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                            ('GHC.Maybe.Just
                                                                                                                                                                                                                                               "stdout")
                                                                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                         (GHC.Generics.Rec0
                                                                                                                                                                                                                                            Data.Text.Internal.Text)))>_R)) <GHC.Types.Any>_N
                                                                                                    ->_R Sym (Data.ByteString.Builder.Internal.N:Builder[0]) ; Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                                                                                                                        <Data.Aeson.Types.Internal.Value>_P)) ; Nth:3
                                                                                                                                                                                                                    (Nth:3
                                                                                                                                                                                                                         (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                          ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                                                                                                                                                                                                                  Data.Aeson.Encoding.Internal.Encoding
                                                                                                                                                                                                                                  Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                  GHC.Types.Any>_R
                                                                                                                                                                                                                          ->_R Sub (Sym (WaiLib.Rep_ReplyCode[0])) <GHC.Types.Any>_N
                                                                                                                                                                                                                          ->_R <Data.Aeson.Encoding.Internal.Encoding>_R))))
                  WaiLib.$fToJSONReplyCode_$ctoJSONList
                  WaiLib.$fToJSONReplyCode_$ctoEncodingList -}
7b43be4a14f888fb43c27f767eb58be1
  $fToJSONReplyCode1 ::
    WaiLib.ReplyCode
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BufferRange
       -> GHC.Prim.State# GHC.Prim.RealWorld
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 4,
     Strictness: <S,1*U(U(U,U,U),U(U,U,U),U(U,U,U))><L,C(C1(U(U,U)))><S(SS),1*U(U,U)><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (x :: WaiLib.ReplyCode)
                   @ r
                   (eta :: Data.ByteString.Builder.Internal.BuildStep r)
                   (eta1 :: Data.ByteString.Builder.Internal.BufferRange)
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case x of wild { WaiLib.ReplyCode g1 g2 g3 ->
                 WaiLib.$fToJSONReplyCode2
                   (GHC.Generics.:*:
                      @ *
                      @ (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              ('GHC.Maybe.Just "rcmd")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                      @ (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              ('GHC.Maybe.Just "rerror")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                         GHC.Generics.:*: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Maybe.Just "stdout")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R Data.Text.Internal.Text))
                      @ GHC.Types.Any
                      g1
                        `cast`
                      (Sym (GHC.Generics.N:K1[0]
                                <*>_N
                                <GHC.Generics.R>_P
                                <Data.Text.Internal.Text>_R
                                <GHC.Types.Any>_P) ; Sym (GHC.Generics.N:M1[0]
                                                              <*>_N
                                                              <GHC.Generics.S>_P
                                                              <'GHC.Generics.MetaSel
                                                                 ('GHC.Maybe.Just "rcmd")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy>_P
                                                              <GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 Data.Text.Internal.Text>_R) <GHC.Types.Any>_N)
                      (GHC.Generics.:*:
                         @ *
                         @ (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "rerror")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                         @ (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "stdout")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                         @ GHC.Types.Any
                         g2
                           `cast`
                         (Sym (GHC.Generics.N:K1[0]
                                   <*>_N
                                   <GHC.Generics.R>_P
                                   <Data.Text.Internal.Text>_R
                                   <GHC.Types.Any>_P) ; Sym (GHC.Generics.N:M1[0]
                                                                 <*>_N
                                                                 <GHC.Generics.S>_P
                                                                 <'GHC.Generics.MetaSel
                                                                    ('GHC.Maybe.Just "rerror")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy>_P
                                                                 <GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.Text.Internal.Text>_R) <GHC.Types.Any>_N)
                         g3
                           `cast`
                         (Sym (GHC.Generics.N:K1[0]
                                   <*>_N
                                   <GHC.Generics.R>_P
                                   <Data.Text.Internal.Text>_R
                                   <GHC.Types.Any>_P) ; Sym (GHC.Generics.N:M1[0]
                                                                 <*>_N
                                                                 <GHC.Generics.S>_P
                                                                 <'GHC.Generics.MetaSel
                                                                    ('GHC.Maybe.Just "stdout")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy>_P
                                                                 <GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Data.Text.Internal.Text>_R) <GHC.Types.Any>_N)))
                   @ r
                   eta
                   eta1
                   eta2 }) -}
b5f23fc6f72a247bb4f00393308d0e86
  $fToJSONReplyCode2 ::
    (GHC.Generics.:*:)
      (GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Maybe.Just "rcmd")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 Data.Text.Internal.Text))
      (GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Maybe.Just "rerror")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 Data.Text.Internal.Text)
       GHC.Generics.:*: GHC.Generics.S1
                          ('GHC.Generics.MetaSel
                             ('GHC.Maybe.Just "stdout")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.Rec0 Data.Text.Internal.Text))
      GHC.Types.Any
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BufferRange
       -> GHC.Prim.State# GHC.Prim.RealWorld
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 4,
     Strictness: <S(LS),1*U(U(U,U,U),1*U(U(U,U,U),U(U,U,U)))><L,C(C1(U(U,U)))><S(SS),1*U(U,U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: (GHC.Generics.:*:)
                           (GHC.Generics.S1
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "rcmd")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.Rec0 Data.Text.Internal.Text))
                           (GHC.Generics.S1
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "rerror")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.Rec0 Data.Text.Internal.Text)
                            GHC.Generics.:*: GHC.Generics.S1
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Maybe.Just "stdout")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0 Data.Text.Internal.Text))
                           GHC.Types.Any)
                   @ r
                   (w1 :: Data.ByteString.Builder.Internal.BuildStep r)
                   (w2 :: Data.ByteString.Builder.Internal.BufferRange)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { GHC.Generics.:*: ww1 ww2 ->
                 case ww2 of ww3 { GHC.Generics.:*: ww4 ww5 ->
                 case w2 of ww6 { Data.ByteString.Builder.Internal.BufferRange ww7 ww8 ->
                 WaiLib.$wg ww1 ww4 ww5 @ r w1 ww7 ww8 w3 } } }) -}
4fca7d9a8d79f64c657b457f9e9619b3
  $fToJSONReplyCode3 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        WaiLib.$fToJSONReplyCode4 of ds5 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
f65d45c5759cbc627f471bab9dc2ef1c
  $fToJSONReplyCode4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds5 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   WaiLib.$fFromJSONReplyCode2
                   0#
                   ipv1 }) -}
93ca2a5db29e1836e82579c46469ae00
  $fToJSONReplyCode5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        WaiLib.$fToJSONReplyCode6 of ds5 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
dc9bf9559a0634752fc6599451f4c6e2
  $fToJSONReplyCode6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds5 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   WaiLib.$fFromJSONReplyCode4
                   0#
                   ipv1 }) -}
53e07f9c137ce7621eae21b6f17423d0
  $fToJSONReplyCode7 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        WaiLib.$fToJSONReplyCode8 of ds5 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
200e73f3d93cc383d57c939a56c1ada5
  $fToJSONReplyCode8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds5 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   WaiLib.$fFromJSONReplyCode6
                   0#
                   ipv1 }) -}
7b43be4a14f888fb43c27f767eb58be1
  $fToJSONReplyCode_$ctoEncodingList ::
    [WaiLib.ReplyCode] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ WaiLib.ReplyCode
                   WaiLib.$fToJSONReplyCode1
                     `cast`
                   (<WaiLib.ReplyCode>_R
                    ->_R (forall (r :: <*>_N).
                          <Data.ByteString.Builder.Internal.BuildStep r>_R
                          ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <Data.ByteString.Builder.Internal.BuildSignal r>_R)) ; Nth:3
                                                                                                   (((Sym (GHC.Generics.N:M1[0]
                                                                                                               <*>_N
                                                                                                               <GHC.Generics.C>_P
                                                                                                               <'GHC.Generics.MetaCons
                                                                                                                  "ReplyCode"
                                                                                                                  'GHC.Generics.PrefixI
                                                                                                                  'GHC.Types.True>_P
                                                                                                               <GHC.Generics.S1
                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                     ('GHC.Maybe.Just
                                                                                                                        "rcmd")
                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                  (GHC.Generics.Rec0
                                                                                                                     Data.Text.Internal.Text)
                                                                                                                GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                       ('GHC.Maybe.Just
                                                                                                                                          "rerror")
                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                    (GHC.Generics.Rec0
                                                                                                                                       Data.Text.Internal.Text)
                                                                                                                                  GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                                        ('GHC.Maybe.Just
                                                                                                                                                           "stdout")
                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                     (GHC.Generics.Rec0
                                                                                                                                                        Data.Text.Internal.Text))>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                                                                                                                 <*>_N
                                                                                                                                                                                                 <GHC.Generics.D>_P
                                                                                                                                                                                                 <'GHC.Generics.MetaData
                                                                                                                                                                                                    "ReplyCode"
                                                                                                                                                                                                    "WaiLib"
                                                                                                                                                                                                    "main"
                                                                                                                                                                                                    'GHC.Types.False>_P
                                                                                                                                                                                                 <GHC.Generics.M1
                                                                                                                                                                                                    GHC.Generics.C
                                                                                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                                                                                       "ReplyCode"
                                                                                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                                                                                       'GHC.Types.True)
                                                                                                                                                                                                    (GHC.Generics.S1
                                                                                                                                                                                                       ('GHC.Generics.MetaSel
                                                                                                                                                                                                          ('GHC.Maybe.Just
                                                                                                                                                                                                             "rcmd")
                                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                       (GHC.Generics.Rec0
                                                                                                                                                                                                          Data.Text.Internal.Text)
                                                                                                                                                                                                     GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                                                                                                         ('GHC.Generics.MetaSel
                                                                                                                                                                                                                            ('GHC.Maybe.Just
                                                                                                                                                                                                                               "rerror")
                                                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                         (GHC.Generics.Rec0
                                                                                                                                                                                                                            Data.Text.Internal.Text)
                                                                                                                                                                                                                       GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                                                                                                          ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                             ('GHC.Maybe.Just
                                                                                                                                                                                                                                                "stdout")
                                                                                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                          (GHC.Generics.Rec0
                                                                                                                                                                                                                                             Data.Text.Internal.Text)))>_R)) <GHC.Types.Any>_N
                                                                                                     ->_R Sym (Data.ByteString.Builder.Internal.N:Builder[0]) ; Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                                                                                                                                         <Data.Aeson.Types.Internal.Value>_P)) ; Nth:3
                                                                                                                                                                                                                     (Nth:3
                                                                                                                                                                                                                          (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                           ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                                                                                                                                                                                                                   Data.Aeson.Encoding.Internal.Encoding
                                                                                                                                                                                                                                   Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                   GHC.Types.Any>_R
                                                                                                                                                                                                                           ->_R Sub (Sym (WaiLib.Rep_ReplyCode[0])) <GHC.Types.Any>_N
                                                                                                                                                                                                                           ->_R <Data.Aeson.Encoding.Internal.Encoding>_R))))) -}
7b43be4a14f888fb43c27f767eb58be1
  $fToJSONReplyCode_$ctoJSON ::
    WaiLib.ReplyCode -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U,U)>m1, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: WaiLib.ReplyCode) ->
                 case w of ww { WaiLib.ReplyCode ww1 ww2 ww3 ->
                 case WaiLib.$w$ctoJSON5 ww1 ww2 ww3 of ww4 { Unit# ww5 ->
                 Data.Aeson.Types.Internal.Object ww5 } }) -}
7b43be4a14f888fb43c27f767eb58be1
  $fToJSONReplyCode_$ctoJSONList ::
    [WaiLib.ReplyCode] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [WaiLib.ReplyCode]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ WaiLib.ReplyCode
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ WaiLib.ReplyCode
                                     c
                                     WaiLib.$fToJSONReplyCode_$ctoJSON)
                                  n1
                                  x)))))) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fToRowPerson :: Database.SQLite.Simple.ToRow.ToRow WaiLib.Person
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(A,U,U)>m2,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                WaiLib.$fToRowPerson_$ctoRow
                  `cast`
                (Sym (Database.SQLite.Simple.ToRow.N:ToRow[0]
                          <WaiLib.Person>_N)) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $fToRowPerson_$ctoRow ::
    WaiLib.Person -> [Database.SQLite3.SQLData]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(A,U,U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.Person) ->
                 case ds5 of wild { WaiLib.Person _pId pName pAge ->
                 GHC.Types.:
                   @ Database.SQLite3.SQLData
                   (Database.SQLite3.$WSQLText pAge)
                   (GHC.Types.:
                      @ Database.SQLite3.SQLData
                      (Database.SQLite3.$WSQLText pName)
                      (GHC.Types.[] @ Database.SQLite3.SQLData)) }) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fToRowUserInput ::
    Database.SQLite.Simple.ToRow.ToRow WaiLib.UserInput
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(A,U)>m2,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                WaiLib.$fToRowUserInput_$ctoRow
                  `cast`
                (Sym (Database.SQLite.Simple.ToRow.N:ToRow[0]
                          <WaiLib.UserInput>_N)) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $fToRowUserInput_$ctoRow ::
    WaiLib.UserInput -> [Database.SQLite3.SQLData]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(A,U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.UserInput) ->
                 case ds5 of wild { WaiLib.UserInput _cmdId md ->
                 GHC.Types.:
                   @ Database.SQLite3.SQLData
                   (Database.SQLite3.$WSQLText md)
                   (GHC.Types.[] @ Database.SQLite3.SQLData) }) -}
973799a7bd235ab0b991f4752ee3358b
  $s$fConstructorMetaMetaCons11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GeneMatrix"#) -}
0c1e27ab2588ed225ce8cd3aec59bf7f
  $s$fConstructorMetaMetaCons14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MBlock"#) -}
b8991f1f85808370d059bea410e3006f
  $s$fConstructorMetaMetaCons17 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Block"#) -}
c2ad58ccf83fd334daa9f88bca85490c
  $s$fConstructorMetaMetaCons2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MatInt"#) -}
a180dad4d954a19a067e87ce4dfaa795
  $s$fConstructorMetaMetaCons5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CompileCode"#) -}
3f36d078af4d4808b1546156057e6407
  $s$fConstructorMetaMetaCons8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ReplyCode"#) -}
036a62be5a12650aff8e5a89881204da
  $sel:bblock:Block :: WaiLib.Block -> [Data.Text.Internal.Lazy.Text]
  RecSel Left WaiLib.Block
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.Block) ->
                 case ds5 of wild { WaiLib.Block ds6 -> ds6 }) -}
e902f1c8c2c9384e725bf1d73e73ae08
  $sel:cmd:GeneMatrix :: WaiLib.GeneMatrix -> Data.Text.Internal.Text
  RecSel Left WaiLib.GeneMatrix
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.GeneMatrix) ->
                 case ds5 of wild { WaiLib.GeneMatrix ds6 ds7 ds8 -> ds6 }) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $sel:cmdId:UserInput :: WaiLib.UserInput -> GHC.Int.Int64
  RecSel Left WaiLib.UserInput
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.UserInput) ->
                 case ds5 of wild { WaiLib.UserInput ds6 ds7 -> ds6 }) -}
4094009eeca0d4f5c386f1c83b59a3e5
  $sel:code:CompileCode ::
    WaiLib.CompileCode -> Data.Text.Internal.Text
  RecSel Left WaiLib.CompileCode
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLS),1*U(A,A,1*U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.CompileCode) ->
                 case ds5 of wild { WaiLib.CompileCode ds6 ds7 ds8 -> ds8 }) -}
4094009eeca0d4f5c386f1c83b59a3e5
  $sel:compiler:CompileCode ::
    WaiLib.CompileCode -> Data.Text.Internal.Text
  RecSel Left WaiLib.CompileCode
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.CompileCode) ->
                 case ds5 of wild { WaiLib.CompileCode ds6 ds7 ds8 -> ds6 }) -}
f1a65188febf657dbbd7006cade26c93
  $sel:matrix:MatInt :: WaiLib.MatInt -> [[GHC.Integer.Type.Integer]]
  RecSel Left WaiLib.MatInt
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.MatInt) ->
                 case ds5 of wild { WaiLib.MatInt ds6 ds7 -> ds7 }) -}
d389d91074ea84663a226202bbcac89a
  $sel:mblock:MBlock :: WaiLib.MBlock -> [GHC.Integer.Type.Integer]
  RecSel Left WaiLib.MBlock
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.MBlock) ->
                 case ds5 of wild { WaiLib.MBlock ds6 -> ds6 }) -}
f1a65188febf657dbbd7006cade26c93
  $sel:name:MatInt :: WaiLib.MatInt -> Data.Text.Internal.Text
  RecSel Left WaiLib.MatInt
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.MatInt) ->
                 case ds5 of wild { WaiLib.MatInt ds6 ds7 -> ds6 }) -}
e902f1c8c2c9384e725bf1d73e73ae08
  $sel:ncol:GeneMatrix ::
    WaiLib.GeneMatrix -> GHC.Integer.Type.Integer
  RecSel Left WaiLib.GeneMatrix
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.GeneMatrix) ->
                 case ds5 of wild { WaiLib.GeneMatrix ds6 ds7 ds8 -> ds7 }) -}
e902f1c8c2c9384e725bf1d73e73ae08
  $sel:nrow:GeneMatrix ::
    WaiLib.GeneMatrix -> GHC.Integer.Type.Integer
  RecSel Left WaiLib.GeneMatrix
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.GeneMatrix) ->
                 case ds5 of wild { WaiLib.GeneMatrix ds6 ds7 ds8 -> ds8 }) -}
4094009eeca0d4f5c386f1c83b59a3e5
  $sel:option:CompileCode ::
    WaiLib.CompileCode -> Data.Text.Internal.Text
  RecSel Left WaiLib.CompileCode
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSL),1*U(A,1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.CompileCode) ->
                 case ds5 of wild { WaiLib.CompileCode ds6 ds7 ds8 -> ds7 }) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $sel:personAge:Person :: WaiLib.Person -> Data.Text.Internal.Text
  RecSel Left WaiLib.Person
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLS),1*U(A,A,1*U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.Person) ->
                 case ds5 of wild { WaiLib.Person ds6 ds7 ds8 -> ds8 }) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $sel:personId:Person :: WaiLib.Person -> GHC.Int.Int64
  RecSel Left WaiLib.Person
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.Person) ->
                 case ds5 of wild { WaiLib.Person ds6 ds7 ds8 -> ds6 }) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $sel:personName:Person :: WaiLib.Person -> Data.Text.Internal.Text
  RecSel Left WaiLib.Person
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSL),1*U(A,1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.Person) ->
                 case ds5 of wild { WaiLib.Person ds6 ds7 ds8 -> ds7 }) -}
7b43be4a14f888fb43c27f767eb58be1
  $sel:rcmd:ReplyCode :: WaiLib.ReplyCode -> Data.Text.Internal.Text
  RecSel Left WaiLib.ReplyCode
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.ReplyCode) ->
                 case ds5 of wild { WaiLib.ReplyCode ds6 ds7 ds8 -> ds6 }) -}
7b43be4a14f888fb43c27f767eb58be1
  $sel:rerror:ReplyCode ::
    WaiLib.ReplyCode -> Data.Text.Internal.Text
  RecSel Left WaiLib.ReplyCode
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSL),1*U(A,1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.ReplyCode) ->
                 case ds5 of wild { WaiLib.ReplyCode ds6 ds7 ds8 -> ds7 }) -}
7b43be4a14f888fb43c27f767eb58be1
  $sel:stdout:ReplyCode ::
    WaiLib.ReplyCode -> Data.Text.Internal.Text
  RecSel Left WaiLib.ReplyCode
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLS),1*U(A,A,1*U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.ReplyCode) ->
                 case ds5 of wild { WaiLib.ReplyCode ds6 ds7 ds8 -> ds8 }) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $sel:xcmd:UserInput :: WaiLib.UserInput -> Data.Text.Internal.Text
  RecSel Left WaiLib.UserInput
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds5 :: WaiLib.UserInput) ->
                 case ds5 of wild { WaiLib.UserInput ds6 ds7 -> ds7 }) -}
60c29b7301db60b96d1c7885079de710
  $sfromList ::
    [[GHC.Base.String]] -> Data.Set.Internal.Set [GHC.Base.String]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds5 :: [[GHC.Base.String]]) ->
                 case ds5 of wild {
                   [] -> Data.Set.Internal.Tip @ [GHC.Base.String]
                   : x ds6
                   -> case ds6 of wild1 {
                        []
                        -> case x of dt { DEFAULT ->
                           Data.Set.Internal.Bin
                             @ [GHC.Base.String]
                             1#
                             dt
                             (Data.Set.Internal.Tip @ [GHC.Base.String])
                             (Data.Set.Internal.Tip @ [GHC.Base.String]) }
                        : ipv ipv1
                        -> case GHC.Classes.$fOrd[]_$s$ccompare2 x ipv of wild2 {
                             DEFAULT
                             -> case x of dt { DEFAULT ->
                                WaiLib.$sfromList_go
                                  wild1
                                  (Data.Set.Internal.Bin
                                     @ [GHC.Base.String]
                                     1#
                                     dt
                                     (Data.Set.Internal.Tip @ [GHC.Base.String])
                                     (Data.Set.Internal.Tip @ [GHC.Base.String])) }
                             GHC.Types.LT
                             -> case x of dt { DEFAULT ->
                                WaiLib.$wgo3
                                  1#
                                  (Data.Set.Internal.Bin
                                     @ [GHC.Base.String]
                                     1#
                                     dt
                                     (Data.Set.Internal.Tip @ [GHC.Base.String])
                                     (Data.Set.Internal.Tip @ [GHC.Base.String]))
                                  wild1 } } } }) -}
f1b383773337d321c3c301b01d418f86
  $sfromList_go ::
    [[GHC.Base.String]]
    -> Data.Set.Internal.Set [GHC.Base.String]
    -> Data.Set.Internal.Set [GHC.Base.String]
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
45f5dd54061b42686cf5a943e87ba6c8
  $sinsert_$sgo3 ::
    [GHC.Base.String]
    -> [GHC.Base.String]
    -> Data.Set.Internal.Set [GHC.Base.String]
    -> Data.Set.Internal.Set [GHC.Base.String]
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U> -}
a7338a0fda028803acc17c10bdd2b4c7
  $tc'Block :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5379569628365971310##
                   14398475376984795174##
                   WaiLib.$trModule
                   WaiLib.$tc'Block2
                   0#
                   WaiLib.$tc'Block1) -}
f3ff3bc9e96570cc2d67a7e4f83f9dcd
  $tc'Block1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
515911db23a9fee3107e831d0c426c65
  $tc'Block2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WaiLib.$tc'Block3) -}
dd521b1cd2050946c4d4310341f92fd3
  $tc'Block3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Block"#) -}
2226bf941d5975563858c925d1cd4bb1
  $tc'CmdT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6875844249365785796##
                   16858952423104168368##
                   WaiLib.$trModule
                   WaiLib.$tc'CmdT2
                   0#
                   WaiLib.$tc'CmdT1) -}
1e2b9f64529e264229960faa2ae0bd1b
  $tc'CmdT1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
8d83716cf83bacebe8edc5cea5d2e9fc
  $tc'CmdT2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WaiLib.$tc'CmdT3) -}
7e4f017f252f5232c7ea5265f644ed5b
  $tc'CmdT3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CmdT"#) -}
b59ff2fb4047e9c45a36a49a4afc2b37
  $tc'CompileCode :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4712989468304051725##
                   10676785538446954258##
                   WaiLib.$trModule
                   WaiLib.$tc'CompileCode2
                   0#
                   WaiLib.$tc'CompileCode1) -}
d4b90a389101b905cbd2b846a56023c3
  $tc'CompileCode1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
93e44637eb621dad6fdeeb8d5bccd844
  $tc'CompileCode2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WaiLib.$tc'CompileCode3) -}
3a863c5875d0619c055bf2fed8cb7e7c
  $tc'CompileCode3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CompileCode"#) -}
9c8087771a13a5311ea46beb2524e3ee
  $tc'GeneMatrix :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10650031321347844217##
                   17343420689270913289##
                   WaiLib.$trModule
                   WaiLib.$tc'GeneMatrix2
                   0#
                   WaiLib.$tc'GeneMatrix1) -}
2136448a81e57cffc97580726006e224
  $tc'GeneMatrix1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
07f1aee5cc8cf80532ef842f948c0f73
  $tc'GeneMatrix2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WaiLib.$tc'GeneMatrix3) -}
22b0f5b76552cbdafd77cabd5fdadb85
  $tc'GeneMatrix3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GeneMatrix"#) -}
1058b17ebafa4c5892359450e0ccca67
  $tc'HaskellT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14166148745607086331##
                   2968851712479347455##
                   WaiLib.$trModule
                   WaiLib.$tc'HaskellT1
                   0#
                   WaiLib.$tc'CmdT1) -}
10ce1e22d12f63b81e1ea8d20253187e
  $tc'HaskellT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WaiLib.$tc'HaskellT2) -}
efe1cbdd24a5fa1fdd67a7f45ba7ecfe
  $tc'HaskellT2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'HaskellT"#) -}
db321d48cc181040effdc3e707de64f2
  $tc'JavaT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15285197124201509923##
                   1616752852412680728##
                   WaiLib.$trModule
                   WaiLib.$tc'JavaT1
                   0#
                   WaiLib.$tc'CmdT1) -}
4d307280cdb8b7d5f17f1fa44326ed50
  $tc'JavaT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WaiLib.$tc'JavaT2) -}
10f9ae943cbbf4e4d6cdb186151ba047
  $tc'JavaT2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'JavaT"#) -}
8a97a337bfe69f935bed92b52838dd83
  $tc'MBlock :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13029411503056518197##
                   7250641385281842131##
                   WaiLib.$trModule
                   WaiLib.$tc'MBlock2
                   0#
                   WaiLib.$tc'MBlock1) -}
eeb2e3a438eb4b89a59d0340f89a7369
  $tc'MBlock1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c39834bea71cabc2c69e19202053c085
  $tc'MBlock2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WaiLib.$tc'MBlock3) -}
a735e384ad098f548a853f83ae2c20f7
  $tc'MBlock3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MBlock"#) -}
8e5482fb54cf8fa7e18588379afd3366
  $tc'MatInt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14409118444616417018##
                   13789725724662554473##
                   WaiLib.$trModule
                   WaiLib.$tc'MatInt2
                   0#
                   WaiLib.$tc'MatInt1) -}
28928ddf857ce8dd3c86da67ec9ef707
  $tc'MatInt1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
66696e67ca916c99f6c41b81caffc235
  $tc'MatInt2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WaiLib.$tc'MatInt3) -}
806d1be3e076073ed92d5d7a4fd008c0
  $tc'MatInt3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MatInt"#) -}
4f93c2f990e187fdf9810f708520c171
  $tc'Person :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4130917029718562576##
                   686306280508622878##
                   WaiLib.$trModule
                   WaiLib.$tc'Person2
                   0#
                   WaiLib.$tc'Person1) -}
3f02bd6366fc6da0e65c3a00371e2a80
  $tc'Person1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
8da85585fe39bed96c71bfaf9de8e87a
  $tc'Person2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WaiLib.$tc'Person3) -}
582a4516672a946c01e1c691c955f877
  $tc'Person3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Person"#) -}
565089271c6c7c4ea7add2f75233c03c
  $tc'ReplyCode :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   801083909635781139##
                   14439694873838656635##
                   WaiLib.$trModule
                   WaiLib.$tc'ReplyCode2
                   0#
                   WaiLib.$tc'ReplyCode1) -}
ebe0c5f2031270eb8c46080f7e27ed3a
  $tc'ReplyCode1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
234356f423e707671ab1c309377ff07d
  $tc'ReplyCode2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WaiLib.$tc'ReplyCode3) -}
c05185c34719599f95a19c9f0b4c101a
  $tc'ReplyCode3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ReplyCode"#) -}
46abf7405096079eda40ed158aeb80b5
  $tc'SnippetT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18111642619805324946##
                   4982693003298081132##
                   WaiLib.$trModule
                   WaiLib.$tc'SnippetT1
                   0#
                   WaiLib.$tc'CmdT1) -}
acb473ca17fecb1963f681bf07d722e2
  $tc'SnippetT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WaiLib.$tc'SnippetT2) -}
8c928bcf4a94556b9a76f360528c26c5
  $tc'SnippetT2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SnippetT"#) -}
449de9b8d2d5ecedc370e267082709d5
  $tc'UserInput :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17029314834466687009##
                   502022458996036319##
                   WaiLib.$trModule
                   WaiLib.$tc'UserInput2
                   0#
                   WaiLib.$tc'UserInput1) -}
b4349854ec4f16803585e2a4becde2e1
  $tc'UserInput1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
b77ccec385bd7bbaa3801a90bc1342d7
  $tc'UserInput2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WaiLib.$tc'UserInput3) -}
7ebc53549716326c7185b868400b6520
  $tc'UserInput3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'UserInput"#) -}
4e0d07665176a92055099dcc350980b2
  $tcBlock :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12855434198585265898##
                   516292175527378671##
                   WaiLib.$trModule
                   WaiLib.$tcBlock1
                   0#
                   GHC.Types.krep$*) -}
d67829d270d1ac50a77461dfbfd17833
  $tcBlock1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   WaiLib.$s$fConstructorMetaMetaCons17) -}
7ae5b47f53bfc2bb06195a7c624f949e
  $tcCompileCode :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13996017624353526079##
                   10028773431391209553##
                   WaiLib.$trModule
                   WaiLib.$tcCompileCode1
                   0#
                   GHC.Types.krep$*) -}
c702c1bd8047ebc25f0fac0576905029
  $tcCompileCode1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   WaiLib.$s$fConstructorMetaMetaCons5) -}
6fa998bd51ae4b35c9aa6c822a6e2f56
  $tcGeneMatrix :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5317634256102782105##
                   7233039021272862496##
                   WaiLib.$trModule
                   WaiLib.$tcGeneMatrix1
                   0#
                   GHC.Types.krep$*) -}
b2ae1460485cf99ae9da26a3989ac595
  $tcGeneMatrix1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   WaiLib.$s$fConstructorMetaMetaCons11) -}
e9a77d424ad357fc86da5dd596b6698c
  $tcMBlock :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16775000118674166288##
                   493087053455510619##
                   WaiLib.$trModule
                   WaiLib.$tcMBlock1
                   0#
                   GHC.Types.krep$*) -}
c7489f9bfc9d75a3a0792038e0d01b57
  $tcMBlock1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   WaiLib.$s$fConstructorMetaMetaCons14) -}
22b76b2bea72d0378a96318c670dd32c
  $tcMatInt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17449510748986529901##
                   2837240048653272189##
                   WaiLib.$trModule
                   WaiLib.$tcMatInt1
                   0#
                   GHC.Types.krep$*) -}
e1d0ade979dd3a2ab7eb236f8a55e866
  $tcMatInt1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   WaiLib.$s$fConstructorMetaMetaCons2) -}
00e0575342a51f7672a01d79272c94ad
  $tcPerson :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11064841702516625013##
                   2916832040017229837##
                   WaiLib.$trModule
                   WaiLib.$tcPerson1
                   0#
                   GHC.Types.krep$*) -}
475aa6794e2d26b9bc33907fc77512a4
  $tcPerson1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WaiLib.$tcPerson2) -}
1b06d498aa27ceae71e3c27101162ba0
  $tcPerson2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Person"#) -}
171ffd0dfade8b37bd8471a254830c10
  $tcReplyCode :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2216627568780676696##
                   2547868311018705699##
                   WaiLib.$trModule
                   WaiLib.$tcReplyCode1
                   0#
                   GHC.Types.krep$*) -}
5debd3e359016d4adbbe0e9dbc155220
  $tcReplyCode1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   WaiLib.$s$fConstructorMetaMetaCons8) -}
df783842a1d54bb9c7acf4b38edccd4d
  $tcSearchType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12564387699776945498##
                   1679182694227911292##
                   WaiLib.$trModule
                   WaiLib.$tcSearchType1
                   0#
                   GHC.Types.krep$*) -}
2bd60221aae7ba84bac6e4ed62c77539
  $tcSearchType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WaiLib.$tcSearchType2) -}
416f87449cbfa486c2201bb5a01f472e
  $tcSearchType2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SearchType"#) -}
60a461bcffd91e36d585c68738dab725
  $tcUserInput :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12087112079975577803##
                   16309151763790416465##
                   WaiLib.$trModule
                   WaiLib.$tcUserInput1
                   0#
                   GHC.Types.krep$*) -}
f60de832bf90e2aa7db5499abea75d30
  $tcUserInput1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WaiLib.$tcUserInput2) -}
d54b2995fe4e28b334b32320523fdbc4
  $tcUserInput2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UserInput"#) -}
690859d04b72a5028717d1d96b8aa7cf
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   WaiLib.$trModule3
                   WaiLib.$trModule1) -}
a5fe93b569f4040250b303b53771340d
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WaiLib.$trModule2) -}
75680bb3d1400f3ec962bb6cc75774ef
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("WaiLib"#) -}
7d6c91ce911bdcc2355768ab9893cd2d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS WaiLib.$trModule4) -}
04b2a7772eb326233a296f1322746d3b
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
1f7612318fcb3617ab58aea4fded9bc1
  $w$c== ::
    GHC.Prim.Int#
    -> Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U,U,U)><L,1*U(U,U,U)><S,U><L,1*U(U,U,U)><L,1*U(U,U,U)>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Data.Text.Internal.Text)
                   (ww2 :: Data.Text.Internal.Text)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Data.Text.Internal.Text)
                   (ww5 :: Data.Text.Internal.Text) ->
                 case GHC.Prim.==# ww ww3 of lwild {
                   DEFAULT -> GHC.Types.False
                   1#
                   -> case ww1 of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                      case ww4 of wild1 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                      case GHC.Prim.==# dt2 dt5 of lwild1 {
                        DEFAULT -> GHC.Types.False
                        1#
                        -> case {__pkg_ccall text-1.2.3.1 GHC.Prim.ByteArray#
                                                          -> GHC.Prim.Word#
                                                          -> GHC.Prim.ByteArray#
                                                          -> GHC.Prim.Word#
                                                          -> GHC.Prim.Word#
                                                          -> GHC.Prim.State# GHC.Prim.RealWorld
                                                          -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                GHC.Prim.Int# #)}
                                  dt
                                  (GHC.Prim.int2Word# dt1)
                                  dt3
                                  (GHC.Prim.int2Word# dt4)
                                  (GHC.Prim.int2Word# dt2)
                                  GHC.Prim.realWorld# of wild5 { (#,#) ds5 ds6 ->
                           case GHC.Prim.narrow32Int# ds6 of wild2 {
                             DEFAULT -> GHC.Types.False
                             0# -> Data.Text.$fEqText_$c== ww2 ww5 } } } } } }) -}
1ab3592a9e34f09f71426b6c40ddc94f
  $w$c==1 ::
    GHC.Prim.Int#
    -> Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Text.Internal.Text
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U,U,U)><S,U><L,1*U(U,U,U)>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Data.Text.Internal.Text)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: Data.Text.Internal.Text) ->
                 case GHC.Prim.==# ww ww2 of lwild {
                   DEFAULT -> GHC.Types.False
                   1# -> Data.Text.$fEqText_$c== ww1 ww3 }) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $w$cfromRow ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [Database.SQLite3.SQLData]
    -> Database.SQLite.Simple.Ok.Ok
         (WaiLib.Person, (GHC.Types.Int, [Database.SQLite3.SQLData]))
  {- Arity: 3, Strictness: <S,U><S,U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: [Database.SQLite3.SQLData]) ->
                 case GHC.Prim.>=# ww1 ww of lwild {
                   DEFAULT
                   -> case ww2 of wild {
                        []
                        -> case GHC.List.badHead
                           ret_ty (Database.SQLite.Simple.Ok.Ok
                                     (WaiLib.Person, (GHC.Types.Int, [Database.SQLite3.SQLData])))
                           of {}
                        : x ds5
                        -> case Database.SQLite.Simple.FromField.$w$stakeInt3 x of wild1 {
                             Database.SQLite.Simple.Ok.Errors es
                             -> Database.SQLite.Simple.Ok.Errors
                                  @ (WaiLib.Person, (GHC.Types.Int, [Database.SQLite3.SQLData]))
                                  es
                             Database.SQLite.Simple.Ok.Ok a1
                             -> let {
                                  s' :: GHC.Prim.Int# = GHC.Prim.+# ww1 1#
                                } in
                                case GHC.Prim.>=# s' ww of lwild1 {
                                  DEFAULT
                                  -> case ds5 of wild2 {
                                       []
                                       -> case GHC.List.badHead
                                          ret_ty (Database.SQLite.Simple.Ok.Ok
                                                    (WaiLib.Person,
                                                     (GHC.Types.Int, [Database.SQLite3.SQLData])))
                                          of {}
                                       : x1 ds6
                                       -> case Database.SQLite.Simple.FromField.$w$cfromField9
                                                 x1 of wild3 {
                                            Database.SQLite.Simple.Ok.Errors es
                                            -> Database.SQLite.Simple.Ok.Errors
                                                 @ (WaiLib.Person,
                                                    (GHC.Types.Int, [Database.SQLite3.SQLData]))
                                                 es
                                            Database.SQLite.Simple.Ok.Ok a2
                                            -> let {
                                                 s'' :: GHC.Prim.Int# = GHC.Prim.+# s' 1#
                                               } in
                                               case GHC.Prim.>=# s'' ww of lwild2 {
                                                 DEFAULT
                                                 -> case ds6 of wild4 {
                                                      []
                                                      -> case GHC.List.badHead
                                                         ret_ty (Database.SQLite.Simple.Ok.Ok
                                                                   (WaiLib.Person,
                                                                    (GHC.Types.Int,
                                                                     [Database.SQLite3.SQLData])))
                                                         of {}
                                                      : x2 ds7
                                                      -> case Database.SQLite.Simple.FromField.$w$cfromField9
                                                                x2 of wild5 {
                                                           Database.SQLite.Simple.Ok.Errors es
                                                           -> Database.SQLite.Simple.Ok.Errors
                                                                @ (WaiLib.Person,
                                                                   (GHC.Types.Int,
                                                                    [Database.SQLite3.SQLData]))
                                                                es
                                                           Database.SQLite.Simple.Ok.Ok a3
                                                           -> Database.SQLite.Simple.Ok.Ok
                                                                @ (WaiLib.Person,
                                                                   (GHC.Types.Int,
                                                                    [Database.SQLite3.SQLData]))
                                                                (WaiLib.Person a1 a2 a3,
                                                                 (GHC.Types.I# (GHC.Prim.+# s'' 1#),
                                                                  ds7)) } }
                                                 1#
                                                 -> Database.SQLite.Simple.Ok.Errors
                                                      @ (WaiLib.Person,
                                                         (GHC.Types.Int,
                                                          [Database.SQLite3.SQLData]))
                                                      (GHC.Types.:
                                                         @ GHC.Exception.Type.SomeException
                                                         (GHC.Exception.Type.SomeException
                                                            @ Database.SQLite.Simple.Internal.ColumnOutOfBounds
                                                            Database.SQLite.Simple.Internal.$fExceptionColumnOutOfBounds
                                                            (Database.SQLite.Simple.Internal.ColumnOutOfBounds
                                                               (GHC.Prim.+# s'' 1#)))
                                                         (GHC.Types.[]
                                                            @ GHC.Exception.Type.SomeException)) } } }
                                  1#
                                  -> Database.SQLite.Simple.Ok.Errors
                                       @ (WaiLib.Person,
                                          (GHC.Types.Int, [Database.SQLite3.SQLData]))
                                       (GHC.Types.:
                                          @ GHC.Exception.Type.SomeException
                                          (GHC.Exception.Type.SomeException
                                             @ Database.SQLite.Simple.Internal.ColumnOutOfBounds
                                             Database.SQLite.Simple.Internal.$fExceptionColumnOutOfBounds
                                             (Database.SQLite.Simple.Internal.ColumnOutOfBounds
                                                (GHC.Prim.+# s' 1#)))
                                          (GHC.Types.[] @ GHC.Exception.Type.SomeException)) } } }
                   1#
                   -> Database.SQLite.Simple.Ok.Errors
                        @ (WaiLib.Person, (GHC.Types.Int, [Database.SQLite3.SQLData]))
                        (GHC.Types.:
                           @ GHC.Exception.Type.SomeException
                           (GHC.Exception.Type.SomeException
                              @ Database.SQLite.Simple.Internal.ColumnOutOfBounds
                              Database.SQLite.Simple.Internal.$fExceptionColumnOutOfBounds
                              (Database.SQLite.Simple.Internal.ColumnOutOfBounds
                                 (GHC.Prim.+# ww1 1#)))
                           (GHC.Types.[] @ GHC.Exception.Type.SomeException)) }) -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $w$cfromRow1 ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [Database.SQLite3.SQLData]
    -> Database.SQLite.Simple.Ok.Ok
         (WaiLib.UserInput, (GHC.Types.Int, [Database.SQLite3.SQLData]))
  {- Arity: 3, Strictness: <S,U><S,U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: [Database.SQLite3.SQLData]) ->
                 case GHC.Prim.>=# ww1 ww of lwild {
                   DEFAULT
                   -> case ww2 of wild {
                        []
                        -> case GHC.List.badHead
                           ret_ty (Database.SQLite.Simple.Ok.Ok
                                     (WaiLib.UserInput,
                                      (GHC.Types.Int, [Database.SQLite3.SQLData])))
                           of {}
                        : x ds5
                        -> case Database.SQLite.Simple.FromField.$w$stakeInt3 x of wild1 {
                             Database.SQLite.Simple.Ok.Errors es
                             -> Database.SQLite.Simple.Ok.Errors
                                  @ (WaiLib.UserInput, (GHC.Types.Int, [Database.SQLite3.SQLData]))
                                  es
                             Database.SQLite.Simple.Ok.Ok a1
                             -> let {
                                  s' :: GHC.Prim.Int# = GHC.Prim.+# ww1 1#
                                } in
                                case GHC.Prim.>=# s' ww of lwild1 {
                                  DEFAULT
                                  -> case ds5 of wild2 {
                                       []
                                       -> case GHC.List.badHead
                                          ret_ty (Database.SQLite.Simple.Ok.Ok
                                                    (WaiLib.UserInput,
                                                     (GHC.Types.Int, [Database.SQLite3.SQLData])))
                                          of {}
                                       : x1 ds6
                                       -> case Database.SQLite.Simple.FromField.$w$cfromField9
                                                 x1 of wild3 {
                                            Database.SQLite.Simple.Ok.Errors es
                                            -> Database.SQLite.Simple.Ok.Errors
                                                 @ (WaiLib.UserInput,
                                                    (GHC.Types.Int, [Database.SQLite3.SQLData]))
                                                 es
                                            Database.SQLite.Simple.Ok.Ok a2
                                            -> Database.SQLite.Simple.Ok.Ok
                                                 @ (WaiLib.UserInput,
                                                    (GHC.Types.Int, [Database.SQLite3.SQLData]))
                                                 (WaiLib.UserInput a1 a2,
                                                  (GHC.Types.I# (GHC.Prim.+# s' 1#), ds6)) } }
                                  1#
                                  -> Database.SQLite.Simple.Ok.Errors
                                       @ (WaiLib.UserInput,
                                          (GHC.Types.Int, [Database.SQLite3.SQLData]))
                                       (GHC.Types.:
                                          @ GHC.Exception.Type.SomeException
                                          (GHC.Exception.Type.SomeException
                                             @ Database.SQLite.Simple.Internal.ColumnOutOfBounds
                                             Database.SQLite.Simple.Internal.$fExceptionColumnOutOfBounds
                                             (Database.SQLite.Simple.Internal.ColumnOutOfBounds
                                                (GHC.Prim.+# s' 1#)))
                                          (GHC.Types.[] @ GHC.Exception.Type.SomeException)) } } }
                   1#
                   -> Database.SQLite.Simple.Ok.Errors
                        @ (WaiLib.UserInput, (GHC.Types.Int, [Database.SQLite3.SQLData]))
                        (GHC.Types.:
                           @ GHC.Exception.Type.SomeException
                           (GHC.Exception.Type.SomeException
                              @ Database.SQLite.Simple.Internal.ColumnOutOfBounds
                              Database.SQLite.Simple.Internal.$fExceptionColumnOutOfBounds
                              (Database.SQLite.Simple.Internal.ColumnOutOfBounds
                                 (GHC.Prim.+# ww1 1#)))
                           (GHC.Types.[] @ GHC.Exception.Type.SomeException)) }) -}
bad5edc6d2e15a723cbd89c3ae46f5c0
  $w$creadPrec ::
    GHC.Prim.Int#
    -> forall b.
       (WaiLib.Person -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [2] -}
eccdf5930e60b8eb3e5c0ff70e86d047
  $w$creadPrec1 ::
    GHC.Prim.Int#
    -> forall b.
       (WaiLib.UserInput -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [2] -}
ae983a61dde9aea0cb7f820a5328aa29
  $w$cshow :: [GHC.Integer.Type.Integer] -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: [GHC.Integer.Type.Integer]) ->
                 GHC.CString.unpackAppendCString#
                   WaiLib.$fShowMBlock3
                   (GHC.CString.unpackAppendCString#
                      WaiLib.$fShowMBlock2
                      (GHC.Show.$fShowInteger_$cshowList ww WaiLib.$fShowMBlock4))) -}
f4215fce240f4ef019a4297bd5a0a6bb
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> [Data.Text.Internal.Lazy.Text]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U><L,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: [Data.Text.Internal.Lazy.Text])
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       WaiLib.$fShowBlock4
                       (GHC.CString.unpackAppendCString#
                          WaiLib.$fShowBlock3
                          (let {
                             s :: GHC.Base.String
                             = GHC.CString.unpackAppendCString# WaiLib.$fShowBlock2 x
                           } in
                           case ww1 of wild {
                             [] -> GHC.CString.unpackAppendCString# GHC.Show.showList__4 s
                             : x1 xs
                             -> GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showList__3
                                  (GHC.Types.:
                                     @ GHC.Types.Char
                                     GHC.Show.$fShow(,)3
                                     (GHC.Show.showLitString
                                        (Data.Text.Lazy.$wunfold x1 0#)
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.$fShow(,)3
                                           (let {
                                              lvl286 :: [GHC.Types.Char]
                                              = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__2 s
                                            } in
                                            letrec {
                                              showl :: [Data.Text.Internal.Lazy.Text]
                                                       -> GHC.Base.String
                                                {- Arity: 1, Strictness: <S,1*U> -}
                                              = \ (ds5 :: [Data.Text.Internal.Lazy.Text]) ->
                                                case ds5 of wild1 {
                                                  [] -> lvl286
                                                  : y ys
                                                  -> GHC.Types.:
                                                       @ GHC.Types.Char
                                                       GHC.Show.showList__1
                                                       (GHC.Types.:
                                                          @ GHC.Types.Char
                                                          GHC.Show.$fShow(,)3
                                                          (GHC.Show.showLitString
                                                             (Data.Text.Lazy.$wunfold y 0#)
                                                             (GHC.Types.:
                                                                @ GHC.Types.Char
                                                                GHC.Show.$fShow(,)3
                                                                (showl ys)))) }
                                            } in
                                            showl xs)))) }))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p w
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)) }) -}
c8eca38df35a43822aad7111bb86d02b
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5,
     Strictness: <S,U><L,1*U(U,U,U)><L,1*U(U,U,U)><L,1*U(U,U,U)><L,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Data.Text.Internal.Text)
                   (ww2 :: Data.Text.Internal.Text)
                   (ww3 :: Data.Text.Internal.Text)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       WaiLib.$fShowCompileCode5
                       (GHC.CString.unpackAppendCString#
                          WaiLib.$fShowCompileCode4
                          (case Data.Text.Show.$w$cshowsPrec
                                  ww1
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     GHC.Show.showCommaSpace1
                                     (GHC.CString.unpackAppendCString#
                                        WaiLib.$fShowCompileCode3
                                        (case Data.Text.Show.$w$cshowsPrec
                                                ww2
                                                (GHC.Base.++
                                                   @ GHC.Types.Char
                                                   GHC.Show.showCommaSpace1
                                                   (GHC.CString.unpackAppendCString#
                                                      WaiLib.$fShowCompileCode2
                                                      (case Data.Text.Show.$w$cshowsPrec
                                                              ww3
                                                              (GHC.CString.unpackAppendCString#
                                                                 WaiLib.$fShowBlock2
                                                                 x) of ww4 { (#,#) ww5 ww6 ->
                                                       GHC.Types.:
                                                         @ GHC.Types.Char
                                                         ww5
                                                         ww6 }))) of ww4 { (#,#) ww5 ww6 ->
                                         GHC.Types.:
                                           @ GHC.Types.Char
                                           ww5
                                           ww6 }))) of ww4 { (#,#) ww5 ww6 ->
                           GHC.Types.: @ GHC.Types.Char ww5 ww6 }))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p w
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)) }) -}
bbb9a1dc96277a4eaaa0c9fb20bf3431
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> Data.Text.Internal.Text
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U(U,U,U)><L,U><L,U><L,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Data.Text.Internal.Text)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (ww3 :: GHC.Integer.Type.Integer)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       WaiLib.$fShowGeneMatrix5
                       (GHC.CString.unpackAppendCString#
                          WaiLib.$fShowGeneMatrix4
                          (case Data.Text.Show.$w$cshowsPrec
                                  ww1
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     GHC.Show.showCommaSpace1
                                     (GHC.CString.unpackAppendCString#
                                        WaiLib.$fShowGeneMatrix3
                                        (case GHC.Show.$w$cshowsPrec4
                                                0#
                                                ww2
                                                (GHC.Base.++
                                                   @ GHC.Types.Char
                                                   GHC.Show.showCommaSpace1
                                                   (GHC.CString.unpackAppendCString#
                                                      WaiLib.$fShowGeneMatrix2
                                                      (case GHC.Show.$w$cshowsPrec4
                                                              0#
                                                              ww3
                                                              (GHC.CString.unpackAppendCString#
                                                                 WaiLib.$fShowBlock2
                                                                 x) of ww4 { (#,#) ww5 ww6 ->
                                                       GHC.Types.:
                                                         @ GHC.Types.Char
                                                         ww5
                                                         ww6 }))) of ww4 { (#,#) ww5 ww6 ->
                                         GHC.Types.:
                                           @ GHC.Types.Char
                                           ww5
                                           ww6 }))) of ww4 { (#,#) ww5 ww6 ->
                           GHC.Types.: @ GHC.Types.Char ww5 ww6 }))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p w
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)) }) -}
47dc00ba2c7233b3966179cf2e726204
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> [GHC.Integer.Type.Integer] -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U><L,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: [GHC.Integer.Type.Integer])
                   (w :: GHC.Base.String) ->
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> GHC.CString.unpackAppendCString#
                        WaiLib.$fShowMBlock3
                        (GHC.CString.unpackAppendCString#
                           WaiLib.$fShowMBlock2
                           (GHC.Show.$fShowInteger_$cshowList
                              ww1
                              (GHC.CString.unpackAppendCString# WaiLib.$fShowBlock2 w)))
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           WaiLib.$fShowMBlock3
                           (GHC.CString.unpackAppendCString#
                              WaiLib.$fShowMBlock2
                              (GHC.Show.$fShowInteger_$cshowList
                                 ww1
                                 (GHC.CString.unpackAppendCString#
                                    WaiLib.$fShowBlock2
                                    (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w))))) }) -}
721ab20ca27ebf7044261b5535e919db
  $w$cshowsPrec4 ::
    GHC.Prim.Int#
    -> Data.Text.Internal.Text
    -> [[GHC.Integer.Type.Integer]]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U(U,U,U)><L,1*U><L,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Data.Text.Internal.Text)
                   (ww2 :: [[GHC.Integer.Type.Integer]])
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       WaiLib.$fShowMatInt5
                       (case Data.Text.Show.$w$cshowsPrec
                               ww1
                               (GHC.Base.++
                                  @ GHC.Types.Char
                                  GHC.Show.showCommaSpace1
                                  (GHC.CString.unpackAppendCString#
                                     WaiLib.$fShowMatInt4
                                     (let {
                                        s :: GHC.Base.String
                                        = GHC.CString.unpackAppendCString# WaiLib.$fShowBlock2 x
                                      } in
                                      case ww2 of wild {
                                        []
                                        -> GHC.CString.unpackAppendCString# GHC.Show.showList__4 s
                                        : x1 xs
                                        -> GHC.Types.:
                                             @ GHC.Types.Char
                                             GHC.Show.showList__3
                                             (GHC.Show.$fShowInteger_$cshowList
                                                x1
                                                (let {
                                                   lvl286 :: [GHC.Types.Char]
                                                   = GHC.Types.:
                                                       @ GHC.Types.Char
                                                       GHC.Show.showList__2
                                                       s
                                                 } in
                                                 letrec {
                                                   showl :: [[GHC.Integer.Type.Integer]]
                                                            -> GHC.Base.String
                                                     {- Arity: 1, Strictness: <S,1*U> -}
                                                   = \ (ds5 :: [[GHC.Integer.Type.Integer]]) ->
                                                     case ds5 of wild1 {
                                                       [] -> lvl286
                                                       : y ys
                                                       -> GHC.Types.:
                                                            @ GHC.Types.Char
                                                            GHC.Show.showList__1
                                                            (GHC.Show.$fShowInteger_$cshowList
                                                               y
                                                               (showl ys)) }
                                                 } in
                                                 showl xs)) }))) of ww3 { (#,#) ww4 ww5 ->
                        GHC.Types.: @ GHC.Types.Char ww4 ww5 })
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> GHC.Base.++ @ GHC.Types.Char WaiLib.$fShowMatInt2 (g w)
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.Base.++
                           @ GHC.Types.Char
                           WaiLib.$fShowMatInt2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w))) }) -}
630eb42ad350249cfee0b8ccf1c9295d
  $w$cshowsPrec5 ::
    GHC.Prim.Int#
    -> GHC.Int.Int64
    -> Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5,
     Strictness: <S,U><L,1*U(U)><L,1*U(U,U,U)><L,1*U(U,U,U)><L,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Int.Int64)
                   (ww2 :: Data.Text.Internal.Text)
                   (ww3 :: Data.Text.Internal.Text)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       WaiLib.$fShowPerson5
                       (GHC.CString.unpackAppendCString#
                          WaiLib.$fShowPerson4
                          (case ww1 of wild { GHC.Int.I64# x# ->
                           case GHC.Show.$wshowSignedInt
                                  0#
                                  x#
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     GHC.Show.showCommaSpace1
                                     (GHC.CString.unpackAppendCString#
                                        WaiLib.$fShowPerson3
                                        (case Data.Text.Show.$w$cshowsPrec
                                                ww2
                                                (GHC.Base.++
                                                   @ GHC.Types.Char
                                                   GHC.Show.showCommaSpace1
                                                   (GHC.CString.unpackAppendCString#
                                                      WaiLib.$fShowPerson2
                                                      (case Data.Text.Show.$w$cshowsPrec
                                                              ww3
                                                              (GHC.CString.unpackAppendCString#
                                                                 WaiLib.$fShowBlock2
                                                                 x) of ww4 { (#,#) ww5 ww6 ->
                                                       GHC.Types.:
                                                         @ GHC.Types.Char
                                                         ww5
                                                         ww6 }))) of ww4 { (#,#) ww5 ww6 ->
                                         GHC.Types.:
                                           @ GHC.Types.Char
                                           ww5
                                           ww6 }))) of ww4 { (#,#) ww5 ww6 ->
                           GHC.Types.: @ GHC.Types.Char ww5 ww6 } }))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p w
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)) }) -}
8e82913ebc28543fde1ecc7e513dcc81
  $w$cshowsPrec6 ::
    GHC.Prim.Int#
    -> Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5,
     Strictness: <S,U><L,1*U(U,U,U)><L,1*U(U,U,U)><L,1*U(U,U,U)><L,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Data.Text.Internal.Text)
                   (ww2 :: Data.Text.Internal.Text)
                   (ww3 :: Data.Text.Internal.Text)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       WaiLib.$fShowReplyCode5
                       (GHC.CString.unpackAppendCString#
                          WaiLib.$fShowReplyCode4
                          (case Data.Text.Show.$w$cshowsPrec
                                  ww1
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     GHC.Show.showCommaSpace1
                                     (GHC.CString.unpackAppendCString#
                                        WaiLib.$fShowReplyCode3
                                        (case Data.Text.Show.$w$cshowsPrec
                                                ww2
                                                (GHC.Base.++
                                                   @ GHC.Types.Char
                                                   GHC.Show.showCommaSpace1
                                                   (GHC.CString.unpackAppendCString#
                                                      WaiLib.$fShowReplyCode2
                                                      (case Data.Text.Show.$w$cshowsPrec
                                                              ww3
                                                              (GHC.CString.unpackAppendCString#
                                                                 WaiLib.$fShowBlock2
                                                                 x) of ww4 { (#,#) ww5 ww6 ->
                                                       GHC.Types.:
                                                         @ GHC.Types.Char
                                                         ww5
                                                         ww6 }))) of ww4 { (#,#) ww5 ww6 ->
                                         GHC.Types.:
                                           @ GHC.Types.Char
                                           ww5
                                           ww6 }))) of ww4 { (#,#) ww5 ww6 ->
                           GHC.Types.: @ GHC.Types.Char ww5 ww6 }))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p w
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)) }) -}
9fd0dc710606739e04067add86298426
  $w$cshowsPrec7 ::
    GHC.Prim.Int#
    -> GHC.Int.Int64
    -> Data.Text.Internal.Text
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U(U)><L,1*U(U,U,U)><L,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Int.Int64)
                   (ww2 :: Data.Text.Internal.Text)
                   (w :: GHC.Base.String) ->
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        WaiLib.$fShowUserInput4
                        (GHC.CString.unpackAppendCString#
                           WaiLib.$fShowUserInput3
                           (case ww1 of wild { GHC.Int.I64# x# ->
                            case GHC.Show.$wshowSignedInt
                                   0#
                                   x#
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      GHC.Show.showCommaSpace1
                                      (GHC.CString.unpackAppendCString#
                                         WaiLib.$fShowUserInput2
                                         (case Data.Text.Show.$w$cshowsPrec
                                                 ww2
                                                 (GHC.CString.unpackAppendCString#
                                                    WaiLib.$fShowBlock2
                                                    w) of ww3 { (#,#) ww4 ww5 ->
                                          GHC.Types.:
                                            @ GHC.Types.Char
                                            ww4
                                            ww5 }))) of ww4 { (#,#) ww5 ww6 ->
                            GHC.Types.: @ GHC.Types.Char ww5 ww6 } }))
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.Base.++
                           @ GHC.Types.Char
                           WaiLib.$fShowUserInput4
                           (GHC.CString.unpackAppendCString#
                              WaiLib.$fShowUserInput3
                              (case ww1 of wild { GHC.Int.I64# x# ->
                               case GHC.Show.$wshowSignedInt
                                      0#
                                      x#
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         GHC.Show.showCommaSpace1
                                         (GHC.CString.unpackAppendCString#
                                            WaiLib.$fShowUserInput2
                                            (case Data.Text.Show.$w$cshowsPrec
                                                    ww2
                                                    (GHC.CString.unpackAppendCString#
                                                       WaiLib.$fShowBlock2
                                                       (GHC.Types.:
                                                          @ GHC.Types.Char
                                                          GHC.Show.$fShow(,)2
                                                          w)) of ww3 { (#,#) ww4 ww5 ->
                                             GHC.Types.:
                                               @ GHC.Types.Char
                                               ww4
                                               ww5 }))) of ww4 { (#,#) ww5 ww6 ->
                               GHC.Types.: @ GHC.Types.Char ww5 ww6 } }))) }) -}
036a62be5a12650aff8e5a89881204da
  $w$ctoEncoding ::
    WaiLib.Block
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> GHC.Prim.Addr#
       -> GHC.Prim.Addr#
       -> GHC.Prim.State# GHC.Prim.RealWorld
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 5,
     Strictness: <L,1*U(1*U)><L,C(C1(U(U,U)))><S,U><S,U><S,U>,
     Inline: [2] -}
5314a786cb517876013aa11a8809fdd3
  $w$ctoEncoding1 ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> GHC.Prim.Addr#
       -> GHC.Prim.Addr#
       -> GHC.Prim.State# GHC.Prim.RealWorld
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 7,
     Strictness: <L,U(U,U,U)><L,U(U,U,U)><L,U(U,U,U)><L,C(C1(U(U,U)))><S,U><S,U><S,U>,
     Inline: [2] -}
036a62be5a12650aff8e5a89881204da
  $w$ctoJSON ::
    WaiLib.Block -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 1, Strictness: <L,1*U(1*U)>, Inline: [2],
     Unfolding: (\ (w :: WaiLib.Block) ->
                 case Data.Aeson.Types.ToJSON.$fFromPairsValueDList_go
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (WaiLib.$fToJSONBlock2,
                            case GHC.Magic.runRW#
                                   @ ('GHC.Types.TupleRep
                                        '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                   @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                        Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
                                   (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    case GHC.Prim.newArray#
                                           @ Data.Aeson.Types.Internal.Value
                                           @ (Control.Monad.Primitive.PrimState
                                                (GHC.ST.ST GHC.Prim.RealWorld))
                                           0#
                                           (Data.Vector.Mutable.uninitialised
                                              @ Data.Aeson.Types.Internal.Value)
                                           s1
                                             `cast`
                                           (GHC.Prim.State#
                                              (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                        (Nth:0
                                                             (Nth:2
                                                                  (<GHC.Prim.State#
                                                                      GHC.Prim.RealWorld>_R
                                                                   ->_R ((#,#)
                                                                           <'GHC.Types.TupleRep
                                                                              '[]>_R
                                                                           <'GHC.Types.LiftedRep>_R
                                                                           <GHC.Prim.State#
                                                                              GHC.Prim.RealWorld>_R
                                                                           (Data.Vector.Generic.Base.Mutable
                                                                              <Data.Vector.Vector>_N
                                                                              (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                                   <GHC.Prim.RealWorld>_N)
                                                                              <Data.Aeson.Types.Internal.Value>_N)_R)_R))))))_R of ds5 { (#,#) ipv ipv1 ->
                                    case w of wild { WaiLib.Block g1 ->
                                    WaiLib.$wfoldlM_loop
                                      GHC.Types.SPEC
                                      0#
                                      0#
                                      ipv1
                                        `cast`
                                      (GHC.Prim.MutableArray#
                                         (Nth:0
                                              (Nth:3
                                                   (Nth:3
                                                        (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                                         ->_R ((#,#)
                                                                 <'GHC.Types.TupleRep '[]>_R
                                                                 <'GHC.Types.LiftedRep>_R
                                                                 <GHC.Prim.State#
                                                                    GHC.Prim.RealWorld>_R
                                                                 (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                                  (GHC.ST.ST
                                                                                                                     GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N))_R)) ; Sub (Data.Vector.D:R:MutableVector[0]) (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                                                                                                                                                                                    <GHC.Prim.RealWorld>_N) <Data.Aeson.Types.Internal.Value>_N))
                                         (Nth:1
                                              (Nth:3
                                                   (Nth:3
                                                        (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                                         ->_R ((#,#)
                                                                 <'GHC.Types.TupleRep '[]>_R
                                                                 <'GHC.Types.LiftedRep>_R
                                                                 <GHC.Prim.State#
                                                                    GHC.Prim.RealWorld>_R
                                                                 (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                                  (GHC.ST.ST
                                                                                                                     GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N))_R)) ; Sub (Data.Vector.D:R:MutableVector[0]) (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                                                                                                                                                                                    <GHC.Prim.RealWorld>_N) <Data.Aeson.Types.Internal.Value>_N)))_R
                                      0#
                                      (GHC.Base.map
                                         @ Data.Text.Internal.Lazy.Text
                                         @ Data.Aeson.Types.Internal.Value
                                         Data.Aeson.Types.ToJSON.$fToJSONKeyText_$ctoJSON
                                         g1)
                                      ipv
                                        `cast`
                                      (GHC.Prim.State#
                                         (Control.Monad.Primitive.D:R:PrimStateST[0]
                                              (Nth:0
                                                   (Nth:2
                                                        (Nth:3
                                                             (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                                              ->_R ((#,#)
                                                                      <'GHC.Types.TupleRep '[]>_R
                                                                      <'GHC.Types.LiftedRep>_R
                                                                      <GHC.Prim.State#
                                                                         GHC.Prim.RealWorld>_R
                                                                      (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                                       (GHC.ST.ST
                                                                                                                          GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N))_R))))))_R } }) of ds5 { (#,#) ipv1 ipv2 ->
                            case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                            Data.Aeson.Types.Internal.Array dt } })
                           (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of ww { Data.Aeson.Types.Internal.Object ww1 ->
                 (# ww1 #) }) -}
3d722c2bb432f86dad7e962b123d6a18
  $w$ctoJSON1 ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [2],
     Unfolding: (\ (ww :: Data.Text.Internal.Text)
                   (ww1 :: Data.Text.Internal.Text)
                   (ww2 :: Data.Text.Internal.Text) ->
                 case Data.Aeson.Types.ToJSON.$fFromPairsValueDList_go
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (WaiLib.$fToJSONCompileCode6,
                            Data.Aeson.Types.Internal.$WString ww)
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (WaiLib.$fToJSONCompileCode4,
                               Data.Aeson.Types.Internal.$WString ww1)
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (WaiLib.$fToJSONCompileCode2,
                                  Data.Aeson.Types.Internal.$WString ww2)
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of ww3 { Data.Aeson.Types.Internal.Object ww4 ->
                 (# ww4 #) }) -}
c7c65fcfda8eb49c77b65323065acdfe
  $w$ctoJSON2 ::
    Data.Text.Internal.Text
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 3, Strictness: <L,U><L,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: Data.Text.Internal.Text)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer) ->
                 case Data.Aeson.Types.ToJSON.$fFromPairsValueDList_go
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (WaiLib.$fToJSONGeneMatrix6, Data.Aeson.Types.Internal.$WString ww)
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (WaiLib.$fToJSONGeneMatrix4,
                               case ww1 of dt { DEFAULT ->
                               Data.Aeson.Types.Internal.Number
                                 (Data.Scientific.Scientific dt 0#) })
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (WaiLib.$fToJSONGeneMatrix2,
                                  case ww2 of dt { DEFAULT ->
                                  Data.Aeson.Types.Internal.Number
                                    (Data.Scientific.Scientific dt 0#) })
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of ww3 { Data.Aeson.Types.Internal.Object ww4 ->
                 (# ww4 #) }) -}
d389d91074ea84663a226202bbcac89a
  $w$ctoJSON3 ::
    WaiLib.MBlock -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 1, Strictness: <L,1*U(1*U)>, Inline: [2],
     Unfolding: (\ (w :: WaiLib.MBlock) ->
                 case Data.Aeson.Types.ToJSON.$fFromPairsValueDList_go
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (WaiLib.$fToJSONMBlock2,
                            case GHC.Magic.runRW#
                                   @ ('GHC.Types.TupleRep
                                        '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                   @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                        Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
                                   (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    case GHC.Prim.newArray#
                                           @ Data.Aeson.Types.Internal.Value
                                           @ (Control.Monad.Primitive.PrimState
                                                (GHC.ST.ST GHC.Prim.RealWorld))
                                           0#
                                           (Data.Vector.Mutable.uninitialised
                                              @ Data.Aeson.Types.Internal.Value)
                                           s1
                                             `cast`
                                           (GHC.Prim.State#
                                              (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                        (Nth:0
                                                             (Nth:2
                                                                  (<GHC.Prim.State#
                                                                      GHC.Prim.RealWorld>_R
                                                                   ->_R ((#,#)
                                                                           <'GHC.Types.TupleRep
                                                                              '[]>_R
                                                                           <'GHC.Types.LiftedRep>_R
                                                                           <GHC.Prim.State#
                                                                              GHC.Prim.RealWorld>_R
                                                                           (Data.Vector.Generic.Base.Mutable
                                                                              <Data.Vector.Vector>_N
                                                                              (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                                   <GHC.Prim.RealWorld>_N)
                                                                              <Data.Aeson.Types.Internal.Value>_N)_R)_R))))))_R of ds5 { (#,#) ipv ipv1 ->
                                    case w of wild { WaiLib.MBlock g1 ->
                                    WaiLib.$wfoldlM_loop
                                      GHC.Types.SPEC
                                      0#
                                      0#
                                      ipv1
                                        `cast`
                                      (GHC.Prim.MutableArray#
                                         (Nth:0
                                              (Nth:3
                                                   (Nth:3
                                                        (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                                         ->_R ((#,#)
                                                                 <'GHC.Types.TupleRep '[]>_R
                                                                 <'GHC.Types.LiftedRep>_R
                                                                 <GHC.Prim.State#
                                                                    GHC.Prim.RealWorld>_R
                                                                 (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                                  (GHC.ST.ST
                                                                                                                     GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N))_R)) ; Sub (Data.Vector.D:R:MutableVector[0]) (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                                                                                                                                                                                    <GHC.Prim.RealWorld>_N) <Data.Aeson.Types.Internal.Value>_N))
                                         (Nth:1
                                              (Nth:3
                                                   (Nth:3
                                                        (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                                         ->_R ((#,#)
                                                                 <'GHC.Types.TupleRep '[]>_R
                                                                 <'GHC.Types.LiftedRep>_R
                                                                 <GHC.Prim.State#
                                                                    GHC.Prim.RealWorld>_R
                                                                 (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                                  (GHC.ST.ST
                                                                                                                     GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N))_R)) ; Sub (Data.Vector.D:R:MutableVector[0]) (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                                                                                                                                                                                    <GHC.Prim.RealWorld>_N) <Data.Aeson.Types.Internal.Value>_N)))_R
                                      0#
                                      (GHC.Base.map
                                         @ GHC.Integer.Type.Integer
                                         @ Data.Aeson.Types.Internal.Value
                                         Data.Aeson.Types.ToJSON.$fToJSONInteger_$ctoJSON
                                         g1)
                                      ipv
                                        `cast`
                                      (GHC.Prim.State#
                                         (Control.Monad.Primitive.D:R:PrimStateST[0]
                                              (Nth:0
                                                   (Nth:2
                                                        (Nth:3
                                                             (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                                              ->_R ((#,#)
                                                                      <'GHC.Types.TupleRep '[]>_R
                                                                      <'GHC.Types.LiftedRep>_R
                                                                      <GHC.Prim.State#
                                                                         GHC.Prim.RealWorld>_R
                                                                      (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                                       (GHC.ST.ST
                                                                                                                          GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N))_R))))))_R } }) of ds5 { (#,#) ipv1 ipv2 ->
                            case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                            Data.Aeson.Types.Internal.Array dt } })
                           (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of ww { Data.Aeson.Types.Internal.Object ww1 ->
                 (# ww1 #) }) -}
764772f51079bc49a75b467554177ea7
  $w$ctoJSON4 ::
    Data.Text.Internal.Text
    -> [[GHC.Integer.Type.Integer]]
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <L,U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: Data.Text.Internal.Text)
                   (ww1 :: [[GHC.Integer.Type.Integer]]) ->
                 case Data.Aeson.Types.ToJSON.$fFromPairsValueDList_go
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (WaiLib.$fToJSONMatInt5, Data.Aeson.Types.Internal.$WString ww)
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (WaiLib.$fToJSONMatInt3,
                               case GHC.Magic.runRW#
                                      @ ('GHC.Types.TupleRep
                                           '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                      @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                           Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
                                      (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                       case GHC.Prim.newArray#
                                              @ Data.Aeson.Types.Internal.Value
                                              @ (Control.Monad.Primitive.PrimState
                                                   (GHC.ST.ST GHC.Prim.RealWorld))
                                              0#
                                              (Data.Vector.Mutable.uninitialised
                                                 @ Data.Aeson.Types.Internal.Value)
                                              s1
                                                `cast`
                                              (GHC.Prim.State#
                                                 (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                           (Nth:0
                                                                (Nth:2
                                                                     (<GHC.Prim.State#
                                                                         GHC.Prim.RealWorld>_R
                                                                      ->_R ((#,#)
                                                                              <'GHC.Types.TupleRep
                                                                                 '[]>_R
                                                                              <'GHC.Types.LiftedRep>_R
                                                                              <GHC.Prim.State#
                                                                                 GHC.Prim.RealWorld>_R
                                                                              (Data.Vector.Generic.Base.Mutable
                                                                                 <Data.Vector.Vector>_N
                                                                                 (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                                      <GHC.Prim.RealWorld>_N)
                                                                                 <Data.Aeson.Types.Internal.Value>_N)_R)_R))))))_R of ds5 { (#,#) ipv ipv1 ->
                                       WaiLib.$wfoldlM_loop
                                         GHC.Types.SPEC
                                         0#
                                         0#
                                         ipv1
                                           `cast`
                                         (GHC.Prim.MutableArray#
                                            (Nth:0
                                                 (Nth:3
                                                      (Nth:3
                                                           (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                                            ->_R ((#,#)
                                                                    <'GHC.Types.TupleRep '[]>_R
                                                                    <'GHC.Types.LiftedRep>_R
                                                                    <GHC.Prim.State#
                                                                       GHC.Prim.RealWorld>_R
                                                                    (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                                     (GHC.ST.ST
                                                                                                                        GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N))_R)) ; Sub (Data.Vector.D:R:MutableVector[0]) (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                                                                                                                                                                                       <GHC.Prim.RealWorld>_N) <Data.Aeson.Types.Internal.Value>_N))
                                            (Nth:1
                                                 (Nth:3
                                                      (Nth:3
                                                           (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                                                            ->_R ((#,#)
                                                                    <'GHC.Types.TupleRep '[]>_R
                                                                    <'GHC.Types.LiftedRep>_R
                                                                    <GHC.Prim.State#
                                                                       GHC.Prim.RealWorld>_R
                                                                    (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                                     (GHC.ST.ST
                                                                                                                        GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N))_R)) ; Sub (Data.Vector.D:R:MutableVector[0]) (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                                                                                                                                                                                       <GHC.Prim.RealWorld>_N) <Data.Aeson.Types.Internal.Value>_N)))_R
                                         0#
                                         (GHC.Base.map
                                            @ [GHC.Integer.Type.Integer]
                                            @ Data.Aeson.Types.Internal.Value
                                            Data.Aeson.Types.ToJSON.$fToJSONInteger_$ctoJSONList
                                            ww1)
                                         ipv
                                           `cast`
                                         (GHC.Prim.State#
                                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                 (Nth:0
                                                      (Nth:2
                                                           (Nth:3
                                                                (<GHC.Prim.State#
                                                                    GHC.Prim.RealWorld>_R
                                                                 ->_R ((#,#)
                                                                         <'GHC.Types.TupleRep '[]>_R
                                                                         <'GHC.Types.LiftedRep>_R
                                                                         <GHC.Prim.State#
                                                                            GHC.Prim.RealWorld>_R
                                                                         (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                                          (GHC.ST.ST
                                                                                                                             GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N))_R))))))_R }) of ds5 { (#,#) ipv1 ipv2 ->
                               case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                               Data.Aeson.Types.Internal.Array dt } })
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of ww2 { Data.Aeson.Types.Internal.Object ww3 ->
                 (# ww3 #) }) -}
46e51f8247d2796b1210e20646566350
  $w$ctoJSON5 ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [2],
     Unfolding: (\ (ww :: Data.Text.Internal.Text)
                   (ww1 :: Data.Text.Internal.Text)
                   (ww2 :: Data.Text.Internal.Text) ->
                 case Data.Aeson.Types.ToJSON.$fFromPairsValueDList_go
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (WaiLib.$fToJSONReplyCode7, Data.Aeson.Types.Internal.$WString ww)
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (WaiLib.$fToJSONReplyCode5, Data.Aeson.Types.Internal.$WString ww1)
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (WaiLib.$fToJSONReplyCode3, Data.Aeson.Types.Internal.$WString ww2)
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of ww3 { Data.Aeson.Types.Internal.Object ww4 ->
                 (# ww4 #) }) -}
a5d17841c64b554848405e78ee5a2924
  $wanyRoute ::
    Database.SQLite.Simple.Internal.Connection
    -> GHC.IORef.IORef WaiLib.HMap
    -> Network.HTTP.Types.URI.Query
    -> Network.Wai.Internal.Response
  {- Arity: 3, Strictness: <L,U(U)><L,U(U)><S,1*U>, Inline: [2] -}
e491f2fc7423b41db7f2aafee5e82d69
  $wbroadcast ::
    WaiLib.ClientId
    -> GHC.Prim.MVar# GHC.Prim.RealWorld WaiLib.State
    -> Data.Text.Internal.Text
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U(U)><S,U><L,U><S,U>, Inline: [2],
     Unfolding: (\ (w :: WaiLib.ClientId)
                   (ww :: GHC.Prim.MVar# GHC.Prim.RealWorld WaiLib.State)
                   (w1 :: Data.Text.Internal.Text)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.readMVar#
                        @ GHC.Prim.RealWorld
                        @ WaiLib.State
                        ww
                        w2 of ds5 { (#,#) ipv ipv1 ->
                 let {
                   lvl286 :: Data.ByteString.Lazy.Internal.ByteString
                   = Data.Text.Lazy.Encoding.encodeUtf8
                       (Data.Text.Lazy.fromChunks_go
                          (GHC.Types.:
                             @ Data.Text.Internal.Text
                             w1
                             (GHC.Types.[] @ Data.Text.Internal.Text)))
                 } in
                 let {
                   lvl287 :: Network.WebSockets.Types.DataMessage
                   = Network.WebSockets.Types.Text
                       lvl286
                       (GHC.Maybe.Nothing @ Data.Text.Internal.Lazy.Text)
                 } in
                 let {
                   lvl288 :: Network.WebSockets.Types.Message
                   = Network.WebSockets.Types.DataMessage
                       GHC.Types.False
                       GHC.Types.False
                       GHC.Types.False
                       lvl287
                 } in
                 let {
                   lvl289 :: [Network.WebSockets.Types.Message]
                   = GHC.Types.:
                       @ Network.WebSockets.Types.Message
                       lvl288
                       (GHC.Types.[] @ Network.WebSockets.Types.Message)
                 } in
                 letrec {
                   go10 :: [(WaiLib.ClientId,
                             Network.WebSockets.Connection.Connection)]
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                     <join 2> {- Arity: 2, Strictness: <S,1*U><S,U> -}
                   = \ (ds6 :: [(WaiLib.ClientId,
                                 Network.WebSockets.Connection.Connection)])
                       (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     case ds6 of wild {
                       [] -> (# eta, GHC.Tuple.() #)
                       : y ys
                       -> case y of wild1 { (,) x ds7 ->
                          case w of wild2 { GHC.Types.I# x1 ->
                          case x of wild3 { GHC.Types.I# y1 ->
                          case GHC.Prim./=# x1 y1 of lwild {
                            DEFAULT -> go10 ys eta
                            1#
                            -> let {
                                 $j :: (# GHC.Prim.State# GHC.Prim.RealWorld, () #) <join 0>
                                 = case ds7 of wild4 { Network.WebSockets.Connection.Connection ds8 ds9 ds10 ds11 dt ->
                                   case GHC.Prim.writeMutVar#
                                          @ GHC.Prim.RealWorld
                                          @ GHC.Types.Bool
                                          dt
                                          GHC.Types.True
                                          eta of s2# { DEFAULT ->
                                   case (ds11 lvl289) `cast` (GHC.Types.N:IO[0] <()>_R)
                                          s2# of ds12 { (#,#) ipv2 ipv3 ->
                                   go10 ys ipv2 } } }
                               } in
                               let {
                                 $j1 :: (# GHC.Prim.State# GHC.Prim.RealWorld, () #) <join 0>
                                 = case ds7 of wild4 { Network.WebSockets.Connection.Connection ds8 ds9 ds10 ds11 dt ->
                                   case (ds11 lvl289) `cast` (GHC.Types.N:IO[0] <()>_R)
                                          eta of ds12 { (#,#) ipv2 ipv3 ->
                                   go10 ys ipv2 } }
                               } in
                               letrec {
                                 go11 :: [Network.WebSockets.Types.Message]
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                   <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                                 = \ (ds8 :: [Network.WebSockets.Types.Message]) ->
                                   case ds8 of wild4 {
                                     [] -> $j1
                                     : y2 ys1
                                     -> case y2 of wild5 {
                                          Network.WebSockets.Types.ControlMessage ds9
                                          -> case ds9 of wild6 {
                                               DEFAULT -> go11 ys1
                                               Network.WebSockets.Types.Close ds10 ds11 -> $j }
                                          Network.WebSockets.Types.DataMessage ipv2 ipv3 ipv4 ipv5
                                          -> go11 ys1 } }
                               } in
                               go11 lvl289 } } } } }
                 } in
                 go10 ipv1 ipv }) -}
289aafab91ceeb2795116a373a972897
  $wconnectClient ::
    Network.WebSockets.Connection.Connection
    -> GHC.Prim.MVar# GHC.Prim.RealWorld WaiLib.State
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, WaiLib.ClientId #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><S,U><S,U>,
     Inline: [2],
     Unfolding: (\ (w :: Network.WebSockets.Connection.Connection)
                   (ww :: GHC.Prim.MVar# GHC.Prim.RealWorld WaiLib.State)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.getMaskingState# w1 of ds5 { (#,#) ipv ipv1 ->
                 case ipv1 of ds6 {
                   DEFAULT
                   -> case GHC.Prim.takeMVar#
                             @ GHC.Prim.RealWorld
                             @ WaiLib.State
                             ww
                             ipv of ds7 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ (WaiLib.State, WaiLib.ClientId)
                             @ GHC.Exception.Type.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ (WaiLib.State, WaiLib.ClientId)
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 let {
                                   clientId :: WaiLib.ClientId
                                   = case GHC.Base.map
                                            @ (WaiLib.ClientId,
                                               Network.WebSockets.Connection.Connection)
                                            @ GHC.Types.Int
                                            (Data.Tuple.fst
                                               @ WaiLib.ClientId
                                               @ Network.WebSockets.Connection.Connection)
                                            ipv3 of wild {
                                       [] -> WaiLib.$fShowBlock_n
                                       : ds8 ds9
                                       -> case ds8 of ww1 { GHC.Types.I# ww2 ->
                                          WaiLib.$wgo ds9 ww2 } }
                                 } in
                                 (# s1,
                                    (GHC.Types.:
                                       @ (WaiLib.ClientId, Network.WebSockets.Connection.Connection)
                                       (clientId, w)
                                       ipv3,
                                     clientId) #)))
                             (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.putMVar#
                                     @ GHC.Prim.RealWorld
                                     @ WaiLib.State
                                     ww
                                     ipv3
                                     s1 of s2# { DEFAULT ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.Type.SomeException
                                @ (WaiLib.State, WaiLib.ClientId)
                                e1
                                s2# })
                             ipv2 of ds8 { (#,#) ipv4 ipv5 ->
                      case ipv5 of wild1 { (,) a' b1 ->
                      case GHC.Prim.putMVar#
                             @ GHC.Prim.RealWorld
                             @ WaiLib.State
                             ww
                             a'
                             ipv4 of s2# { DEFAULT ->
                      (# s2#, b1 #) } } } }
                   0#
                   -> GHC.Prim.maskAsyncExceptions#
                        @ WaiLib.ClientId
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.takeMVar#
                                @ GHC.Prim.RealWorld
                                @ WaiLib.State
                                ww
                                s1 of ds7 { (#,#) ipv2 ipv3 ->
                         case GHC.Prim.catch#
                                @ (WaiLib.State, WaiLib.ClientId)
                                @ GHC.Exception.Type.SomeException
                                (GHC.Prim.unmaskAsyncExceptions#
                                   @ (WaiLib.State, WaiLib.ClientId)
                                   (\ (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    let {
                                      clientId :: WaiLib.ClientId
                                      = case GHC.Base.map
                                               @ (WaiLib.ClientId,
                                                  Network.WebSockets.Connection.Connection)
                                               @ GHC.Types.Int
                                               (Data.Tuple.fst
                                                  @ WaiLib.ClientId
                                                  @ Network.WebSockets.Connection.Connection)
                                               ipv3 of wild {
                                          [] -> WaiLib.$fShowBlock_n
                                          : ds8 ds9
                                          -> case ds8 of ww1 { GHC.Types.I# ww2 ->
                                             WaiLib.$wgo ds9 ww2 } }
                                    } in
                                    (# s2,
                                       (GHC.Types.:
                                          @ (WaiLib.ClientId,
                                             Network.WebSockets.Connection.Connection)
                                          (clientId, w)
                                          ipv3,
                                        clientId) #)))
                                (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                                   (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case GHC.Prim.putMVar#
                                        @ GHC.Prim.RealWorld
                                        @ WaiLib.State
                                        ww
                                        ipv3
                                        s2 of s2# { DEFAULT ->
                                 GHC.Prim.raiseIO#
                                   @ GHC.Exception.Type.SomeException
                                   @ (WaiLib.State, WaiLib.ClientId)
                                   e1
                                   s2# })
                                ipv2 of ds8 { (#,#) ipv4 ipv5 ->
                         case ipv5 of wild1 { (,) a' b1 ->
                         case GHC.Prim.putMVar#
                                @ GHC.Prim.RealWorld
                                @ WaiLib.State
                                ww
                                a'
                                ipv4 of s2# { DEFAULT ->
                         (# s2#, b1 #) } } } })
                        ipv
                   1#
                   -> case GHC.Prim.takeMVar#
                             @ GHC.Prim.RealWorld
                             @ WaiLib.State
                             ww
                             ipv of ds7 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ (WaiLib.State, WaiLib.ClientId)
                             @ GHC.Exception.Type.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ (WaiLib.State, WaiLib.ClientId)
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 let {
                                   clientId :: WaiLib.ClientId
                                   = case GHC.Base.map
                                            @ (WaiLib.ClientId,
                                               Network.WebSockets.Connection.Connection)
                                            @ GHC.Types.Int
                                            (Data.Tuple.fst
                                               @ WaiLib.ClientId
                                               @ Network.WebSockets.Connection.Connection)
                                            ipv3 of wild {
                                       [] -> WaiLib.$fShowBlock_n
                                       : ds8 ds9
                                       -> case ds8 of ww1 { GHC.Types.I# ww2 ->
                                          WaiLib.$wgo ds9 ww2 } }
                                 } in
                                 (# s1,
                                    (GHC.Types.:
                                       @ (WaiLib.ClientId, Network.WebSockets.Connection.Connection)
                                       (clientId, w)
                                       ipv3,
                                     clientId) #)))
                             (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.putMVar#
                                     @ GHC.Prim.RealWorld
                                     @ WaiLib.State
                                     ww
                                     ipv3
                                     s1 of s2# { DEFAULT ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.Type.SomeException
                                @ (WaiLib.State, WaiLib.ClientId)
                                e1
                                s2# })
                             ipv2 of ds8 { (#,#) ipv4 ipv5 ->
                      case ipv5 of wild1 { (,) a' b1 ->
                      case GHC.Prim.putMVar#
                             @ GHC.Prim.RealWorld
                             @ WaiLib.State
                             ww
                             a'
                             ipv4 of s2# { DEFAULT ->
                      (# s2#, b1 #) } } } } } }) -}
0ec7ff3b109eb458e6da6a55246861c3
  $wdisconnectClient ::
    WaiLib.ClientId
    -> GHC.Prim.MVar# GHC.Prim.RealWorld WaiLib.State
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U(U)><S,U><S,U>,
     Inline: [2],
     Unfolding: (\ (w :: WaiLib.ClientId)
                   (ww :: GHC.Prim.MVar# GHC.Prim.RealWorld WaiLib.State)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.getMaskingState# w1 of ds5 { (#,#) ipv ipv1 ->
                 case ipv1 of ds6 {
                   DEFAULT
                   -> case GHC.Prim.takeMVar#
                             @ GHC.Prim.RealWorld
                             @ WaiLib.State
                             ww
                             ipv of ds7 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ WaiLib.State
                             @ GHC.Exception.Type.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ WaiLib.State
                                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 (# s, WaiLib.withoutClient w ipv3 #)))
                             (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.putMVar#
                                     @ GHC.Prim.RealWorld
                                     @ WaiLib.State
                                     ww
                                     ipv3
                                     s1 of s2# { DEFAULT ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.Type.SomeException
                                @ WaiLib.State
                                e1
                                s2# })
                             ipv2 of ds8 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.putMVar#
                             @ GHC.Prim.RealWorld
                             @ WaiLib.State
                             ww
                             ipv5
                             ipv4 of s2# { DEFAULT ->
                      (# s2#, GHC.Tuple.() #) } } }
                   0#
                   -> GHC.Prim.maskAsyncExceptions#
                        @ ()
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.takeMVar#
                                @ GHC.Prim.RealWorld
                                @ WaiLib.State
                                ww
                                s1 of ds7 { (#,#) ipv2 ipv3 ->
                         case GHC.Prim.catch#
                                @ WaiLib.State
                                @ GHC.Exception.Type.SomeException
                                (GHC.Prim.unmaskAsyncExceptions#
                                   @ WaiLib.State
                                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    (# s, WaiLib.withoutClient w ipv3 #)))
                                (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                                   (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case GHC.Prim.putMVar#
                                        @ GHC.Prim.RealWorld
                                        @ WaiLib.State
                                        ww
                                        ipv3
                                        s2 of s2# { DEFAULT ->
                                 GHC.Prim.raiseIO#
                                   @ GHC.Exception.Type.SomeException
                                   @ WaiLib.State
                                   e1
                                   s2# })
                                ipv2 of ds8 { (#,#) ipv4 ipv5 ->
                         case GHC.Prim.putMVar#
                                @ GHC.Prim.RealWorld
                                @ WaiLib.State
                                ww
                                ipv5
                                ipv4 of s2# { DEFAULT ->
                         (# s2#, GHC.Tuple.() #) } } })
                        ipv
                   1#
                   -> case GHC.Prim.takeMVar#
                             @ GHC.Prim.RealWorld
                             @ WaiLib.State
                             ww
                             ipv of ds7 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ WaiLib.State
                             @ GHC.Exception.Type.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ WaiLib.State
                                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 (# s, WaiLib.withoutClient w ipv3 #)))
                             (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.putMVar#
                                     @ GHC.Prim.RealWorld
                                     @ WaiLib.State
                                     ww
                                     ipv3
                                     s1 of s2# { DEFAULT ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.Type.SomeException
                                @ WaiLib.State
                                e1
                                s2# })
                             ipv2 of ds8 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.putMVar#
                             @ GHC.Prim.RealWorld
                             @ WaiLib.State
                             ww
                             ipv5
                             ipv4 of s2# { DEFAULT ->
                      (# s2#, GHC.Tuple.() #) } } } } }) -}
8c67116dfa68488f083fb89126b6239a
  $wfoldlM_loop ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray#
         GHC.Prim.RealWorld Data.Aeson.Types.Internal.Value
    -> GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [2] -}
03f186b7c769a9c7ca4a5feefefb44a9
  $wg ::
    GHC.Generics.S1
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "rcmd")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
      (GHC.Generics.Rec0 Data.Text.Internal.Text)
      GHC.Types.Any
    -> GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Maybe.Just "rerror")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 Data.Text.Internal.Text)
         GHC.Types.Any
    -> GHC.Generics.S1
         ('GHC.Generics.MetaSel
            ('GHC.Maybe.Just "stdout")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 Data.Text.Internal.Text)
         GHC.Types.Any
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> GHC.Prim.Addr#
       -> GHC.Prim.Addr#
       -> GHC.Prim.State# GHC.Prim.RealWorld
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 7,
     Strictness: <L,U(U,U,U)><L,U(U,U,U)><L,U(U,U,U)><L,C(C1(U(U,U)))><S,U><S,U><S,U>,
     Inline: [2] -}
400c5ed787444580ba62a89bc869a812
  $wgeneRectMat ::
    GHC.Types.IO Data.ByteString.Internal.ByteString
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Network.Wai.Internal.ResponseReceived #)
  {- Arity: 3,
     Strictness: <C(S(SL)),1*C1(U(U,U(U,U,U,U)))><L,1*C1(C1(U(U,U)))><S,U>,
     Inline: [2] -}
87a8665e711e849ab6b4ad89551354a1
  $wgo :: [WaiLib.ClientId] -> GHC.Prim.Int# -> WaiLib.ClientId
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>m,
     Inline: [2] -}
4b07c735a5be7d95012e5c866ab99b39
  $wgo1 :: [WaiLib.ClientId] -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>, Inline: [2] -}
22c9482a82f9b1e92221dcc31c442c0c
  $wgo2 ::
    [(GHC.Base.String, [GHC.Base.String])]
    -> (# [GHC.Base.String], [[GHC.Base.String]] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [2] -}
9eb1a915b16bc7fd3b585e434c57934b
  $wgo3 ::
    GHC.Prim.Int#
    -> Data.Set.Internal.Set [GHC.Base.String]
    -> [[GHC.Base.String]]
    -> Data.Set.Internal.Set [GHC.Base.String]
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [2] -}
89fb3ed5eabf182c6f64632a034a23c2
  $whref :: GHC.Base.String -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <L,U><L,1*U>, Inline: [2],
     Unfolding: (\ (w :: GHC.Base.String) (w1 :: GHC.Base.String) ->
                 GHC.CString.unpackAppendCString#
                   WaiLib.genePDF10
                   (GHC.Base.++
                      @ GHC.Types.Char
                      w
                      (GHC.CString.unpackAppendCString#
                         WaiLib.genePDF9
                         (case System.FilePath.Posix.$wsplitExtension
                                 (System.FilePath.Posix.takeFileName w) of ww { (#,#) ww1 ww2 ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            ww1
                            (GHC.CString.unpackAppendCString#
                               WaiLib.genePDF8
                               (GHC.Base.++ @ GHC.Types.Char w1 WaiLib.genePDF6)) })))) -}
19f7584c522b5cb6aa80d72bf6eaa6e7
  $winsertDatabase ::
    Database.SQLite.Simple.Internal.Connection
    -> Network.HTTP.Types.Method.Method
    -> Network.HTTP.Types.Header.RequestHeaders
    -> GHC.Types.IO Data.ByteString.Internal.ByteString
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Network.Wai.Internal.ResponseReceived #)
  {- Arity: 6,
     Strictness: <L,U(U)><L,1*U(U,U,U,U)><S,1*U><L,C(U(U,1*U(U,U,U,U)))><L,1*C1(C1(U(U,U)))><S,U>,
     Inline: [2] -}
9b9fadd7740e60122f62f579541ebbf0
  $wlisten ::
    GHC.Types.IO ()
    -> GHC.Types.IO (GHC.Maybe.Maybe Network.WebSockets.Types.Message)
    -> ([Network.WebSockets.Types.Message] -> GHC.Types.IO ())
    -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
    -> WaiLib.ClientId
    -> GHC.MVar.MVar WaiLib.State
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,C(U(U,A))><C(S(SS)),C(U(U,1*U))><L,C(C1(U(U,A)))><S,U><L,U(U)><L,U(U)><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.IO ())
                   (ww1 :: GHC.Types.IO
                             (GHC.Maybe.Maybe Network.WebSockets.Types.Message))
                   (ww2 :: [Network.WebSockets.Types.Message] -> GHC.Types.IO ())
                   (ww3 :: GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool)
                   (w :: WaiLib.ClientId)
                   (w1 :: GHC.MVar.MVar WaiLib.State)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 letrec {
                   a' :: GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                     <join 1> {- Arity: 1, Strictness: <S,U> -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     case Network.WebSockets.Connection.$wreceiveDataMessage
                            ww
                            ww1
                            ww2
                            ww3
                            s of ds5 { (#,#) ipv ipv1 ->
                     case w1 of ww4 { GHC.MVar.MVar ww5 ->
                     case WaiLib.$wbroadcast
                            w
                            ww5
                            (Network.WebSockets.Types.$fWebSocketsDataText_$cfromDataMessage
                               ipv1)
                            ipv of ds6 { (#,#) ipv2 ipv3 ->
                     a' ipv2 } } }
                 } in
                 a' w2) -}
9182f008f8f178be3691c07fc4c1b55e
  $wlvl ::
    [GHC.Types.Char]
    -> GHC.Integer.Type.Integer
    -> (# GHC.Types.Char, [GHC.Types.Char] #)
  {- Arity: 2, Strictness: <L,1*U><L,U>, Inline: [2],
     Unfolding: (\ (ww :: [GHC.Types.Char])
                   (ww1 :: GHC.Integer.Type.Integer) ->
                 (# GHC.Show.$fShow(,)4,
                    GHC.Types.:
                      @ GHC.Types.Char
                      GHC.Show.$fShow(,)3
                      (GHC.Show.showLitString
                         ww
                         (GHC.Types.:
                            @ GHC.Types.Char
                            GHC.Show.$fShow(,)3
                            (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.showList__1
                               (GHC.Show.$fShow(,)_$sgo1
                                  WaiLib.readCmd6
                                  (\ (w2 :: GHC.Base.String)[OneShot] ->
                                   case GHC.Show.$w$cshowsPrec4 0# ww1 w2 of ww2 { (#,#) ww3 ww4 ->
                                   GHC.Types.: @ GHC.Types.Char ww3 ww4 })
                                  (GHC.Types.[] @ GHC.Show.ShowS))))) #)) -}
95fd2a179171cd79daeb2cc6e57f71b0
  $wlvl1 ::
    GHC.Types.IO Data.ByteString.Internal.ByteString
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Lazy.Internal.ByteString #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SS(LLLS))),C(U(U,1*U(U,U,U,U)))><S,U>,
     Unfolding: (\ (w :: GHC.Types.IO
                           Data.ByteString.Internal.ByteString)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 letrec {
                   loop :: ([Data.ByteString.Internal.ByteString]
                            -> [Data.ByteString.Internal.ByteString])
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                 Data.ByteString.Lazy.Internal.ByteString #)
                     <join 2> {- Arity: 2, Strictness: <L,1*C1(U)><S,U> -}
                   = \ (front :: [Data.ByteString.Internal.ByteString]
                                 -> [Data.ByteString.Internal.ByteString])
                       (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     case w `cast`
                          (GHC.Types.N:IO[0] <Data.ByteString.Internal.ByteString>_R)
                            eta1 of ds5 { (#,#) ipv ipv1 ->
                     case ipv1 of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                     case GHC.Prim.<=# dt3 0# of lwild {
                       DEFAULT
                       -> loop
                            (\ (x :: [Data.ByteString.Internal.ByteString])[OneShot] ->
                             front (GHC.Types.: @ Data.ByteString.Internal.ByteString wild x))
                            ipv
                       1#
                       -> (# ipv,
                             Data.ByteString.Lazy.fromChunks_go
                               (front
                                  (GHC.Types.[] @ Data.ByteString.Internal.ByteString)) #) } } }
                 } in
                 loop (GHC.Base.id @ [Data.ByteString.Internal.ByteString]) eta) -}
30591d2e0b318bd3a60c69df5944933c
  $wlvl2 ::
    [(GHC.Base.String, [GHC.Base.String])]
    -> (# GHC.Base.String, [[GHC.Base.String]] #)
  {- Arity: 1, Strictness: <L,1*U>, Inline: [2],
     Unfolding: (\ (w :: [(GHC.Base.String, [GHC.Base.String])]) ->
                 let {
                   x :: ([GHC.Base.String], [[GHC.Base.String]])
                   = case WaiLib.$wgo2 w of ww { (#,#) ww1 ww2 -> (ww1, ww2) }
                 } in
                 (# case x of wild { (,) x1 ds5 ->
                    GHC.List.head @ GHC.Base.String x1 },
                    case x of wild { (,) ds5 y ->
                    Data.Set.Internal.$fDataSet_go
                      @ [GHC.Base.String]
                      (GHC.Types.[] @ [GHC.Base.String])
                      (WaiLib.$sfromList y) } #)) -}
cd47d5d5d426857a240ca0f06c208705
  $wnextId :: WaiLib.State -> GHC.Prim.Int#
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [2],
     Unfolding: (\ (w :: WaiLib.State) ->
                 case GHC.Base.map
                        @ (WaiLib.ClientId, Network.WebSockets.Connection.Connection)
                        @ GHC.Types.Int
                        (Data.Tuple.fst
                           @ WaiLib.ClientId
                           @ Network.WebSockets.Connection.Connection)
                        w of wild {
                   [] -> 0#
                   : ds5 ds6
                   -> case ds5 of ww { GHC.Types.I# ww1 ->
                      WaiLib.$wgo1 ds6 ww1 } }) -}
9abdb9f0e8fffa4ab1933506ca2c6bf0
  $wpoly_go1 ::
    GHC.Prim.Word#
    -> GHC.Base.String
    -> GHC.Prim.Int#
    -> Data.HashMap.Base.HashMap GHC.Base.String v
    -> Data.HashMap.Base.HashMap GHC.Base.String v
  {- Arity: 4, Strictness: <L,U><S,1*U><L,U><S,1*U>, Inline: [2] -}
aeeea64962b5d33c4b02ecb4885398bb
  $wpoly_go2 ::
    GHC.Base.String
    -> Data.HashMap.Array.Array#
         (Data.HashMap.Base.Leaf GHC.Base.String v)
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Maybe.Maybe GHC.Types.Int
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><S,U><S,U>,
     Inline: [2] -}
baded4cfc738212713a13381420feecb
  $wpoly_go3 ::
    GHC.Prim.Word#
    -> GHC.Base.String
    -> v
    -> GHC.Prim.Int#
    -> Data.HashMap.Base.HashMap GHC.Base.String v
    -> Data.HashMap.Base.HashMap GHC.Base.String v
  {- Arity: 5, Strictness: <S,U><S,1*U><L,U><L,U><S,1*U>,
     Inline: [2] -}
1a33bc95bcb1e3f3cca4c2d7cb6d8475
  $wqueryLibHaskell ::
    GHC.Base.String
    -> (# Network.HTTP.Types.Status.Status,
          Network.HTTP.Types.Header.ResponseHeaders,
          Network.Wai.Internal.StreamingBody #)
  {- Arity: 1, Strictness: <L,U>, Inline: [2] -}
504f2facc526de5f163bc2df6545e889
  $wqueryLibJava ::
    GHC.Base.String
    -> (# Network.HTTP.Types.Status.Status,
          Network.HTTP.Types.Header.ResponseHeaders,
          Network.Wai.Internal.StreamingBody #)
  {- Arity: 1, Strictness: <L,U>, Inline: [2] -}
1f7d4ed0f62dfaf45cc293a688d8413f
  $wreceiveCode ::
    GHC.Types.IO Data.ByteString.Internal.ByteString
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Network.Wai.Internal.ResponseReceived #)
  {- Arity: 3,
     Strictness: <C(S(SL)),1*C1(U(U,1*U(U,U,U,U)))><L,C(C1(U(U,U)))><S,U>,
     Inline: [2] -}
27cd63aa60ea79194c9d9797aa1e026e
  $wreceiveCode2 ::
    GHC.Types.IO Data.ByteString.Internal.ByteString
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Network.Wai.Internal.ResponseReceived #)
  {- Arity: 3,
     Strictness: <C(S(SL)),1*C1(U(U,1*U(U,U,U,U)))><L,C(C1(U(U,U)))><S,U>,
     Inline: [2] -}
bac93e06ffba03fa8b29ad11ac1b8777
  $wresponseCmd ::
    Database.SQLite.Simple.Internal.Connection
    -> GHC.Base.String
    -> (# Network.HTTP.Types.Status.Status,
          Network.HTTP.Types.Header.ResponseHeaders,
          Network.Wai.Internal.StreamingBody #)
  {- Arity: 2, Strictness: <L,U(U)><L,1*U>, Inline: [2] -}
6646b8e45483af3300af7ac4f8ca83c2
  $wresponseHaskellHtml ::
    GHC.Base.String
    -> (# Network.HTTP.Types.Status.Status,
          Network.HTTP.Types.Header.ResponseHeaders,
          Network.Wai.Internal.StreamingBody #)
  {- Arity: 1, Strictness: <L,1*U>, Inline: [2],
     Unfolding: (\ (w :: GHC.Base.String) ->
                 let {
                   tcmd :: GHC.Base.String = AronModule.trim w
                 } in
                 let {
                   lvl286 :: GHC.IO.Handle.Types.Handle -> GHC.Types.IO ()
                     {- Arity: 1, Strictness: <L,U>,
                        Unfolding: InlineRule (1, True, False)
                                   (\ (hdl :: GHC.IO.Handle.Types.Handle)[OneShot] ->
                                    GHC.IO.Handle.Text.hPutStr'
                                      hdl
                                      (Data.OldList.unlines
                                         (GHC.Types.:
                                            @ GHC.Base.String
                                            tcmd
                                            (GHC.Types.[] @ GHC.Base.String)))
                                      GHC.Types.False) -}
                   = \ (hdl :: GHC.IO.Handle.Types.Handle)[OneShot] ->
                     GHC.IO.Handle.Text.hPutStr'
                       hdl
                       (Data.OldList.unlines
                          (GHC.Types.:
                             @ GHC.Base.String
                             tcmd
                             (GHC.Types.[] @ GHC.Base.String)))
                       GHC.Types.False
                 } in
                 let {
                   lvl287 :: [GHC.Types.Char]
                   = GHC.CString.unpackAppendCString#
                       WaiLib.responseHaskellHtml2
                       (GHC.CString.unpackAppendCString#
                          WaiLib.responseHaskellHtml1
                          (AronModule.trim (WaiLib.$wunsafeDrop @ GHC.Types.Char 2# tcmd)))
                 } in
                 (# Network.HTTP.Types.Status.status200, WaiLib.insertinfo3,
                    (\ (write :: Data.ByteString.Builder.Internal.Builder
                                 -> GHC.Types.IO ())
                       (flush :: GHC.Types.IO ())
                       (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     case AronModule.compileHaskellToBin8
                            lvl287
                            eta of ds5 { (#,#) ipv ipv1 ->
                     case System.IO.appendFile2
                            @ ()
                            WaiLib.cmdLog
                            GHC.IO.IOMode.AppendMode
                            lvl286
                            ipv of ds6 { (#,#) ipv2 ipv3 ->
                     case WaiLib.readCmd1
                            WaiLib.cmdLog
                            WaiLib.HaskellT
                            ipv2 of ds7 { (#,#) ipv4 ipv5 ->
                     case (write
                             (let {
                                bs1 :: Data.ByteString.Internal.ByteString
                                = AronModule.strToStrictByteString
                                    (WaiLib.replyHtml (WaiLib.responseHaskellHtml_go ipv1) ipv5)
                              } in
                              (\ @ r
                                 (k :: Data.ByteString.Builder.Internal.BuildStep r)
                                 (br :: Data.ByteString.Builder.Internal.BufferRange)
                                 (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                               case bs1 of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                               case k of k1 { DEFAULT ->
                               case br of wild1 { Data.ByteString.Builder.Internal.BufferRange dt4 dt5 ->
                               case GHC.Prim.<=# dt3 8160# of lwild {
                                 DEFAULT
                                 -> (# eta1,
                                       Data.ByteString.Builder.Internal.InsertChunk
                                         @ r
                                         dt4
                                         wild
                                         k1 #)
                                 1#
                                 -> let {
                                      op' :: GHC.Prim.Addr# = GHC.Prim.plusAddr# dt4 dt3
                                    } in
                                    let {
                                      ip :: GHC.Prim.Addr# = GHC.Prim.plusAddr# dt dt2
                                    } in
                                    case GHC.Prim.ltAddr# dt5 op' of lwild1 {
                                      DEFAULT
                                      -> case {__pkg_ccall base-4.12.0.0 GHC.Prim.Addr#
                                                                         -> GHC.Prim.Addr#
                                                                         -> GHC.Prim.Word#
                                                                         -> GHC.Prim.State#
                                                                              GHC.Prim.RealWorld
                                                                         -> (# GHC.Prim.State#
                                                                                 GHC.Prim.RealWorld,
                                                                               GHC.Prim.Addr# #)}
                                                dt4
                                                ip
                                                (GHC.Prim.int2Word# dt3)
                                                eta1 of wild3 { (#,#) ds8 ds9 ->
                                         case GHC.Prim.touch#
                                                @ 'GHC.Types.LiftedRep
                                                @ GHC.ForeignPtr.ForeignPtrContents
                                                dt1
                                                ds8 of s' { DEFAULT ->
                                         (k1 (Data.ByteString.Builder.Internal.BufferRange op' dt5))
                                           `cast`
                                         (GHC.Types.N:IO[0]
                                              <Data.ByteString.Builder.Internal.BuildSignal r>_R)
                                           s' } }
                                      1#
                                      -> Data.ByteString.Builder.Internal.$wwrappedBytesCopyStep
                                           @ r
                                           ip
                                           (GHC.Prim.plusAddr# ip dt3)
                                           (\ (br1 :: Data.ByteString.Builder.Internal.BufferRange)
                                              (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                            case GHC.Prim.touch#
                                                   @ 'GHC.Types.LiftedRep
                                                   @ GHC.ForeignPtr.ForeignPtrContents
                                                   dt1
                                                   s of s' { DEFAULT ->
                                            (k1 br1)
                                              `cast`
                                            (GHC.Types.N:IO[0]
                                                 <Data.ByteString.Builder.Internal.BuildSignal r>_R)
                                              s' })
                                             `cast`
                                           (<Data.ByteString.Builder.Internal.BufferRange>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          <Data.ByteString.Builder.Internal.BuildSignal
                                                             r>_R))
                                           dt4
                                           dt5
                                           eta1 } } } } })
                                `cast`
                              ((forall (r :: <*>_N).
                                <Data.ByteString.Builder.Internal.BuildStep r>_R
                                ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                ->_R Sym (GHC.Types.N:IO[0]
                                              <Data.ByteString.Builder.Internal.BuildSignal
                                                 r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))))
                            `cast`
                          (GHC.Types.N:IO[0] <()>_R)
                            ipv4 of ds8 { (#,#) ipv6 ipv7 ->
                     flush `cast` (GHC.Types.N:IO[0] <()>_R) ipv6 } } } })
                      `cast`
                    (<Data.ByteString.Builder.Internal.Builder -> GHC.Types.IO ()>_R
                     ->_R <GHC.Types.IO ()>_R
                     ->_R Sym (GHC.Types.N:IO[0] <()>_R)) #)) -}
207e9f5bbc69111a5b06e1a324b4b5b7
  $wresponseJavaHtml ::
    GHC.Base.String
    -> (# Network.HTTP.Types.Status.Status,
          Network.HTTP.Types.Header.ResponseHeaders,
          Network.Wai.Internal.StreamingBody #)
  {- Arity: 1, Strictness: <L,1*U>, Inline: [2] -}
5473c196ab7e8d4be2bc9f07277907eb
  $wresponseNothing ::
    GHC.Base.String
    -> (# Network.HTTP.Types.Status.Status,
          Network.HTTP.Types.Header.ResponseHeaders,
          Network.Wai.Internal.StreamingBody #)
  {- Arity: 1, Strictness: <L,U>, Inline: [2],
     Unfolding: (\ (w :: GHC.Base.String) ->
                 let {
                   bs1 :: Data.ByteString.Internal.ByteString
                   = AronModule.strToStrictByteString
                       (GHC.CString.unpackAppendCString# WaiLib.responseNothing1 w)
                 } in
                 let {
                   $wlvl9 :: forall r.
                             Data.ByteString.Builder.Internal.BuildStep r
                             -> GHC.Prim.Addr#
                             -> GHC.Prim.Addr#
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                   Data.ByteString.Builder.Internal.BuildSignal r #)
                     {- Arity: 4, Strictness: <S,1*U><L,U><L,U><S,U>, Inline: [2] -}
                   = \ @ r
                       (w1 :: Data.ByteString.Builder.Internal.BuildStep r)
                       (ww :: GHC.Prim.Addr#)[OneShot]
                       (ww1 :: GHC.Prim.Addr#)[OneShot]
                       (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     case bs1 of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                     case w1 of k1 { DEFAULT ->
                     case GHC.Prim.<=# dt3 8160# of lwild {
                       DEFAULT
                       -> (# w2,
                             Data.ByteString.Builder.Internal.InsertChunk @ r ww wild k1 #)
                       1#
                       -> let {
                            op' :: GHC.Prim.Addr# = GHC.Prim.plusAddr# ww dt3
                          } in
                          let {
                            ip :: GHC.Prim.Addr# = GHC.Prim.plusAddr# dt dt2
                          } in
                          case GHC.Prim.ltAddr# ww1 op' of lwild1 {
                            DEFAULT
                            -> case {__pkg_ccall base-4.12.0.0 GHC.Prim.Addr#
                                                               -> GHC.Prim.Addr#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld,
                                                                     GHC.Prim.Addr# #)}
                                      ww
                                      ip
                                      (GHC.Prim.int2Word# dt3)
                                      w2 of wild3 { (#,#) ds5 ds6 ->
                               case GHC.Prim.touch#
                                      @ 'GHC.Types.LiftedRep
                                      @ GHC.ForeignPtr.ForeignPtrContents
                                      dt1
                                      ds5 of s' { DEFAULT ->
                               (k1 (Data.ByteString.Builder.Internal.BufferRange op' ww1))
                                 `cast`
                               (GHC.Types.N:IO[0]
                                    <Data.ByteString.Builder.Internal.BuildSignal r>_R)
                                 s' } }
                            1#
                            -> Data.ByteString.Builder.Internal.$wwrappedBytesCopyStep
                                 @ r
                                 ip
                                 (GHC.Prim.plusAddr# ip dt3)
                                 (\ (br1 :: Data.ByteString.Builder.Internal.BufferRange)
                                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.touch#
                                         @ 'GHC.Types.LiftedRep
                                         @ GHC.ForeignPtr.ForeignPtrContents
                                         dt1
                                         s of s' { DEFAULT ->
                                  (k1 br1)
                                    `cast`
                                  (GHC.Types.N:IO[0]
                                       <Data.ByteString.Builder.Internal.BuildSignal r>_R)
                                    s' })
                                   `cast`
                                 (<Data.ByteString.Builder.Internal.BufferRange>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                                 ww
                                 ww1
                                 w2 } } } }
                 } in
                 let {
                   lvl286 :: forall r.
                             Data.ByteString.Builder.Internal.BuildStep r
                             -> Data.ByteString.Builder.Internal.BufferRange
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                   Data.ByteString.Builder.Internal.BuildSignal r #)
                     {- Arity: 3, Strictness: <S,1*U><S(SS),1*U(U,U)><S,U>, Inline: [2],
                        Unfolding: InlineRule (3, True, False)
                                   (\ @ r
                                      (w1 :: Data.ByteString.Builder.Internal.BuildStep r)
                                      (w2 :: Data.ByteString.Builder.Internal.BufferRange)
                                      (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                    case w2 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                                    $wlvl9 @ r w1 ww1 ww2 w3 }) -}
                   = \ @ r
                       (w1 :: Data.ByteString.Builder.Internal.BuildStep r)
                       (w2 :: Data.ByteString.Builder.Internal.BufferRange)
                       (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     case w2 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                     $wlvl9 @ r w1 ww1 ww2 w3 }
                 } in
                 (# Network.HTTP.Types.Status.status200, WaiLib.responseHtml1,
                    \ (write :: Data.ByteString.Builder.Internal.Builder
                                -> GHC.Types.IO ())
                      (flush :: GHC.Types.IO ()) ->
                    write
                      lvl286
                        `cast`
                      ((forall (r :: <*>_N).
                        <Data.ByteString.Builder.Internal.BuildStep r>_R
                        ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <Data.ByteString.Builder.Internal.BuildSignal
                                         r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0])) #)) -}
46ab3ff7e12ee6a3f7a06373d3548af3
  $wresponseNothingBS ::
    Data.ByteString.Internal.ByteString
    -> (# Network.HTTP.Types.Status.Status,
          Network.HTTP.Types.Header.ResponseHeaders,
          Network.Wai.Internal.StreamingBody #)
  {- Arity: 1, Strictness: <L,U(U,U,U,U)>, Inline: [2],
     Unfolding: (\ (w :: Data.ByteString.Internal.ByteString) ->
                 let {
                   $wlvl9 :: forall r.
                             Data.ByteString.Builder.Internal.BuildStep r
                             -> GHC.Prim.Addr#
                             -> GHC.Prim.Addr#
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                   Data.ByteString.Builder.Internal.BuildSignal r #)
                     {- Arity: 4, Strictness: <S,1*U><L,U><L,U><S,U>, Inline: [2] -}
                   = \ @ r
                       (w1 :: Data.ByteString.Builder.Internal.BuildStep r)
                       (ww :: GHC.Prim.Addr#)[OneShot]
                       (ww1 :: GHC.Prim.Addr#)[OneShot]
                       (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     case w of wild { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                     case w1 of k1 { DEFAULT ->
                     case GHC.Prim.<=# dt3 8160# of lwild {
                       DEFAULT
                       -> (# w2,
                             Data.ByteString.Builder.Internal.InsertChunk @ r ww wild k1 #)
                       1#
                       -> let {
                            op' :: GHC.Prim.Addr# = GHC.Prim.plusAddr# ww dt3
                          } in
                          let {
                            ip :: GHC.Prim.Addr# = GHC.Prim.plusAddr# dt dt2
                          } in
                          case GHC.Prim.ltAddr# ww1 op' of lwild1 {
                            DEFAULT
                            -> case {__pkg_ccall base-4.12.0.0 GHC.Prim.Addr#
                                                               -> GHC.Prim.Addr#
                                                               -> GHC.Prim.Word#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld,
                                                                     GHC.Prim.Addr# #)}
                                      ww
                                      ip
                                      (GHC.Prim.int2Word# dt3)
                                      w2 of wild3 { (#,#) ds5 ds6 ->
                               case GHC.Prim.touch#
                                      @ 'GHC.Types.LiftedRep
                                      @ GHC.ForeignPtr.ForeignPtrContents
                                      dt1
                                      ds5 of s' { DEFAULT ->
                               (k1 (Data.ByteString.Builder.Internal.BufferRange op' ww1))
                                 `cast`
                               (GHC.Types.N:IO[0]
                                    <Data.ByteString.Builder.Internal.BuildSignal r>_R)
                                 s' } }
                            1#
                            -> Data.ByteString.Builder.Internal.$wwrappedBytesCopyStep
                                 @ r
                                 ip
                                 (GHC.Prim.plusAddr# ip dt3)
                                 (\ (br1 :: Data.ByteString.Builder.Internal.BufferRange)
                                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case GHC.Prim.touch#
                                         @ 'GHC.Types.LiftedRep
                                         @ GHC.ForeignPtr.ForeignPtrContents
                                         dt1
                                         s of s' { DEFAULT ->
                                  (k1 br1)
                                    `cast`
                                  (GHC.Types.N:IO[0]
                                       <Data.ByteString.Builder.Internal.BuildSignal r>_R)
                                    s' })
                                   `cast`
                                 (<Data.ByteString.Builder.Internal.BufferRange>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                                 ww
                                 ww1
                                 w2 } } } }
                 } in
                 let {
                   lvl286 :: forall r.
                             Data.ByteString.Builder.Internal.BuildStep r
                             -> Data.ByteString.Builder.Internal.BufferRange
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                   Data.ByteString.Builder.Internal.BuildSignal r #)
                     {- Arity: 3, Strictness: <S,1*U><S(SS),1*U(U,U)><S,U>, Inline: [2],
                        Unfolding: InlineRule (3, True, False)
                                   (\ @ r
                                      (w1 :: Data.ByteString.Builder.Internal.BuildStep r)
                                      (w2 :: Data.ByteString.Builder.Internal.BufferRange)
                                      (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                    case w2 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                                    $wlvl9 @ r w1 ww1 ww2 w3 }) -}
                   = \ @ r
                       (w1 :: Data.ByteString.Builder.Internal.BuildStep r)
                       (w2 :: Data.ByteString.Builder.Internal.BufferRange)
                       (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     case w2 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                     $wlvl9 @ r w1 ww1 ww2 w3 }
                 } in
                 (# Network.HTTP.Types.Status.status200, WaiLib.responseNothingBS1,
                    \ (write :: Data.ByteString.Builder.Internal.Builder
                                -> GHC.Types.IO ())
                      (flush :: GHC.Types.IO ()) ->
                    write
                      lvl286
                        `cast`
                      ((forall (r :: <*>_N).
                        <Data.ByteString.Builder.Internal.BuildStep r>_R
                        ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <Data.ByteString.Builder.Internal.BuildSignal
                                         r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0])) #)) -}
1ebdd0c007290d07499e8133f52fb4df
  $wresponseSnippet ::
    Database.SQLite.Simple.Internal.Connection
    -> GHC.Base.String
    -> GHC.IORef.IORef WaiLib.HMap
    -> (# Network.HTTP.Types.Status.Status,
          Network.HTTP.Types.Header.ResponseHeaders,
          Network.Wai.Internal.StreamingBody #)
  {- Arity: 3, Strictness: <L,U(U)><L,U><L,U(U)>, Inline: [2] -}
28b28a877b5515763c93e7bdca09c014
  $wresponseSnippetTxt ::
    GHC.Base.String
    -> GHC.IORef.IORef WaiLib.HMap
    -> (# Network.HTTP.Types.Status.Status,
          Network.HTTP.Types.Header.ResponseHeaders,
          Network.Wai.Internal.StreamingBody #)
  {- Arity: 2, Strictness: <L,U><L,U(U)>, Inline: [2],
     Unfolding: (\ (w :: GHC.Base.String)
                   (w1 :: GHC.IORef.IORef WaiLib.HMap) ->
                 let {
                   sCmd :: GHC.Base.String = AronModule.trim w
                 } in
                 let {
                   lvl286 :: Data.ByteString.Internal.ByteString
                   = AronModule.strToStrictByteString
                       (WaiLib.$wunsafeDrop @ GHC.Types.Char 2# sCmd)
                 } in
                 let {
                   lvl287 :: GHC.Maybe.Maybe Data.ByteString.Internal.ByteString
                   = GHC.Maybe.Just @ Data.ByteString.Internal.ByteString lvl286
                 } in
                 let {
                   lvl288 :: GHC.IO.Handle.Types.Handle -> GHC.Types.IO ()
                     {- Arity: 1, Strictness: <L,U>,
                        Unfolding: InlineRule (1, True, False)
                                   (\ (hdl :: GHC.IO.Handle.Types.Handle)[OneShot] ->
                                    GHC.IO.Handle.Text.hPutStr'
                                      hdl
                                      (Data.OldList.unlines
                                         (GHC.Types.:
                                            @ GHC.Base.String
                                            sCmd
                                            (GHC.Types.[] @ GHC.Base.String)))
                                      GHC.Types.False) -}
                   = \ (hdl :: GHC.IO.Handle.Types.Handle)[OneShot] ->
                     GHC.IO.Handle.Text.hPutStr'
                       hdl
                       (Data.OldList.unlines
                          (GHC.Types.:
                             @ GHC.Base.String
                             sCmd
                             (GHC.Types.[] @ GHC.Base.String)))
                       GHC.Types.False
                 } in
                 (# Network.HTTP.Types.Status.status200, WaiLib.insertinfo3,
                    (\ (write :: Data.ByteString.Builder.Internal.Builder
                                 -> GHC.Types.IO ())
                       (flush :: GHC.Types.IO ())
                       (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     case (GHC.IO.Handle.Text.hPutStr'
                             GHC.IO.Handle.FD.stdout
                             w
                             GHC.Types.True)
                            `cast`
                          (GHC.Types.N:IO[0] <()>_R)
                            eta of ds5 { (#,#) ipv ipv1 ->
                     case System.IO.appendFile2
                            @ ()
                            WaiLib.cmdLog
                            GHC.IO.IOMode.AppendMode
                            lvl288
                            ipv of ds6 { (#,#) ipv2 ipv3 ->
                     case w1
                            `cast`
                          (GHC.IORef.N:IORef[0] <WaiLib.HMap>_N) of wild { GHC.STRef.STRef var# ->
                     case GHC.Prim.readMutVar#
                            @ GHC.Prim.RealWorld
                            @ WaiLib.HMap
                            var#
                            ipv2 of ds7 { (#,#) ipv4 ipv5 ->
                     case (write
                             (let {
                                bs1 :: Data.ByteString.Internal.ByteString
                                = AronModule.strToStrictByteString (WaiLib.spanBlockXX ipv5 lvl287)
                              } in
                              (\ @ r
                                 (k :: Data.ByteString.Builder.Internal.BuildStep r)
                                 (br :: Data.ByteString.Builder.Internal.BufferRange)
                                 (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                               case bs1 of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                               case k of k1 { DEFAULT ->
                               case br of wild2 { Data.ByteString.Builder.Internal.BufferRange dt4 dt5 ->
                               case GHC.Prim.<=# dt3 8160# of lwild {
                                 DEFAULT
                                 -> (# eta1,
                                       Data.ByteString.Builder.Internal.InsertChunk
                                         @ r
                                         dt4
                                         wild1
                                         k1 #)
                                 1#
                                 -> let {
                                      op' :: GHC.Prim.Addr# = GHC.Prim.plusAddr# dt4 dt3
                                    } in
                                    let {
                                      ip :: GHC.Prim.Addr# = GHC.Prim.plusAddr# dt dt2
                                    } in
                                    case GHC.Prim.ltAddr# dt5 op' of lwild1 {
                                      DEFAULT
                                      -> case {__pkg_ccall base-4.12.0.0 GHC.Prim.Addr#
                                                                         -> GHC.Prim.Addr#
                                                                         -> GHC.Prim.Word#
                                                                         -> GHC.Prim.State#
                                                                              GHC.Prim.RealWorld
                                                                         -> (# GHC.Prim.State#
                                                                                 GHC.Prim.RealWorld,
                                                                               GHC.Prim.Addr# #)}
                                                dt4
                                                ip
                                                (GHC.Prim.int2Word# dt3)
                                                eta1 of wild3 { (#,#) ds8 ds9 ->
                                         case GHC.Prim.touch#
                                                @ 'GHC.Types.LiftedRep
                                                @ GHC.ForeignPtr.ForeignPtrContents
                                                dt1
                                                ds8 of s' { DEFAULT ->
                                         (k1 (Data.ByteString.Builder.Internal.BufferRange op' dt5))
                                           `cast`
                                         (GHC.Types.N:IO[0]
                                              <Data.ByteString.Builder.Internal.BuildSignal r>_R)
                                           s' } }
                                      1#
                                      -> Data.ByteString.Builder.Internal.$wwrappedBytesCopyStep
                                           @ r
                                           ip
                                           (GHC.Prim.plusAddr# ip dt3)
                                           (\ (br1 :: Data.ByteString.Builder.Internal.BufferRange)
                                              (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                            case GHC.Prim.touch#
                                                   @ 'GHC.Types.LiftedRep
                                                   @ GHC.ForeignPtr.ForeignPtrContents
                                                   dt1
                                                   s of s' { DEFAULT ->
                                            (k1 br1)
                                              `cast`
                                            (GHC.Types.N:IO[0]
                                                 <Data.ByteString.Builder.Internal.BuildSignal r>_R)
                                              s' })
                                             `cast`
                                           (<Data.ByteString.Builder.Internal.BufferRange>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          <Data.ByteString.Builder.Internal.BuildSignal
                                                             r>_R))
                                           dt4
                                           dt5
                                           eta1 } } } } })
                                `cast`
                              ((forall (r :: <*>_N).
                                <Data.ByteString.Builder.Internal.BuildStep r>_R
                                ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                ->_R Sym (GHC.Types.N:IO[0]
                                              <Data.ByteString.Builder.Internal.BuildSignal
                                                 r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))))
                            `cast`
                          (GHC.Types.N:IO[0] <()>_R)
                            ipv4 of ds8 { (#,#) ipv6 ipv7 ->
                     flush `cast` (GHC.Types.N:IO[0] <()>_R) ipv6 } } } } })
                      `cast`
                    (<Data.ByteString.Builder.Internal.Builder -> GHC.Types.IO ()>_R
                     ->_R <GHC.Types.IO ()>_R
                     ->_R Sym (GHC.Types.N:IO[0] <()>_R)) #)) -}
022b139eb954db8ef7b3109396889088
  $wresponseXCmd ::
    GHC.Base.String
    -> (# Network.HTTP.Types.Status.Status,
          Network.HTTP.Types.Header.ResponseHeaders,
          Network.Wai.Internal.StreamingBody #)
  {- Arity: 1, Strictness: <L,1*U>, Inline: [2] -}
f17d399df7d77dfa26e8acf423dc757d
  $wsearchMap ::
    Network.HTTP.Types.Header.RequestHeaders
    -> GHC.Types.IO Data.ByteString.Internal.ByteString
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Network.Wai.Internal.ResponseReceived #)
  {- Arity: 4,
     Strictness: <S,1*U><L,C(U(U,1*U(U,U,U,U)))><L,1*C1(C1(U(U,U)))><S,U>,
     Inline: [2],
     Unfolding: (\ (ww :: Network.HTTP.Types.Header.RequestHeaders)
                   (ww1 :: GHC.Types.IO Data.ByteString.Internal.ByteString)
                   (w :: Network.Wai.Internal.Response
                         -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 let {
                   $w$j :: GHC.Prim.State# GHC.Prim.RealWorld
                           -> [Network.Wai.Parse.Param]
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                 Network.Wai.Internal.ResponseReceived #)
                     <join 2> {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [2] -}
                   = \ (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot]
                       (ww2 :: [Network.Wai.Parse.Param])[OneShot] ->
                     case GHC.List.lookup
                            @ Data.ByteString.Internal.ByteString
                            @ Data.ByteString.Internal.ByteString
                            Data.ByteString.Internal.$fEqByteString
                            WaiLib.searchMap18
                            ww2 of wild {
                       GHC.Maybe.Nothing
                       -> (w WaiLib.searchMap11)
                            `cast`
                          (GHC.Types.N:IO[0] <Network.Wai.Internal.ResponseReceived>_R)
                            w2
                       GHC.Maybe.Just ds5
                       -> case ds5 of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                          case WaiLib.searchMap18 of wild2 { Data.ByteString.Internal.PS dt4 dt5 dt6 dt7 ->
                          case GHC.Prim./=# dt3 dt7 of lwild {
                            DEFAULT
                            -> case GHC.Prim.eqAddr# dt dt4 of lwild1 {
                                 DEFAULT
                                 -> case Data.ByteString.Internal.$wcompareBytes
                                           dt
                                           dt1
                                           dt2
                                           dt3
                                           dt4
                                           dt5
                                           dt6
                                           dt7 of wild3 {
                                      DEFAULT
                                      -> case WaiLib.searchMap10
                                         ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                   Network.Wai.Internal.ResponseReceived #)
                                         of {}
                                      GHC.Types.EQ
                                      -> (w WaiLib.searchMap3)
                                           `cast`
                                         (GHC.Types.N:IO[0]
                                              <Network.Wai.Internal.ResponseReceived>_R)
                                           w2 }
                                 1#
                                 -> case GHC.Prim.==# dt2 dt6 of lwild2 {
                                      DEFAULT
                                      -> case Data.ByteString.Internal.$wcompareBytes
                                                dt
                                                dt1
                                                dt2
                                                dt3
                                                dt4
                                                dt5
                                                dt6
                                                dt7 of wild4 {
                                           DEFAULT
                                           -> case WaiLib.searchMap10
                                              ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                        Network.Wai.Internal.ResponseReceived #)
                                              of {}
                                           GHC.Types.EQ
                                           -> (w WaiLib.searchMap3)
                                                `cast`
                                              (GHC.Types.N:IO[0]
                                                   <Network.Wai.Internal.ResponseReceived>_R)
                                                w2 }
                                      1#
                                      -> (w WaiLib.searchMap3)
                                           `cast`
                                         (GHC.Types.N:IO[0]
                                              <Network.Wai.Internal.ResponseReceived>_R)
                                           w2 } }
                            1#
                            -> case WaiLib.searchMap10
                               ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         Network.Wai.Internal.ResponseReceived #)
                               of {} } } } }
                 } in
                 case Network.Wai.Parse.$wgetRequestBodyType ww of wild {
                   GHC.Maybe.Nothing
                   -> $w$j w1 (GHC.Types.[] @ Network.Wai.Parse.Param)
                   GHC.Maybe.Just rbt
                   -> case Network.Wai.Parse.parseRequestBody2
                             @ Data.ByteString.Lazy.Internal.ByteString
                             Network.Wai.Parse.noLimitParseRequestBodyOptions
                             WaiLib.searchMap2
                             rbt
                             ww1
                             w1 of ds5 { (#,#) ipv ipv1 ->
                      case ipv1 of ww2 { (,) ww3 ww4 -> $w$j ipv ww3 } } }) -}
211274b0e75c365fe877984ceef3f536
  $wsnippetMap ::
    [([GHC.Base.String], [GHC.Base.String])]
    -> GHC.Prim.MutVar# GHC.Prim.RealWorld WaiLib.HMap
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U><S,U><S,U>, Inline: [2],
     Unfolding: (\ (w :: [([GHC.Base.String], [GHC.Base.String])])
                   (ww :: GHC.Prim.MutVar# GHC.Prim.RealWorld WaiLib.HMap)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ WaiLib.HMap
                        ww
                        w1 of ds5 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ WaiLib.HMap
                        ww
                        (WaiLib.insertAll
                           (GHC.Base.map
                              @ [(GHC.Base.String, [GHC.Base.String])]
                              @ (GHC.Base.String, [[GHC.Base.String]])
                              WaiLib.snippetMap4
                              (Data.OldList.groupBy
                                 @ (GHC.Base.String, [GHC.Base.String])
                                 WaiLib.snippetMap3
                                 (AronModule.qqsort
                                    @ (GHC.Base.String, [GHC.Base.String])
                                    WaiLib.snippetMap2
                                    (WaiLib.snippetMap_go w))))
                           ipv1)
                        ipv of s2# { DEFAULT ->
                 (# s2#, GHC.Tuple.() #) } }) -}
8e7025fd583001bc9d4036e983ab4a5f
  $wunsafeDrop :: GHC.Prim.Int# -> [a1] -> [a1]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,1*U>,
     Inline: [2] -}
97aced2a1a9d9076118ef8970e6eefb2
  $wupdateMap ::
    GHC.IORef.IORef WaiLib.HMap
    -> Network.HTTP.Types.Method.Method
    -> Network.HTTP.Types.Header.RequestHeaders
    -> GHC.Types.IO Data.ByteString.Internal.ByteString
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Network.Wai.Internal.ResponseReceived #)
  {- Arity: 6,
     Strictness: <L,1*U(U)><L,1*U(U,U,U,U)><S,1*U><L,C(U(U,1*U(U,U,U,U)))><L,C(C1(U(U,U)))><S,U>,
     Inline: [2] -}
1b9772f4ff7dea6446a9dca9155556d5
  $wupload ::
    GHC.Base.String
    -> Network.HTTP.Types.Header.RequestHeaders
    -> GHC.Types.IO Data.ByteString.Internal.ByteString
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Network.Wai.Internal.ResponseReceived #)
  {- Arity: 5,
     Strictness: <L,1*U><S,1*U><L,C(U(U,1*U(U,U,U,U)))><L,1*C1(C1(U(U,U)))><S,U>,
     Inline: [2],
     Unfolding: (\ (w :: GHC.Base.String)
                   (ww :: Network.HTTP.Types.Header.RequestHeaders)
                   (ww1 :: GHC.Types.IO Data.ByteString.Internal.ByteString)
                   (w1 :: Network.Wai.Internal.Response
                          -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 let {
                   $w$j :: GHC.Prim.State# GHC.Prim.RealWorld
                           -> [Network.Wai.Parse.File
                                 Data.ByteString.Lazy.Internal.ByteString]
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                 Network.Wai.Internal.ResponseReceived #)
                     <join 2> {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [2] -}
                   = \ (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot]
                       (ww2 :: [Network.Wai.Parse.File
                                  Data.ByteString.Lazy.Internal.ByteString])[OneShot] ->
                     case GHC.List.lookup
                            @ Data.ByteString.Internal.ByteString
                            @ (Network.Wai.Parse.FileInfo
                                 Data.ByteString.Lazy.Internal.ByteString)
                            Data.ByteString.Internal.$fEqByteString
                            WaiLib.upload8
                            ww2 of wild {
                       GHC.Maybe.Nothing
                       -> (w1 WaiLib.upload4)
                            `cast`
                          (GHC.Types.N:IO[0] <Network.Wai.Internal.ResponseReceived>_R)
                            w3
                       GHC.Maybe.Just file
                       -> let {
                            name :: GHC.IO.FilePath
                            = case System.FilePath.Posix.$wsplitFileName_
                                     (case file of wild1 { Network.Wai.Parse.FileInfo ds5 ds6 ds7 ->
                                      case ds5 of ww3 { Data.ByteString.Internal.PS ww4 ww5 ww6 ww7 ->
                                      Data.ByteString.Internal.$wunpackAppendCharsLazy
                                        ww4
                                        ww5
                                        ww6
                                        ww7
                                        (GHC.Types.[]
                                           @ GHC.Types.Char) } }) of ww3 { (#,#) ww4 ww5 ->
                              ww5 }
                          } in
                          case System.IO.appendFile2
                                 @ ()
                                 WaiLib.upload2
                                 GHC.IO.IOMode.WriteMode
                                 (\ (hdl :: GHC.IO.Handle.Types.Handle)[OneShot] ->
                                  GHC.IO.Handle.Text.hPutStr'
                                    hdl
                                    (Data.OldList.unlines
                                       (GHC.Types.:
                                          @ GHC.Base.String
                                          name
                                          (GHC.Types.[] @ GHC.Base.String)))
                                    GHC.Types.False)
                                 w3 of ds5 { (#,#) ipv ipv1 ->
                          case System.IO.withBinaryFile1
                                 @ ()
                                 (GHC.Base.++ @ GHC.Types.Char w name)
                                 GHC.IO.IOMode.WriteMode
                                 (\ (ds6 :: GHC.IO.Handle.Types.Handle)[OneShot]
                                    (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case file of wild1 { Network.Wai.Parse.FileInfo ds7 ds8 ds9 ->
                                  Data.ByteString.Lazy.appendFile2 ds6 ds9 eta1 })
                                   `cast`
                                 (<GHC.IO.Handle.Types.Handle>_R
                                  ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                                 ipv of ds6 { (#,#) ipv2 ipv3 ->
                          (w1 WaiLib.replyCssButton)
                            `cast`
                          (GHC.Types.N:IO[0] <Network.Wai.Internal.ResponseReceived>_R)
                            ipv2 } } }
                 } in
                 case Network.Wai.Parse.$wgetRequestBodyType ww of wild {
                   GHC.Maybe.Nothing
                   -> $w$j
                        w2
                        (GHC.Types.[]
                           @ (Network.Wai.Parse.File
                                Data.ByteString.Lazy.Internal.ByteString))
                   GHC.Maybe.Just rbt
                   -> case Network.Wai.Parse.parseRequestBody2
                             @ Data.ByteString.Lazy.Internal.ByteString
                             Network.Wai.Parse.noLimitParseRequestBodyOptions
                             WaiLib.searchMap2
                             rbt
                             ww1
                             w2 of ds5 { (#,#) ipv ipv1 ->
                      case ipv1 of ww2 { (,) ww3 ww4 -> $w$j ipv ww4 } } }) -}
036a62be5a12650aff8e5a89881204da
  data Block = Block {bblock :: [Data.Text.Internal.Lazy.Text]}
e735b22270adfdee29cc2b76ea0f6587
  type Client =
    (WaiLib.ClientId, Network.WebSockets.Connection.Connection)
a1c4ce2cafbbe9cb6b6c68a4f56410dc
  type ClientId = GHC.Types.Int
4094009eeca0d4f5c386f1c83b59a3e5
  data CompileCode
    = CompileCode {compiler :: Data.Text.Internal.Text,
                   option :: Data.Text.Internal.Text,
                   code :: Data.Text.Internal.Text}
e902f1c8c2c9384e725bf1d73e73ae08
  data GeneMatrix
    = GeneMatrix {cmd :: Data.Text.Internal.Text,
                  ncol :: GHC.Integer.Type.Integer,
                  nrow :: GHC.Integer.Type.Integer}
28783c1a95fd2255578c06285f4ec84e
  type HMap =
    Data.HashMap.Base.HashMap GHC.Base.String [[GHC.Base.String]]
d389d91074ea84663a226202bbcac89a
  data MBlock = MBlock {mblock :: [GHC.Integer.Type.Integer]}
f1a65188febf657dbbd7006cade26c93
  data MatInt
    = MatInt {name :: Data.Text.Internal.Text,
              matrix :: [[GHC.Integer.Type.Integer]]}
bad5edc6d2e15a723cbd89c3ae46f5c0
  data Person
    = Person {personId :: GHC.Int.Int64,
              personName :: Data.Text.Internal.Text,
              personAge :: Data.Text.Internal.Text}
036a62be5a12650aff8e5a89881204da
  axiom WaiLib.Rep_Block::
      GHC.Generics.Rep WaiLib.Block
        = GHC.Generics.D1
            ('GHC.Generics.MetaData "Block" "WaiLib" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Block" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Maybe.Just "bblock")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 [Data.Text.Internal.Lazy.Text])))
4094009eeca0d4f5c386f1c83b59a3e5
  axiom WaiLib.Rep_CompileCode::
      GHC.Generics.Rep WaiLib.CompileCode
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "CompileCode" "WaiLib" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "CompileCode" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Maybe.Just "compiler")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 Data.Text.Internal.Text)
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "option")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Maybe.Just "code")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 Data.Text.Internal.Text))))
e902f1c8c2c9384e725bf1d73e73ae08
  axiom WaiLib.Rep_GeneMatrix::
      GHC.Generics.Rep WaiLib.GeneMatrix
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "GeneMatrix" "WaiLib" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "GeneMatrix" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Maybe.Just "cmd")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 Data.Text.Internal.Text)
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "ncol")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Maybe.Just "nrow")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Integer.Type.Integer))))
d389d91074ea84663a226202bbcac89a
  axiom WaiLib.Rep_MBlock::
      GHC.Generics.Rep WaiLib.MBlock
        = GHC.Generics.D1
            ('GHC.Generics.MetaData "MBlock" "WaiLib" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "MBlock" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Maybe.Just "mblock")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 [GHC.Integer.Type.Integer])))
f1a65188febf657dbbd7006cade26c93
  axiom WaiLib.Rep_MatInt::
      GHC.Generics.Rep WaiLib.MatInt
        = GHC.Generics.D1
            ('GHC.Generics.MetaData "MatInt" "WaiLib" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "MatInt" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Maybe.Just "name")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 Data.Text.Internal.Text)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "matrix")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 [[GHC.Integer.Type.Integer]])))
7b43be4a14f888fb43c27f767eb58be1
  axiom WaiLib.Rep_ReplyCode::
      GHC.Generics.Rep WaiLib.ReplyCode
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "ReplyCode" "WaiLib" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "ReplyCode" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Maybe.Just "rcmd")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 Data.Text.Internal.Text)
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "rerror")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Maybe.Just "stdout")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 Data.Text.Internal.Text))))
7b43be4a14f888fb43c27f767eb58be1
  data ReplyCode
    = ReplyCode {rcmd :: Data.Text.Internal.Text,
                 rerror :: Data.Text.Internal.Text,
                 stdout :: Data.Text.Internal.Text}
bcb3e5d2828d8a95a5ee815160dd25ed
  data SearchType = CmdT | JavaT | HaskellT | SnippetT
f9809e949b4de2019cf41506177698a0
  type State = [WaiLib.Client]
eccdf5930e60b8eb3e5c0ff70e86d047
  data UserInput
    = UserInput {cmdId :: GHC.Int.Int64,
                 xcmd :: Data.Text.Internal.Text}
0b3a313c2561061e8c7f5dd865ba5cdb
  anyRoute ::
    Database.SQLite.Simple.Internal.Connection
    -> GHC.IORef.IORef WaiLib.HMap
    -> Network.Wai.Internal.Request
    -> Network.Wai.Internal.Response
  {- Arity: 3,
     Strictness: <L,U(U)><L,U(U)><S(LLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.SQLite.Simple.Internal.Connection)
                   (w1 :: GHC.IORef.IORef WaiLib.HMap)
                   (w2 :: Network.Wai.Internal.Request) ->
                 case w2 of ww { Network.Wai.Internal.Request ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 WaiLib.$wanyRoute w w1 ww9 }) -}
c3e4a2190b41cb80bc1acf8dbc3d21b3
  app ::
    Database.SQLite.Simple.Internal.Connection
    -> Database.SQLite.Simple.Internal.Connection
    -> GHC.IORef.IORef WaiLib.HMap
    -> Network.Wai.Application
  {- Arity: 6,
     Strictness: <L,U(U)><L,U(U)><L,U(U)><S(LLS(LLLS)LLLLLLLLLLLLL),1*U(1*U(U,U,U,U),A,1*U(U,U,U,U),A,1*U,A,A,A,1*U,C(U(U,U(U,U,U,U))),A,A,A,A,A,A)><L,C(C1(U(U,U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                WaiLib.app1
                  `cast`
                (<Database.SQLite.Simple.Internal.Connection>_R
                 ->_R <Database.SQLite.Simple.Internal.Connection>_R
                 ->_R <GHC.IORef.IORef WaiLib.HMap>_R
                 ->_R <Network.Wai.Internal.Request>_R
                 ->_R <Network.Wai.Internal.Response
                       -> GHC.Types.IO Network.Wai.Internal.ResponseReceived>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Network.Wai.Internal.ResponseReceived>_R)) -}
d8df5a0b56a963e179d49c4e9e50c83d
  app1 ::
    Database.SQLite.Simple.Internal.Connection
    -> Database.SQLite.Simple.Internal.Connection
    -> GHC.IORef.IORef WaiLib.HMap
    -> Network.Wai.Internal.Request
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Network.Wai.Internal.ResponseReceived #)
  {- Arity: 6,
     Strictness: <L,U(U)><L,U(U)><L,U(U)><S(LLS(LLLS)LLLLLLLLLLLLL),1*U(1*U(U,U,U,U),A,1*U(U,U,U,U),A,1*U,A,A,A,1*U,C(U(U,U(U,U,U,U))),A,A,A,A,A,A)><L,C(C1(U(U,U)))><S,U> -}
21f91834d8077aa4e0fea8c33ebf5059
  bracketChar :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: [[GHC.Base.String]]) ->
                 GHC.Base.build
                   @ [GHC.Base.String]
                   (\ @ b1
                      (c :: [GHC.Base.String] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Base.String]
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Base.String]
                         @ b1
                         @ [GHC.Base.String]
                         c
                         WaiLib.bracketChar1)
                      n1
                      s)) -}
ebd3e5ead9db9b79ae1217c1c9e2c537
  bracketChar1 :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ GHC.Base.String
                   @ GHC.Base.String
                   WaiLib.bracketChar2) -}
af28311f56f61894141932af357af423
  bracketChar2 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 WaiLib.styleChar
                   WaiLib.bracketChar_l
                   WaiLib.bracketChar3
                   WaiLib.bracketChar_a
                   WaiLib.bracketChar_b
                   x) -}
a425576822c0fd3b665691a1a90bfc6c
  bracketChar3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.bracketChar4) -}
fcba824b61171cc5099f807ffdba2638
  bracketChar4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("</span>"#) -}
189c82a8af8265820b56b97151f2b949
  bracketChar5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<span style=\"color:blue;\">"#) -}
5152edb5f1c965cf5ceece2892c1cafa
  bracketChar_a :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '('#) -}
5ab6f8fd02f47b65ca57e2acd0b5dce3
  bracketChar_b :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# ')'#) -}
5f6dcbb801cf97372e13dddac5bbb1cb
  bracketChar_l :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.bracketChar5) -}
f9046fced84d746a8309d5e9661361bb
  broadcast ::
    WaiLib.ClientId
    -> GHC.MVar.MVar WaiLib.State
    -> Data.Text.Internal.Text
    -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,U(U)><S(S),1*U(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                WaiLib.broadcast1
                  `cast`
                (<WaiLib.ClientId>_R
                 ->_R <GHC.MVar.MVar WaiLib.State>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
e8e1f84b03776d3f69da61a1a43d482b
  broadcast1 ::
    WaiLib.ClientId
    -> GHC.MVar.MVar WaiLib.State
    -> Data.Text.Internal.Text
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U(U)><S(S),1*U(U)><L,U><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: WaiLib.ClientId)
                   (w1 :: GHC.MVar.MVar WaiLib.State)
                   (w2 :: Data.Text.Internal.Text)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1 of ww { GHC.MVar.MVar ww1 ->
                 WaiLib.$wbroadcast w ww1 w2 w3 }) -}
12a4b6783fe7271ed76405717df204a8
  changeSymbol :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (str :: GHC.Base.String) ->
                 let {
                   s :: [GHC.Base.String]
                   = Text.Regex.splitRegex WaiLib.changeSymbol5 str
                 } in
                 case GHC.Classes.$fEq[]_$s$c==1
                        (AronModule.takeEnd @ GHC.Base.String WaiLib.changeSymbol4 s)
                        WaiLib.changeSymbol3 of wild { DEFAULT ->
                 case s of wild1 {
                   [] -> case GHC.List.init2 ret_ty [GHC.Types.Char] of {}
                   : x xs
                   -> let {
                        z6 :: [GHC.Types.Char]
                        = case wild of wild2 {
                            GHC.Types.False
                            -> WaiLib.changeSymbol_go
                                 wild1
                                 (GHC.List.lastError @ GHC.Base.String)
                            GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                      } in
                      letrec {
                        go10 :: [[GHC.Types.Char]] -> [GHC.Types.Char]
                          {- Arity: 1, Strictness: <S,1*U> -}
                        = \ (ds5 :: [[GHC.Types.Char]]) ->
                          case ds5 of wild2 {
                            [] -> z6
                            : y ys
                            -> GHC.Base.++
                                 @ GHC.Types.Char
                                 (GHC.Base.++ @ GHC.Types.Char y WaiLib.changeSymbol1)
                                 (go10 ys) }
                      } in
                      go10 (GHC.List.init1 @ GHC.Base.String x xs) } }) -}
d9449e046081e861bbc5cbed81593e65
  changeSymbol1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.changeSymbol2) -}
8e06796c8faae5f2c29755235d0d2d29
  changeSymbol2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("<span style=\"color:red;\">&lt;-</span>"#) -}
e0818450661e466c1c131c1ad5bbc43b
  changeSymbol3 :: [GHC.Base.String]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Base.String)) -}
fa4714a80374f83cad01aaa1b178d259
  changeSymbol4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
ae81d1936c6fc823ff7b88f9cce2c1a1
  changeSymbol5 :: Text.Regex.Posix.Wrap.Regex
  {- Unfolding: (Text.Regex.Posix.String.$fRegexMakerRegexCompOptionExecOption[]_$cmakeRegexOpts
                   Text.Regex.mkRegex1
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (Text.Regex.Posix.Wrap.N:CompOption[0]))
                   Text.Regex.Posix.Wrap.$fRegexOptionsRegexCompOptionExecOption2
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (Text.Regex.Posix.Wrap.N:ExecOption[0]))
                   (GHC.CString.unpackCString# WaiLib.changeSymbol6)) -}
c2b945e4644547bc6f709636bd1189d7
  changeSymbol6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<-"#) -}
e4c7d8baa3a82b2a0c3d3358d64e3b08
  changeSymbol_go ::
    [GHC.Base.String] -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
7a6f3268884777cad1b7241ae8b6cfe7
  cmdLog :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.cmdLog1) -}
bbf3d527c8a074902fa8db6cd45eabc7
  cmdLog1 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/Users/cat/myfile/bitbucket/testfile/waiCmdLog.txt"#) -}
a7ad2c0b8505de3d43f5511a5c8f2dd3
  connectClient ::
    Network.WebSockets.Connection.Connection
    -> GHC.MVar.MVar WaiLib.State -> GHC.Types.IO WaiLib.ClientId
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                WaiLib.connectClient1
                  `cast`
                (<Network.WebSockets.Connection.Connection>_R
                 ->_R <GHC.MVar.MVar WaiLib.State>_R
                 ->_R Sym (GHC.Types.N:IO[0] <WaiLib.ClientId>_R)) -}
c84e39c96514bcc8458c2b70f390f73c
  connectClient1 ::
    Network.WebSockets.Connection.Connection
    -> GHC.MVar.MVar WaiLib.State
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, WaiLib.ClientId #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><S(S),1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Network.WebSockets.Connection.Connection)
                   (w1 :: GHC.MVar.MVar WaiLib.State)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1 of ww { GHC.MVar.MVar ww1 ->
                 WaiLib.$wconnectClient w ww1 w2 }) -}
c44650eede74dad50a941ad83782d110
  cssHead :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: [[GHC.Base.String]]) ->
                 GHC.Base.build
                   @ [[GHC.Types.Char]]
                   (\ @ b1
                      (c :: [[GHC.Types.Char]] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [[GHC.Types.Char]]
                      @ b1
                      (GHC.Base.mapFB
                         @ [[GHC.Types.Char]]
                         @ b1
                         @ [[GHC.Types.Char]]
                         c
                         WaiLib.cssHead1)
                      n1
                      s)) -}
4570e5d56a570b481ad64d5b0b55e461
  cssHead1 :: [[GHC.Types.Char]] -> [[GHC.Types.Char]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [[GHC.Types.Char]]) ->
                 case x of wild {
                   [] -> case GHC.List.badHead ret_ty [[GHC.Types.Char]] of {}
                   : x1 ds5
                   -> case x1 of wild1 {
                        [] -> wild
                        : ipv ipv1
                        -> case WaiLib.cssHead3 of ww { Text.Regex.Posix.Wrap.Regex ww1 ww2 ww3 ->
                           case Text.Regex.splitRegex_$s$wgo
                                  (GHC.Base.map
                                     @ (GHC.Arr.Array
                                          GHC.Types.Int
                                          (Text.Regex.Base.RegexLike.MatchOffset,
                                           Text.Regex.Base.RegexLike.MatchLength))
                                     @ (Text.Regex.Base.RegexLike.MatchOffset,
                                        Text.Regex.Base.RegexLike.MatchLength)
                                     Text.Regex.splitRegex1
                                     (Text.Regex.Posix.String.$w$cmatchAll ww1 ww2 ww3 wild1))
                                  ipv
                                  ipv1
                                  0# of ww4 { (#,#) ww5 ww6 ->
                           case GHC.List.$wlenAcc
                                  @ [GHC.Types.Char]
                                  (GHC.Types.: @ [GHC.Types.Char] ww5 ww6)
                                  0# of ww7 { DEFAULT ->
                           case GHC.Prim.># ww7 2# of lwild {
                             DEFAULT -> wild
                             1#
                             -> GHC.Types.:
                                  @ [GHC.Types.Char]
                                  (GHC.CString.unpackAppendCString#
                                     WaiLib.cssHead2
                                     (GHC.Base.++_$s++
                                        @ GHC.Types.Char
                                        WaiLib.bracketChar3
                                        ipv
                                        ipv1))
                                  (WaiLib.$wunsafeDrop @ [GHC.Types.Char] 1# wild) } } } } } }) -}
a15ed2d01981faff2c26ee863990b4a4
  cssHead2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<span style=\"color:gray;\">"#) -}
6e9db3aec8266772f11d77092b1f37f8
  cssHead3 :: Text.Regex.Posix.Wrap.Regex
  {- Unfolding: (Text.Regex.Posix.String.$fRegexMakerRegexCompOptionExecOption[]_$cmakeRegexOpts
                   Text.Regex.mkRegex1
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (Text.Regex.Posix.Wrap.N:CompOption[0]))
                   Text.Regex.Posix.Wrap.$fRegexOptionsRegexCompOptionExecOption2
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (Text.Regex.Posix.Wrap.N:ExecOption[0]))
                   (GHC.CString.unpackCString# WaiLib.cssHead4)) -}
634154320d6899d4ef20d2b733ac1fcc
  cssHead4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (":"#) -}
02f97bcfcd3d28ba0030a3e82592e0c1
  cssStrong :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 case GHC.List.$wlenAcc
                        @ [GHC.Types.Char]
                        (Text.Regex.splitRegex WaiLib.cssHead3 s)
                        0# of ww2 { DEFAULT ->
                 case GHC.Prim.># ww2 2# of lwild {
                   DEFAULT -> s
                   1#
                   -> GHC.CString.unpackAppendCString#
                        WaiLib.cssStrong3
                        (GHC.Base.++ @ GHC.Types.Char s WaiLib.cssStrong1) } }) -}
ae82fd4e06b59ac998d9bad74e41dc9e
  cssStrong1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.cssStrong2) -}
7e490a87512cd35785b41b4878be7685
  cssStrong2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("</strong>"#) -}
5374b58a6da212a279da4c31205df4f0
  cssStrong3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<strong>"#) -}
00474887bbd03ec72a87e727e1280b69
  currCmdFile :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.currCmdFile1) -}
688f3859f2758f1b8bafaa88dba6e513
  currCmdFile1 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/Users/cat/myfile/bitbucket/testfile/currCmd.txt"#) -}
7fdb997f95113b87bfd9b095b812b79d
  disconnectClient ::
    WaiLib.ClientId -> GHC.MVar.MVar WaiLib.State -> GHC.Types.IO ()
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                WaiLib.disconnectClient1
                  `cast`
                (<WaiLib.ClientId>_R
                 ->_R <GHC.MVar.MVar WaiLib.State>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
b997ca2c182978676459c4dc6e9bc0c7
  disconnectClient1 ::
    WaiLib.ClientId
    -> GHC.MVar.MVar WaiLib.State
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U(U)><S(S),1*U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: WaiLib.ClientId)
                   (w1 :: GHC.MVar.MVar WaiLib.State)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1 of ww { GHC.MVar.MVar ww1 ->
                 WaiLib.$wdisconnectClient w ww1 w2 }) -}
63fef18a4f9c094f85a37edee804b1a3
  doc :: GHC.IO.FilePath
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True)
                (GHC.Types.[] @ GHC.Types.Char) -}
21159d7f0514109c42acb79883a12b63
  docRoot :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.docRoot1) -}
c538d4bc0fd3256ba1915e1dd2734aad
  docRoot1 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/Library/WebServer/Documents/zsurface"#) -}
849589cdbdfc862a5360dc8ad4ffba80
  foldListList ::
    ([[GHC.Base.String]] -> [[GHC.Base.String]])
    -> [[GHC.Base.String]] -> GHC.Base.String
  {- Arity: 2, Strictness: <C(S),1*C1(U)><L,U>,
     Unfolding: (\ (stylish :: [[GHC.Base.String]]
                               -> [[GHC.Base.String]])
                   (allBlock :: [[GHC.Base.String]]) ->
                 WaiLib.foldListList_go1
                   (WaiLib.foldListList_go
                      WaiLib.changeSymbol4
                      (GHC.List.zip
                         @ [GHC.Base.String]
                         @ [GHC.Base.String]
                         (stylish allBlock)
                         allBlock))) -}
c2c673d61b7edffcd187c4eaec6a88fb
  foldListListTxt :: [[GHC.Base.String]] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (allBlock :: [[GHC.Base.String]]) ->
                 WaiLib.foldListListTxt_go1 (WaiLib.foldListListTxt_go allBlock)) -}
bea4bf11b47c532e0f124ca27cbbd7f5
  foldListListTxt_go :: [[GHC.Base.String]] -> [GHC.Base.String]
  {- Arity: 1, Strictness: <S,1*U> -}
7f01bf862a9f854ddf9e410681a51ee7
  foldListListTxt_go1 :: [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
de8e983ba4635cdc1a6afd6b03982709
  foldListList_go ::
    GHC.Integer.Type.Integer
    -> [([GHC.Base.String], [GHC.Base.String])] -> [GHC.Base.String]
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
0c2fd2e2f04e4e4bfd4d5056879db296
  foldListList_go1 :: [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U> -}
5b2180fd4d0e4b5a7d652151e27712a8
  genePDF :: GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                WaiLib.genePDF1
                  `cast`
                (<GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
a929772afc2c5ce0af37d591b707ead6
  genePDF1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (p :: GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Process.createProcess1
                        (System.Process.Common.CreateProcess
                           (System.Process.Common.RawCommand
                              AronModule.ls4
                              (GHC.Types.: @ GHC.Base.String p (GHC.Types.[] @ GHC.Base.String)))
                           (GHC.Maybe.Nothing @ GHC.IO.FilePath)
                           (GHC.Maybe.Nothing @ [(GHC.Base.String, GHC.Base.String)])
                           System.Process.Common.Inherit
                           System.Process.Common.CreatePipe
                           System.Process.Common.Inherit
                           GHC.Types.False
                           GHC.Types.False
                           GHC.Types.False
                           GHC.Types.False
                           GHC.Types.False
                           GHC.Types.False
                           (GHC.Maybe.Nothing @ System.Posix.Types.GroupID)
                           (GHC.Maybe.Nothing @ System.Posix.Types.UserID)
                           GHC.Types.False)
                        eta of ds5 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,,,) ds6 hout ds7 ds8 ->
                 case hout of wild1 {
                   GHC.Maybe.Nothing
                   -> WaiLib.genePDF2 ipv (GHC.Types.[] @ GHC.Base.String)
                   GHC.Maybe.Just out
                   -> case GHC.IO.Handle.Text.hGetContents1
                             out
                             ipv of ds9 { (#,#) ipv2 ipv3 ->
                      WaiLib.genePDF2 ipv2 (Data.OldList.lines ipv3) } } } }) -}
68e3b5e1731a02220a69fc1168feb0bc
  genePDF10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<a href='"#) -}
cb5660e797ca0ffaffc6e0fcb22235e5
  genePDF11 :: GHC.IO.FilePath
  {- Unfolding: (System.FilePath.Posix.combine
                   WaiLib.wapp
                   WaiLib.genePDF12) -}
428856523a34bbc4e80227d1226de62b
  genePDF12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.genePDF13) -}
a0e952a8710ab6a40a2f403a28a2a4ad
  genePDF13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("pdf.html"#) -}
84354bfc972e372745bcf39677670f36
  genePDF2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [GHC.Base.String]
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,U><L,1*U>,
     Unfolding: (\ (ipv :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot]
                   (ipv1 :: [GHC.Base.String])[OneShot] ->
                 case (GHC.IO.Handle.Text.hPutStr'
                         GHC.IO.Handle.FD.stdout
                         AronModule.fl1
                         GHC.Types.True)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ipv of ds5 { (#,#) ipv2 ipv3 ->
                 System.IO.appendFile2
                   @ ()
                   WaiLib.genePDF11
                   GHC.IO.IOMode.WriteMode
                   (\ (hdl :: GHC.IO.Handle.Types.Handle)[OneShot] ->
                    GHC.IO.Handle.Text.hPutStr'
                      hdl
                      (Data.OldList.unlines
                         (GHC.Base.map
                            @ [GHC.Types.Char]
                            @ [GHC.Types.Char]
                            WaiLib.genePDF3
                            ipv1))
                      GHC.Types.False)
                   ipv2 }) -}
e96f738da88d38b37b26db737f2ec56c
  genePDF3 :: GHC.IO.FilePath -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: GHC.IO.FilePath) ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (WaiLib.$whref
                      (System.FilePath.Posix.combine (GHC.Types.[] @ GHC.Types.Char) x)
                      WaiLib.img)
                   WaiLib.genePDF4) -}
f441805e754aa9861ea2de7987b6a4a9
  genePDF4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.genePDF5) -}
aeddd4c87c0d3e3c5ee80b88dd01cf07
  genePDF5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<br>"#) -}
bfc2daca0ddd8631d545605fb40df7ab
  genePDF6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.genePDF7) -}
1d3982ba44d6ba892fb760230c1aef9e
  genePDF7 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("' width=\"10%\"  height=\"10%\" /></a>"#) -}
51e54ea2b5856e6fe641147af9173476
  genePDF8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<img src='"#) -}
1368279ff0d98045c8fe52b2a87e2065
  genePDF9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'>"#) -}
550fed789f46b246d036a49593a99706
  geneRectMat :: Network.Wai.Application
  {- Arity: 3,
     Strictness: <S(LLLLLLLLLC(S(SL))LLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*C1(U(U,U(U,U,U,U))),A,A,A,A,A,A)><L,1*C1(C1(U(U,U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                WaiLib.geneRectMat1
                  `cast`
                (<Network.Wai.Internal.Request>_R
                 ->_R <Network.Wai.Internal.Response
                       -> GHC.Types.IO Network.Wai.Internal.ResponseReceived>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Network.Wai.Internal.ResponseReceived>_R)) -}
905e1df39c36981eb3e7ecf5765224a1
  geneRectMat1 ::
    Network.Wai.Internal.Request
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Network.Wai.Internal.ResponseReceived #)
  {- Arity: 3,
     Strictness: <S(LLLLLLLLLC(S(SL))LLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*C1(U(U,U(U,U,U,U))),A,A,A,A,A,A)><L,1*C1(C1(U(U,U)))><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Network.Wai.Internal.Request)
                   (w1 :: Network.Wai.Internal.Response
                          -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Network.Wai.Internal.Request ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 WaiLib.$wgeneRectMat ww10 w1 w2 }) -}
ae345ef20a7c4981705403152372e2e6
  groupCountFilter :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cs :: [GHC.Base.String]) ->
                 GHC.Base.build
                   @ [GHC.Types.Char]
                   (\ @ b1
                      (c :: [GHC.Types.Char] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ (GHC.Base.String, GHC.Integer.Type.Integer)
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Types.Char]
                         @ b1
                         @ (GHC.Base.String, GHC.Integer.Type.Integer)
                         c
                         (Data.Tuple.fst @ GHC.Base.String @ GHC.Integer.Type.Integer))
                      n1
                      (AronModule.groupCount
                         (AronModule.filtermap
                            @ GHC.Base.String
                            @ GHC.Base.String
                            WaiLib.groupCountFilter1
                            cs)))) -}
27bb4b4046ba6e8bad98dc25997ba3c4
  groupCountFilter1 ::
    GHC.Base.String -> GHC.Maybe.Maybe GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: GHC.Base.String) ->
                 let {
                   ds5 :: GHC.Base.String = AronModule.trim x
                 } in
                 case GHC.Base.eqString ds5 WaiLib.groupCountFilter2 of wild {
                   GHC.Types.False -> GHC.Maybe.Just @ GHC.Base.String ds5
                   GHC.Types.True -> GHC.Maybe.Nothing @ GHC.Base.String }) -}
62b9cf791fbdb6af034e92ce8b185325
  groupCountFilter2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.groupCountFilter3) -}
41d09baf2df14a61e9b34bbddff92eac
  groupCountFilter3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("va"#) -}
ce282503c851ebe1e29ca06dd4044584
  hiddenForm ::
    GHC.Integer.Type.Integer -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U><L,U> -}
0cc87fe44646a5c186039f28defb77ce
  href ::
    GHC.Base.String
    -> GHC.Base.String -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <L,U><L,A><L,1*U>, Inline: [2],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Base.String)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Base.String) ->
                 WaiLib.$whref w w2) -}
4b764f85ec69c9b79a5d91b41d3b5388
  htmlBody :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Base.String) ->
                 GHC.CString.unpackAppendCString#
                   WaiLib.htmlBody2
                   (GHC.Base.build
                      @ GHC.Types.Char
                      (\ @ b
                         (c :: GHC.Types.Char -> b -> b)[OneShot]
                         (n1 :: b)[OneShot] ->
                       GHC.Base.foldr
                         @ GHC.Types.Char
                         @ b
                         c
                         (GHC.CString.unpackFoldrCString# @ b WaiLib.htmlBody1 c n1)
                         s))) -}
b655dddf31b5e9f976c4181ec9a84ca6
  htmlBody1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" </BODY></HTML> "#) -}
cbf55b6cad3321b0fcc9b98ece323c4d
  htmlBody2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\n\
                 \            <HTML>   \n\
                 \            <HEAD>   \n\
                 \            <meta charset=\"utf-8\">\n\
                 \            <TITLE>Search Code Snippet</TITLE> \n\
                 \            <LINK rel=\"stylesheet\" type=\"text/css\" href=\"/style.css\"> \n\
                 \            <style>\n\
                 \            .colorclick{\n\
                 \                background-color:#f1e6e6;\n\
                 \            }\n\
                 \            .form{\n\
                 \                margin-block-end:1px;\n\
                 \            }\n\
                 \            .hf{\n\
                 \                display:none;\n\
                 \            }\n\
                 \\n\
                 \            pre {\n\
                 \                display: block;\n\
                 \                font-family: monospace;\n\
                 \                font-size: 14pt;\n\
                 \                white-space: pre;\n\
                 \                margin-top: 1px;\n\
                 \                margin-right: 1px;\n\
                 \                margin-bottom: 1px;\n\
                 \                margin-left: 1px;\n\
                 \                background: #fdfbea69;\n\
                 \                border-style: solid;\n\
                 \                border-width: thin;\n\
                 \            }\n\
                 \\n\
                 \            textarea {\n\
                 \                border:1px solid #999999;\n\
                 \                \n\
                 \                font-size: 13pt;\n\
                 \                width:100%;\n\
                 \                height:150px;\n\
                 \                margin:1px 0;\n\
                 \                padding:3px;\n\
                 \                display:none;\n\
                 \                font-family: monospace;\n\
                 \                transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;\n\
                 \                outline: 0;\n\
                 \                box-shadow: none;\n\
                 \                border-radius: 0;\n\
                 \                box-sizing: content-box;\n\
                 \                background: wheat;\n\
                 \                padding: 1px 0;\n\
                 \                resize: yes;\n\
                 \            }\n\
                 \            .submitButton{\n\
                 \                color: red;\n\
                 \                font-size:22pt;\n\
                 \                font-family: monospace;\n\
                 \                font-weight:bold;\n\
                 \                display:none;\n\
                 \            }\n\
                 \\n\
                 \            .butcen{\n\
                 \                display: inline-flex;\n\
                 \                float:right;\n\
                 \            }\n\
                 \\n\
                 \            .butshow{\n\
                 \                /* display: inline-flex; */\n\
                 \                /* text-align: center; */\n\
                 \                font-size: 14pt;\n\
                 \                margin: 2px 2px;\n\
                 \                cursor: pointer;\n\
                 \                background-color: #ffffff;\n\
                 \                color: #000000;\n\
                 \                border: 1px solid #212921; \n\
                 \\n\
                 \            }\n\
                 \            </style>\n\
                 \            <script>\n\
                 \\n\
                 \            function textAreaAdjust(o) {\n\
                 \                o.style.height = \"1px\";\n\
                 \                o.style.height = (25+o.scrollHeight)+\"px\";\n\
                 \            }\n\
                 \\n\
                 \            function showandhide(id) {\n\
                 \\n\
                 \                 var formobj=document.getElementById('f' + id);\n\
                 \                 if(formobj.className == 'hf'){  //check if classname is hide \n\
                 \                    formobj.style.display = 'block';\n\
                 \                    formobj.className ='hfshow';\n\
                 \                 }else if(formobj.className == 'hfshow'){\n\
                 \                    formobj.style.display = 'none';\n\
                 \                    formobj.className ='hf';\n\
                 \                 }\n\
                 \\n\
                 \                 var selectedobj=document.getElementById('t' + id);\n\
                 \                 if(selectedobj.className == 'hide'){  //check if classname is hide \n\
                 \                    selectedobj.style.display = 'block';\n\
                 \                    selectedobj.className ='show';\n\
                 \                 }else if(selectedobj.className == 'show'){\n\
                 \                    selectedobj.style.display = 'none';\n\
                 \                    selectedobj.className ='hide';\n\
                 \                 }\n\
                 \\n\
                 \                 var butobj=document.getElementById('b' + id);\n\
                 \                 if(butobj.className == 'submitButton'){  //check if classname is hide \n\
                 \                    butobj.style.display = 'inline-flex';\n\
                 \                    butobj.className ='butshow';\n\
                 \                 }else if(butobj.className == 'butshow'){\n\
                 \                    butobj.style.display = 'none';\n\
                 \                    butobj.className ='submitButton';\n\
                 \                 }\n\
                 \\n\
                 \                 var butobj=document.getElementById('a' + id);\n\
                 \                 if(butobj.className == 'submitButton'){  //check if classname is hide \n\
                 \                    butobj.style.display = 'inline-flex';\n\
                 \                    butobj.className ='butshow';\n\
                 \                 }else if(butobj.className == 'butshow'){\n\
                 \                    butobj.style.display = 'none';\n\
                 \                    butobj.className ='submitButton';\n\
                 \                 }\n\
                 \\n\
                 \                 var butobj=document.getElementById('d' + id);\n\
                 \                 if(butobj.className == 'submitButton'){  //check if classname is hide \n\
                 \                    butobj.style.display = 'inline-flex';\n\
                 \                    butobj.className ='butshow';\n\
                 \                 }else if(butobj.className == 'butshow'){\n\
                 \                    butobj.style.display = 'none';\n\
                 \                    butobj.className ='submitButton';\n\
                 \                 }\n\
                 \\n\
                 \                 var butobj=document.getElementById('c' + id);\n\
                 \                 var cname = 'co' + id;\n\
                 \                 if(butobj.className == cname){  \n\
                 \                    butobj.className = 'colorclick';\n\
                 \                 }else if(butobj.className == 'colorclick'){\n\
                 \                    butobj.className = cname; \n\
                 \                 }\n\
                 \\n\
                 \            }\n\
                 \            </script>\n\
                 \\n\
                 \            </HEAD>\n\
                 \            <BODY> "#) -}
0278058a3d1a6160b8df8a95392862e9
  htmlForm :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Base.String) ->
                 GHC.CString.unpackAppendCString#
                   WaiLib.htmlForm2
                   (GHC.Base.build
                      @ GHC.Types.Char
                      (\ @ b
                         (c :: GHC.Types.Char -> b -> b)[OneShot]
                         (n1 :: b)[OneShot] ->
                       GHC.Base.foldr
                         @ GHC.Types.Char
                         @ b
                         c
                         (GHC.CString.unpackFoldrCString# @ b WaiLib.htmlForm1 c n1)
                         s))) -}
4128f437c05741ad2485304edb82607e
  htmlForm1 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" </datalist><br>  \n\
                 \             </form> \n\
                 \             </div> "#) -}
d3dc086d7223d539c9e2b5d59b88e21c
  htmlForm2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" \n\
                 \             <div style=\"text-align:center;\"> \n\
                 \             <form action=\"/snippet\" method=\"get\" target=\"\"> \n\
                 \                 <input type=\"text\" style=\"font-size:18pt;height:50px;width:400px;\" name=\"id\" list=\"autocomplete\">  \n\
                 \                 <datalist id=\"autocomplete\">\" "#) -}
d3c34db39a6501e7ed24f99ba6efa79a
  htmlGreater :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: [[GHC.Base.String]]) ->
                 GHC.Base.build
                   @ [GHC.Base.String]
                   (\ @ b1
                      (c :: [GHC.Base.String] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Base.String]
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Base.String]
                         @ b1
                         @ [GHC.Base.String]
                         c
                         WaiLib.htmlGreater1)
                      n1
                      s)) -}
36aedfd80ece9d6214fc8e7baa00fc9b
  htmlGreater1 :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ GHC.Base.String
                   @ GHC.Base.String
                   WaiLib.htmlGreater2) -}
f110b4fb5d16b4ab31415dfe8e8e6b67
  htmlGreater2 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 Text.Regex.subRegex WaiLib.htmlGreater_r x WaiLib.htmlGreater3) -}
c521b3633e24e078bf0e49aea0347e90
  htmlGreater3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.htmlGreater4) -}
77f7aabdce62cd2794080e4138658a3b
  htmlGreater4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("&gt;"#) -}
01962ceb3491775b9926ff4b74ecda2f
  htmlGreater5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (">"#) -}
d704424ea377ab18af8e88b670503d4a
  htmlGreater_r :: Text.Regex.Posix.Wrap.Regex
  {- Unfolding: (Text.Regex.Posix.String.$fRegexMakerRegexCompOptionExecOption[]_$cmakeRegexOpts
                   Text.Regex.mkRegex1
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (Text.Regex.Posix.Wrap.N:CompOption[0]))
                   Text.Regex.Posix.Wrap.$fRegexOptionsRegexCompOptionExecOption2
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (Text.Regex.Posix.Wrap.N:ExecOption[0]))
                   (GHC.CString.unpackCString# WaiLib.htmlGreater5)) -}
60eb3c08f7beabde47f10e4ff5069366
  htmlLess :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: [[GHC.Base.String]]) ->
                 GHC.Base.build
                   @ [GHC.Base.String]
                   (\ @ b1
                      (c :: [GHC.Base.String] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Base.String]
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Base.String]
                         @ b1
                         @ [GHC.Base.String]
                         c
                         WaiLib.htmlLess1)
                      n1
                      s)) -}
25b641c783edb3cc8d60dfccc9826984
  htmlLess1 :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ GHC.Base.String
                   @ GHC.Base.String
                   WaiLib.htmlLess2) -}
ec957cb633b089b56f999445d9676c99
  htmlLess2 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 Text.Regex.subRegex WaiLib.htmlLess_r x WaiLib.htmlLess3) -}
9fe36ea0197d9a4690efb147d60a30b5
  htmlLess3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.htmlLess4) -}
2bf9d0c1209769c640d20888cea8cbca
  htmlLess4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("&lt;"#) -}
f5c225fe7b1af17e75de080e85c5900b
  htmlLess5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<"#) -}
acbd5fdfeca601f4b7b94412c1748f12
  htmlLess_r :: Text.Regex.Posix.Wrap.Regex
  {- Unfolding: (Text.Regex.Posix.String.$fRegexMakerRegexCompOptionExecOption[]_$cmakeRegexOpts
                   Text.Regex.mkRegex1
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (Text.Regex.Posix.Wrap.N:CompOption[0]))
                   Text.Regex.Posix.Wrap.$fRegexOptionsRegexCompOptionExecOption2
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (Text.Regex.Posix.Wrap.N:ExecOption[0]))
                   (GHC.CString.unpackCString# WaiLib.htmlLess5)) -}
82fa15eb062e6ee20111e345d16db000
  htmlPre :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Base.String) ->
                 GHC.CString.unpackAppendCString#
                   WaiLib.htmlPre2
                   (GHC.Base.build
                      @ GHC.Types.Char
                      (\ @ b
                         (c :: GHC.Types.Char -> b -> b)[OneShot]
                         (n1 :: b)[OneShot] ->
                       GHC.Base.foldr
                         @ GHC.Types.Char
                         @ b
                         c
                         (GHC.CString.unpackFoldrCString# @ b WaiLib.htmlPre1 c n1)
                         s))) -}
a6c18259e797a254993e5cedc484bfb6
  htmlPre1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" </pre> "#) -}
538cf79ddb2410287c4f790ef34b816b
  htmlPre2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" <pre style=\"font-size:29px;white-space: pre-wrap;\" id=\"id00\"> "#) -}
4e4622b7f243f055aa1823aa232a5a7d
  httpApp :: Network.Wai.Application
  {- Arity: 2, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds5 :: Network.Wai.Internal.Request)
                   (respond :: Network.Wai.Internal.Response
                               -> GHC.Types.IO Network.Wai.Internal.ResponseReceived) ->
                 respond WaiLib.httpApp1) -}
0eb6eebf366951ba39cece1a0ad708b2
  httpApp1 :: Network.Wai.Internal.Response
  {- Strictness: m2,
     Unfolding: (Network.Wai.Internal.ResponseBuilder
                   Network.HTTP.Types.Status.status400
                   (GHC.Types.[] @ Network.HTTP.Types.Header.Header)
                   WaiLib.httpApp2
                     `cast`
                   ((forall (r :: <*>_N).
                     <Data.ByteString.Builder.Internal.BuildStep r>_R
                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Data.ByteString.Builder.Internal.BuildSignal
                                      r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))) -}
cf6b89062539fe3710779610551e9280
  httpApp2 ::
    Data.ByteString.Builder.Internal.BuildStep r
    -> Data.ByteString.Builder.Internal.BufferRange
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 3,
     Unfolding: (Network.Wai.responseLBS1 WaiLib.httpApp3) -}
31ef72274254a7f6727f8b83511793d4
  httpApp3 :: Data.ByteString.Lazy.Internal.ByteString
  {- Unfolding: (Data.ByteString.Lazy.Internal.$wpackChunks1
                   32#
                   (GHC.CString.unpackCString# WaiLib.httpApp4)) -}
579303e19b9c03435a4b2adc745c559e
  httpApp4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Not a websocket request"#) -}
33bf498d54631109cff260ae16efa02d
  img :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.img1) -}
b8711947b081564e1e9695ab888a4da3
  img1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("img.png"#) -}
2ce82c72f5fc995449c6866634b4a3bd
  insertAll ::
    [(GHC.Base.String, [[GHC.Base.String]])]
    -> WaiLib.HMap -> WaiLib.HMap
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
eb7e16f523722c42d43513cb3694b067
  insertDatabase ::
    Database.SQLite.Simple.Internal.Connection
    -> Network.Wai.Application
  {- Arity: 4,
     Strictness: <L,U(U)><S(LLLLSLLLLLLLLLLL),1*U(1*U(U,U,U,U),A,A,A,1*U,A,A,A,A,C(U(U,1*U(U,U,U,U))),A,A,A,A,A,A)><L,1*C1(C1(U(U,U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                WaiLib.insertDatabase1
                  `cast`
                (<Database.SQLite.Simple.Internal.Connection>_R
                 ->_R <Network.Wai.Internal.Request>_R
                 ->_R <Network.Wai.Internal.Response
                       -> GHC.Types.IO Network.Wai.Internal.ResponseReceived>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Network.Wai.Internal.ResponseReceived>_R)) -}
54b83d36526c0c032f7958079ac0df3c
  insertDatabase1 ::
    Database.SQLite.Simple.Internal.Connection
    -> Network.Wai.Internal.Request
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Network.Wai.Internal.ResponseReceived #)
  {- Arity: 4,
     Strictness: <L,U(U)><S(LLLLSLLLLLLLLLLL),1*U(1*U(U,U,U,U),A,A,A,1*U,A,A,A,A,C(U(U,1*U(U,U,U,U))),A,A,A,A,A,A)><L,1*C1(C1(U(U,U)))><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Database.SQLite.Simple.Internal.Connection)
                   (w1 :: Network.Wai.Internal.Request)
                   (w2 :: Network.Wai.Internal.Response
                          -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1 of ww { Network.Wai.Internal.Request ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 WaiLib.$winsertDatabase w ww1 ww5 ww10 w2 w3 }) -}
087ed7977127be7cb8c217d40e2d45f4
  insertinfo :: Network.Wai.Internal.Response
  {- Strictness: m1,
     Unfolding: (Network.Wai.Internal.ResponseFile
                   Network.HTTP.Types.Status.status200
                   WaiLib.insertinfo3
                   WaiLib.insertinfo1
                   (GHC.Maybe.Nothing @ Network.Wai.Internal.FilePart)) -}
e8078792878fd438806d9d5f8ebbf05d
  insertinfo1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.insertinfo2) -}
8002798fcaf400ed51491a58d79a285a
  insertinfo2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("insert.html"#) -}
70e40c76f1de26df83a495460ffa451d
  insertinfo3 :: [Network.HTTP.Types.Header.Header]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Header.Header
                   WaiLib.insertinfo4
                   (GHC.Types.[] @ Network.HTTP.Types.Header.Header)) -}
2ea8c40d389dcec76fd5e247887dd1e8
  insertinfo4 ::
    (Network.HTTP.Types.Header.HeaderName,
     Data.ByteString.Internal.ByteString)
  {- Strictness: m,
     Unfolding: ((WaiLib.insertinfo6, WaiLib.insertinfo5)) -}
18e4b0a7fa59f4f082f50741a901ac2f
  insertinfo5 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds5 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        WaiLib.insertinfo_addr#
                        ipv of wild { (#,#) ds6 ds7 ->
                 Data.ByteString.Internal.PS
                   WaiLib.insertinfo_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds7) } }) -}
b81138908115ff221beddee030bc6a08
  insertinfo6 :: Network.HTTP.Types.Header.HeaderName
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds5 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        WaiLib.insertinfo_addr#1
                        ipv of wild { (#,#) ds6 ds7 ->
                 let {
                   ipv2 :: GHC.ForeignPtr.ForeignPtrContents
                   = GHC.ForeignPtr.PlainForeignPtr ipv1
                 } in
                 let {
                   ipv3 :: GHC.Prim.Int# = GHC.Prim.word2Int# ds7
                 } in
                 case Data.CaseInsensitive.Internal.$wfoldCaseBS
                        WaiLib.insertinfo_addr#1
                        ipv2
                        0#
                        ipv3 of dt1 { Data.ByteString.Internal.PS ipv4 ipv5 ipv6 ipv7 ->
                 Data.CaseInsensitive.Internal.CI
                   @ Data.ByteString.Internal.ByteString
                   (Data.ByteString.Internal.PS WaiLib.insertinfo_addr#1 ipv2 0# ipv3)
                   dt1 } } }) -}
e9fcebac3efe217306c9352e518999c9
  insertinfo_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("text/html"#) -}
a71647a6d741f6341f4892986b8a2b48
  insertinfo_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Content-Type"#) -}
e112d741cb5c7ebc957d0ad41fa937aa
  javaClassName :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: [[GHC.Base.String]]) ->
                 GHC.Base.build
                   @ [GHC.Base.String]
                   (\ @ b1
                      (c :: [GHC.Base.String] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Base.String]
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Base.String]
                         @ b1
                         @ [GHC.Base.String]
                         c
                         WaiLib.javaClassName1)
                      n1
                      s)) -}
bdcb88a598b868ccaf5e27960c89d816
  javaClassName1 :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ GHC.Base.String
                   @ GHC.Base.String
                   WaiLib.javaClassName2) -}
054205a1dd024915e08f660ba42eb2b2
  javaClassName2 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 Text.RE.TDFA.String.*=~/ x WaiLib.javaClassName3) -}
b74eef17c47ff059ae5a61f3c18109d5
  javaClassName3 ::
    Text.RE.ZeInternals.Types.SearchReplace.SearchReplace
      Text.RE.ZeInternals.TDFA.RE GHC.Base.String
  {- Unfolding: (WaiLib.javaClassName6 WaiLib.javaClassName4) -}
738645b811849edca7b3bba7e499e02c
  javaClassName4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.javaClassName5) -}
133d439515cf91593e830b680055b0ab
  javaClassName5 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("${adr}(\\<interface\\>|\\<abstract\\>|\\<implements\\>|\\<class\\>|\\< = \\>):?///<span style=\"color:#ef82ee;\">${adr}</span>"#) -}
27626fddb1db4af737ff8c2f145fb19b
  javaClassName6 ::
    GHC.Base.String
    -> Text.RE.ZeInternals.Types.SearchReplace.SearchReplace
         Text.RE.ZeInternals.TDFA.RE GHC.Base.String
  {- Unfolding: (Text.RE.ZeInternals.SearchReplace.TDFAEdPrime.unsafe_compile_sr
                   @ Text.RE.ZeInternals.TDFA.REOptions
                   @ GHC.Base.String
                   (GHC.Base.id @ Text.RE.ZeInternals.TDFA.REOptions)
                     `cast`
                   (Sym (Text.RE.ZeInternals.TDFA.N:IsOption[0]
                             <Text.RE.ZeInternals.TDFA.REOptions>_N))
                   Text.RE.TDFA.String.$fIsRegexRE[]
                   WaiLib.javaClassName7) -}
27b6fa70c3350c83400a64c8189fe493
  javaClassName7 :: Text.RE.ZeInternals.TDFA.REOptions
  {- Unfolding: (case Text.RE.ZeInternals.TDFA.$fIsOption()3
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Text.RE.REOptions.Macros
                              Text.RE.ZeInternals.TDFA.RE>_R) of dt { DEFAULT ->
                 Text.RE.REOptions.REOptions
                   @ Text.RE.ZeInternals.TDFA.RE
                   @ Text.Regex.TDFA.Common.CompOption
                   @ Text.Regex.TDFA.Common.ExecOption
                   dt
                   WaiLib.javaClassName8
                   Text.Regex.TDFA.Common.$fRegexOptionsRegexCompOptionExecOption_$cblankExecOpt }) -}
b90cc77dea554aa231e97f68e30697af
  javaClassName8 :: Text.Regex.TDFA.Common.CompOption
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Text.Regex.TDFA.Common.CompOption
                   GHC.Types.True
                   GHC.Types.True
                   GHC.Types.True
                   GHC.Types.True
                   GHC.Types.False) -}
c8e13d6f56768f954e4c01f5e62b320f
  javaCmdKeyWords :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: [[GHC.Base.String]]) ->
                 GHC.Base.build
                   @ [GHC.Base.String]
                   (\ @ b1
                      (c :: [GHC.Base.String] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Base.String]
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Base.String]
                         @ b1
                         @ [GHC.Base.String]
                         c
                         WaiLib.javaCmdKeyWords1)
                      n1
                      s)) -}
0da97b94207f03f9758d6e3e5057de73
  javaCmdKeyWords1 :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ GHC.Base.String
                   @ GHC.Base.String
                   WaiLib.javaCmdKeyWords2) -}
2c336a68a8fbf9b8bed6f5634d2d655f
  javaCmdKeyWords2 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 Text.RE.TDFA.String.*=~/ x WaiLib.javaCmdKeyWords3) -}
b903d334bf2838f889a2b4b115eba068
  javaCmdKeyWords3 ::
    Text.RE.ZeInternals.Types.SearchReplace.SearchReplace
      Text.RE.ZeInternals.TDFA.RE GHC.Base.String
  {- Unfolding: (WaiLib.javaClassName6 WaiLib.javaCmdKeyWords4) -}
33dcfe12f1315e653835779474965560
  javaCmdKeyWords4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.javaCmdKeyWords5) -}
124f56a7abaa075ec7389b17e6f8d37d
  javaCmdKeyWords5 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("${adr}(\\<java\\>|\\<javac\\>|\\<javadoc\\>|\\<jar\\>):?///<span style=\"color:#35A993;\">${adr}</span>"#) -}
58db6d057a2464c379897a198520a81a
  javaFunClass :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: [[GHC.Base.String]]) ->
                 GHC.Base.build
                   @ [GHC.Base.String]
                   (\ @ b1
                      (c :: [GHC.Base.String] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Base.String]
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Base.String]
                         @ b1
                         @ [GHC.Base.String]
                         c
                         WaiLib.javaFunClass1)
                      n1
                      s)) -}
795d87b02918c0d826d9568dbd985234
  javaFunClass1 :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ GHC.Base.String
                   @ GHC.Base.String
                   WaiLib.javaFunClass2) -}
26e1f67c93e2e69e4863a171ea3b62cb
  javaFunClass2 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 Text.RE.TDFA.String.*=~/ x WaiLib.javaFunClass3) -}
65b87ef0621c074b780c2756d9c9c020
  javaFunClass3 ::
    Text.RE.ZeInternals.Types.SearchReplace.SearchReplace
      Text.RE.ZeInternals.TDFA.RE GHC.Base.String
  {- Unfolding: (WaiLib.javaClassName6 WaiLib.javaFunClass4) -}
095706df55fe2cc0baf204d3bbc3eb46
  javaFunClass4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.javaFunClass5) -}
17290a1d641e8cb11812121ef0335290
  javaFunClass5 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("${adr}(\\<Vector\\>|\\<List\\>|\\<Set\\>|\\<HashSet\\>|\\<HashMap\\>|\\<ArrayList\\>|\\<Integer\\>|\\<String\\>):?///<span style=\"color:#218e2b;\">${adr}</span>"#) -}
639165d4292af39db498f11c915291eb
  javaKeyWords :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: [[GHC.Base.String]]) ->
                 GHC.Base.build
                   @ [GHC.Base.String]
                   (\ @ b1
                      (c :: [GHC.Base.String] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Base.String]
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Base.String]
                         @ b1
                         @ [GHC.Base.String]
                         c
                         WaiLib.javaKeyWords1)
                      n1
                      s)) -}
282afdfbf4ad3a5b8cd37b29a02a0c2d
  javaKeyWords1 :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ GHC.Base.String
                   @ GHC.Base.String
                   WaiLib.javaKeyWords2) -}
435809a7ee8d3f9b9da5c663048fe2b8
  javaKeyWords2 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 Text.RE.TDFA.String.*=~/ x WaiLib.javaKeyWords3) -}
f8bfe48ebd32fd46eab4cc6124a9b342
  javaKeyWords3 ::
    Text.RE.ZeInternals.Types.SearchReplace.SearchReplace
      Text.RE.ZeInternals.TDFA.RE GHC.Base.String
  {- Unfolding: (WaiLib.javaClassName6 WaiLib.javaKeyWords4) -}
cb480f384974c05eab69af818002f2fc
  javaKeyWords4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.javaKeyWords5) -}
ec3ed0b3aa947b2f040bf5bf9c0fb31b
  javaKeyWords5 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("${adr}(\\<abstract\\>|\\<assert\\>|\\<boolean\\>|\\<break\\>|\\<byte\\>|\\<case\\>|\\<catch\\>|\\<char\\>|\\<class\\>|\\<const\\>|\\<continue\\>|\\<default\\>|\\<do\\>|\\<double\\>|\\<else\\>|\\<enum\\>|\\<extends\\>|\\<final\\>|\\<finally\\>|\\<float\\>|\\<for\\>|\\<goto\\>|\\<if\\>|\\<implements\\>|\\<import\\>|\\<instanceof\\>|\\<int\\>|\\<interface\\>|\\<long\\>|\\<native\\>|\\<new\\>|\\<package\\>|\\<private\\>|\\<protected\\>|\\<public\\>|\\<return\\>|\\<short\\>|\\<static\\>|\\<strictfp\\>|\\<super\\>|\\<switch\\>|\\<synchronized\\>|\\<this\\>|\\<throw\\>|\\<throws\\>|\\<transient\\>|\\<try\\>|\\<void\\>|\\<volatile\\>|\\<while\\>):?///<span style=\"color:#f50a93;\">${adr}</span>"#) -}
aaa02af003548b6125c311d8cdc818cc
  keyDash :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: [[GHC.Base.String]]) ->
                 GHC.Base.build
                   @ [GHC.Base.String]
                   (\ @ b1
                      (c :: [GHC.Base.String] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Base.String]
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Base.String]
                         @ b1
                         @ [GHC.Base.String]
                         c
                         WaiLib.keyDash1)
                      n1
                      s)) -}
27b468828925d900bf3a12d8f27a5c84
  keyDash1 :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ GHC.Base.String
                   @ GHC.Base.String
                   WaiLib.keyDash2) -}
6f1183a703598674891e98d6a10d42b5
  keyDash2 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 Text.Regex.subRegex WaiLib.keyDash_r x WaiLib.keyDash3) -}
bd4e94c994c373ff222b9ef6b41d9bf9
  keyDash3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.keyDash4) -}
a229120e51adb1eddbeb37d24073d5ed
  keyDash4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("<span style=\"color:red;\">\\0</span>"#) -}
4e7a7fdde03942fdfa0d4a65ff9148c5
  keyDash5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[-+]{10,}"#) -}
c37ff6eaba5ae2f7acd4b864a18c17c0
  keyDash_r :: Text.Regex.Posix.Wrap.Regex
  {- Unfolding: (Text.Regex.Posix.String.$fRegexMakerRegexCompOptionExecOption[]_$cmakeRegexOpts
                   Text.Regex.mkRegex1
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (Text.Regex.Posix.Wrap.N:CompOption[0]))
                   Text.Regex.Posix.Wrap.$fRegexOptionsRegexCompOptionExecOption2
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (Text.Regex.Posix.Wrap.N:ExecOption[0]))
                   (GHC.CString.unpackCString# WaiLib.keyDash5)) -}
1c3256daf76a05d12501a09e4415e3d6
  keyName :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: [[GHC.Base.String]]) ->
                 GHC.Base.build
                   @ [GHC.Base.String]
                   (\ @ b1
                      (c :: [GHC.Base.String] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Base.String]
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Base.String]
                         @ b1
                         @ [GHC.Base.String]
                         c
                         WaiLib.keyName1)
                      n1
                      s)) -}
4fe81f8c6663abbfa6a37ae199d009bc
  keyName1 :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ GHC.Base.String
                   @ GHC.Base.String
                   WaiLib.keyName2) -}
d727f1486c34b35b4411e2e8acd22999
  keyName2 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 Text.RE.TDFA.String.*=~/ x WaiLib.keyName3) -}
de86d3962697198eab234f2e8f2d8dfe
  keyName3 ::
    Text.RE.ZeInternals.Types.SearchReplace.SearchReplace
      Text.RE.ZeInternals.TDFA.RE GHC.Base.String
  {- Unfolding: (WaiLib.javaClassName6 WaiLib.keyName4) -}
3b35e23a2281a8ae56e34620d5b17ac9
  keyName4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.keyName5) -}
727d8cd1252092c51d50eccbd94f2cbe
  keyName5 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("${adr}(\\<where\\>|\\<let\\>):?///<span style=\"color:blue;\">${adr}</span>"#) -}
10954165e01635bb59e1eecb92e303f8
  keySymbol1 :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: [[GHC.Base.String]]) ->
                 GHC.Base.build
                   @ [GHC.Base.String]
                   (\ @ b1
                      (c :: [GHC.Base.String] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Base.String]
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Base.String]
                         @ b1
                         @ [GHC.Base.String]
                         c
                         WaiLib.keySymbol2)
                      n1
                      s)) -}
9310a31c56e4f5764d7fc7c67b624b54
  keySymbol2 :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ GHC.Base.String
                   @ GHC.Base.String
                   WaiLib.changeSymbol) -}
50ad4ff87d76be9b5991159c878144a9
  keyURL :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: [[GHC.Base.String]]) ->
                 GHC.Base.build
                   @ [GHC.Base.String]
                   (\ @ b1
                      (c :: [GHC.Base.String] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Base.String]
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Base.String]
                         @ b1
                         @ [GHC.Base.String]
                         c
                         WaiLib.keyURL1)
                      n1
                      s)) -}
f03cb2de1c72486d05df714851f52b51
  keyURL1 :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ GHC.Base.String
                   @ GHC.Base.String
                   WaiLib.keyURL2) -}
bb355ae0503121ea7dca60093efa6473
  keyURL2 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 Text.Regex.subRegex WaiLib.keyURL_r x WaiLib.keyURL3) -}
8940d53f6ca018023cf884fd0610000a
  keyURL3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.keyURL4) -}
e0afb3292900608a790b790793b7d7dc
  keyURL4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<a href=\"\\1\">\\1</a>"#) -}
9d1454de66b181688ed22e881a68da40
  keyURL5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("(https?://[[:graph:]]+)"#) -}
201f809b4a68aa548cd3f49b1f01b46b
  keyURL_r :: Text.Regex.Posix.Wrap.Regex
  {- Unfolding: (Text.Regex.Posix.String.$fRegexMakerRegexCompOptionExecOption[]_$cmakeRegexOpts
                   Text.Regex.mkRegex1
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (Text.Regex.Posix.Wrap.N:CompOption[0]))
                   Text.Regex.Posix.Wrap.$fRegexOptionsRegexCompOptionExecOption2
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (Text.Regex.Posix.Wrap.N:ExecOption[0]))
                   (GHC.CString.unpackCString# WaiLib.keyURL5)) -}
9e9db1a84259085caee27df93dd13a15
  keyWord :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: [[GHC.Base.String]]) ->
                 GHC.Base.build
                   @ [GHC.Base.String]
                   (\ @ b1
                      (c :: [GHC.Base.String] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Base.String]
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Base.String]
                         @ b1
                         @ [GHC.Base.String]
                         c
                         WaiLib.keyWord2)
                      n1
                      s)) -}
a4e702b9fa8c4656987249709f8ce671
  keyWord1 :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: [[GHC.Base.String]]) ->
                 GHC.Base.build
                   @ [GHC.Base.String]
                   (\ @ b1
                      (c :: [GHC.Base.String] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Base.String]
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Base.String]
                         @ b1
                         @ [GHC.Base.String]
                         c
                         WaiLib.keyWord7)
                      n1
                      s)) -}
f3eb55e59e2dad61e5613ba253e679cd
  keyWord1_r :: Text.Regex.Posix.Wrap.Regex
  {- Unfolding: (Text.Regex.Posix.String.$fRegexMakerRegexCompOptionExecOption[]_$cmakeRegexOpts
                   Text.Regex.mkRegex1
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (Text.Regex.Posix.Wrap.N:CompOption[0]))
                   Text.Regex.Posix.Wrap.$fRegexOptionsRegexCompOptionExecOption2
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (Text.Regex.Posix.Wrap.N:ExecOption[0]))
                   (GHC.CString.unpackCString# WaiLib.keyWord9)) -}
b12c6ceabaa84ee051790c17a2abce8e
  keyWord2 :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ GHC.Base.String
                   @ GHC.Base.String
                   WaiLib.keyWord3) -}
a033017bedc4a665b09a55084e286cec
  keyWord3 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 Text.Regex.subRegex WaiLib.keyWord_r x WaiLib.keyWord4) -}
8ee1d7cfe6a7a74d46a8e5960c473fed
  keyWord4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.keyWord5) -}
ffd3d231ea3d4477195139780230c61a
  keyWord5 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("<span style=\"color:green;\">\\0</span>"#) -}
76f6a74a33064849a9adb712c01d7ede
  keyWord6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CTRL[a-zA-Z_-]*"#) -}
8d669e1145e00efd1cf0aacca7adbc9b
  keyWord7 :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ GHC.Base.String
                   @ GHC.Base.String
                   WaiLib.keyWord8) -}
ed80d9ca7726ff5828c50ea10c8ca13d
  keyWord8 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 Text.Regex.subRegex WaiLib.keyWord1_r x WaiLib.keyWord4) -}
8025b9561fb568d6d8565221d4fdb63a
  keyWord9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\\\\[a-zA-Z0-9]+{[^}]+}"#) -}
f4ba2f38cc4af28665e26eb16e33218f
  keyWord_r :: Text.Regex.Posix.Wrap.Regex
  {- Unfolding: (Text.Regex.Posix.String.$fRegexMakerRegexCompOptionExecOption[]_$cmakeRegexOpts
                   Text.Regex.mkRegex1
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (Text.Regex.Posix.Wrap.N:CompOption[0]))
                   Text.Regex.Posix.Wrap.$fRegexOptionsRegexCompOptionExecOption2
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (Text.Regex.Posix.Wrap.N:ExecOption[0]))
                   (GHC.CString.unpackCString# WaiLib.keyWord6)) -}
9bf689d0c60cda8c2a74e04ff6559697
  listToByteStr ::
    [[GHC.Base.String]] -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (s :: [[GHC.Base.String]]) ->
                 let {
                   cs :: [GHC.Types.Char]
                   = WaiLib.listToByteStr_go1 (WaiLib.listToByteStr_go s)
                 } in
                 case GHC.List.$wlenAcc @ GHC.Types.Char cs 0# of ww { DEFAULT ->
                 Data.ByteString.Internal.$wunsafePackLenChars ww cs }) -}
40ca867a7fb14f58460736d4eb9389e5
  listToByteStr_go :: [[GHC.Base.String]] -> [GHC.Base.String]
  {- Arity: 1, Strictness: <S,1*U> -}
41d7cf8dea8f5f819adab7b33239a967
  listToByteStr_go1 :: [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
27ab6ab23fef08f8cf87fd77d431de0c
  listen ::
    Network.WebSockets.Connection.Connection
    -> WaiLib.ClientId -> GHC.MVar.MVar WaiLib.State -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(S(SLLLL)LC(S(SS))SS),1*U(U(C(U(U,A)),A,A,A,A),A,C(U(U,1*U)),C(C1(U(U,A))),U)><L,U(U)><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                WaiLib.listen1
                  `cast`
                (<Network.WebSockets.Connection.Connection>_R
                 ->_R <WaiLib.ClientId>_R
                 ->_R <GHC.MVar.MVar WaiLib.State>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
47b414867b7955e53abad568600063c7
  listen1 ::
    Network.WebSockets.Connection.Connection
    -> WaiLib.ClientId
    -> GHC.MVar.MVar WaiLib.State
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(S(SLLLL)LC(S(SS))SS),1*U(U(C(U(U,A)),A,A,A,A),A,C(U(U,1*U)),C(C1(U(U,A))),U)><L,U(U)><L,U(U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Network.WebSockets.Connection.Connection)
                   (w1 :: WaiLib.ClientId)
                   (w2 :: GHC.MVar.MVar WaiLib.State)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Network.WebSockets.Connection.Connection ww1 ww2 ww3 ww4 ww5 ->
                 case ww1 of ww6 { Network.WebSockets.Connection.Options.ConnectionOptions ww7 ww8 ww9 ww10 ww11 ->
                 WaiLib.$wlisten ww7 ww3 ww4 ww5 w1 w2 w3 } }) -}
51d9ea44d6581861feaace06b4b6671d
  logCurrCmd :: [GHC.Base.String] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                WaiLib.logCurrCmd1
                  `cast`
                (<[GHC.Base.String]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
73741791bb201d85dbd62ea2a2c1a52d
  logCurrCmd1 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (cs :: [GHC.Base.String]) ->
                 AronModule.wfs1 WaiLib.currCmdFile cs) -}
0b5b6026636beefebc8a9b6dc4e32a54
  mapClear :: [GHC.Base.String] -> WaiLib.HMap -> WaiLib.HMap
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
fb01ce6c6304d17963f1aeaa2cce9d60
  matrixReply :: Network.Wai.Internal.Response
  {- Strictness: m1,
     Unfolding: (Network.Wai.Internal.ResponseFile
                   Network.HTTP.Types.Status.status200
                   WaiLib.insertinfo3
                   WaiLib.matrixReply1
                   (GHC.Maybe.Nothing @ Network.Wai.Internal.FilePart)) -}
a0ba8e9e3b0471604e6813c540d54139
  matrixReply1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.matrixReply2) -}
8d157dc45d7180acb2e4005dbb363014
  matrixReply2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("postMatrix.html"#) -}
5193284681f54a7884aa771c4b859329
  mysqlKeyWords :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: [[GHC.Base.String]]) ->
                 GHC.Base.build
                   @ [GHC.Base.String]
                   (\ @ b1
                      (c :: [GHC.Base.String] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Base.String]
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Base.String]
                         @ b1
                         @ [GHC.Base.String]
                         c
                         WaiLib.mysqlKeyWords1)
                      n1
                      s)) -}
0c8d796d0194fa99ce8b24f6969f1c75
  mysqlKeyWords1 :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ GHC.Base.String
                   @ GHC.Base.String
                   WaiLib.mysqlKeyWords2) -}
93823b0f8054d106b0125f78f852648a
  mysqlKeyWords2 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 Text.RE.TDFA.String.*=~/ x WaiLib.mysqlKeyWords3) -}
72d56dd82fa86aec7b1573c6d938cf6f
  mysqlKeyWords3 ::
    Text.RE.ZeInternals.Types.SearchReplace.SearchReplace
      Text.RE.ZeInternals.TDFA.RE GHC.Base.String
  {- Unfolding: (WaiLib.javaClassName6 WaiLib.mysqlKeyWords4) -}
5f4f4e78842662b5e0b656de991fd835
  mysqlKeyWords4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.mysqlKeyWords5) -}
03a47ba57d7da827a1f99229a2168ea5
  mysqlKeyWords5 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("${adr}(\\<insert\\>|\\<create\\>|\\<from\\>|\\<select\\>|\\<table\\>|\\<into\\>):?///<span style=\"color:#FF69B4;\">${adr}</span>"#) -}
a95a302d739fdf3e32da214cfc9977ae
  nextId :: WaiLib.State -> WaiLib.ClientId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: WaiLib.State) ->
                 case WaiLib.$wnextId w of ww { DEFAULT -> GHC.Types.I# ww }) -}
89726c959702bf67776192f5f31e155e
  notFound :: Network.Wai.Internal.Response
  {- Strictness: m2,
     Unfolding: (Network.Wai.Internal.ResponseBuilder
                   Network.HTTP.Types.Status.status404
                   WaiLib.notFound4
                   WaiLib.notFound1
                     `cast`
                   ((forall (r :: <*>_N).
                     <Data.ByteString.Builder.Internal.BuildStep r>_R
                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Data.ByteString.Builder.Internal.BuildSignal
                                      r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))) -}
123ad7fa6d03382f881651487b9e105c
  notFound1 ::
    Data.ByteString.Builder.Internal.BuildStep r
    -> Data.ByteString.Builder.Internal.BufferRange
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 3,
     Unfolding: (Network.Wai.responseLBS1 WaiLib.notFound2) -}
f5f666f5cd4b6f3d6947b3678c145365
  notFound2 :: Data.ByteString.Lazy.Internal.ByteString
  {- Unfolding: (Data.ByteString.Lazy.Internal.$wpackChunks1
                   32#
                   (GHC.CString.unpackCString# WaiLib.notFound3)) -}
d29fbac355dd56b4055fbbfd56d0f45a
  notFound3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("404 - Not Found"#) -}
30177649d05d9fb61b1786167588e0a6
  notFound4 :: [Network.HTTP.Types.Header.Header]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Header.Header
                   WaiLib.notFound5
                   (GHC.Types.[] @ Network.HTTP.Types.Header.Header)) -}
b258ac64bcc6c37371d2c5c7da29fcab
  notFound5 ::
    (Network.HTTP.Types.Header.HeaderName,
     Data.ByteString.Internal.ByteString)
  {- Strictness: m,
     Unfolding: ((WaiLib.insertinfo6, WaiLib.notFound6)) -}
822c349d20643961de23c09fde62c6f9
  notFound6 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds5 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        WaiLib.notFound_addr#
                        ipv of wild { (#,#) ds6 ds7 ->
                 Data.ByteString.Internal.PS
                   WaiLib.notFound_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds7) } }) -}
404af56a40a1048e81cab11523e3be99
  notFoundStr ::
    Data.ByteString.Lazy.Internal.ByteString
    -> Network.Wai.Internal.Response
  {- Arity: 1, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Network.Wai.Internal.ResponseBuilder
                   Network.HTTP.Types.Status.status404
                   WaiLib.notFound4
                   (Network.Wai.responseLBS1 s)
                     `cast`
                   ((forall (r :: <*>_N).
                     <Data.ByteString.Builder.Internal.BuildStep r>_R
                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Data.ByteString.Builder.Internal.BuildSignal
                                      r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))) -}
a3a7cbef85a5b65e69a533d5095930b8
  notFound_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("text/plain"#) -}
3995327d14aeaa871c3242544b809d71
  optionHtml :: [GHC.Base.String] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (cs :: [GHC.Base.String]) ->
                 WaiLib.optionHtml_go cs) -}
5ab4f30503a1b541f7c9904929754d51
  optionHtml_go :: [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U> -}
54d480f6b5871ac288d74b0107727c43
  pdfFile :: Network.Wai.Internal.Response
  {- Strictness: m1,
     Unfolding: (Network.Wai.Internal.ResponseFile
                   Network.HTTP.Types.Status.status200
                   WaiLib.insertinfo3
                   WaiLib.genePDF12
                   (GHC.Maybe.Nothing @ Network.Wai.Internal.FilePart)) -}
34d4a920e283e0f6212aadd8c9d08dc3
  pdfPath :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.pdfPath1) -}
ff2bc88b9db715bd4e14cc223ab2f58a
  pdfPath1 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/Library/WebServer/Documents/zsurface/pdf"#) -}
5b6a4c7e9e42b08d1cd546d4eb96098e
  pdfname :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.pdfname1) -}
e5c6915b424b1e206c088d68268c8277
  pdfname1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Very Important File"#) -}
a22dc0a55c66741331078d32ba2fc3f5
  plainIndex :: Network.Wai.Internal.Response
  {- Strictness: m1,
     Unfolding: (Network.Wai.Internal.ResponseFile
                   Network.HTTP.Types.Status.status200
                   WaiLib.insertinfo3
                   WaiLib.plainIndex1
                   (GHC.Maybe.Nothing @ Network.Wai.Internal.FilePart)) -}
f9a8c6525272320383c49b1b4a0c0039
  plainIndex1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.plainIndex2) -}
2e33fce42ef1eb6af258bddbc531324a
  plainIndex2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("index.html"#) -}
dcd84cb2c591dd663eeec44d689f18b1
  queryLibHaskell :: GHC.Base.String -> Network.Wai.Internal.Response
  {- Arity: 1, Strictness: <L,U>m3, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Base.String) ->
                 case WaiLib.$wqueryLibHaskell w of ww { (#,,#) ww1 ww2 ww3 ->
                 Network.Wai.Internal.ResponseStream ww1 ww2 ww3 }) -}
8683fabeca008bfc85c73d72e949cf2d
  queryLibJava :: GHC.Base.String -> Network.Wai.Internal.Response
  {- Arity: 1, Strictness: <L,U>m3, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Base.String) ->
                 case WaiLib.$wqueryLibJava w of ww { (#,,#) ww1 ww2 ww3 ->
                 Network.Wai.Internal.ResponseStream ww1 ww2 ww3 }) -}
a8ab85db439124a247009c9c3997a6b7
  readCmd ::
    GHC.IO.FilePath
    -> WaiLib.SearchType -> GHC.Types.IO GHC.Base.String
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                WaiLib.readCmd1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R <WaiLib.SearchType>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
c22a24289453f5bab0791333e75f2782
  readCmd1 ::
    GHC.IO.FilePath
    -> WaiLib.SearchType
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: (\ (fn :: GHC.IO.FilePath)
                   (t :: WaiLib.SearchType)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.IO.Handle.FD.openFile1
                        fn
                        GHC.IO.IOMode.ReadMode
                        eta of ds5 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.hSetEncoding1
                        ipv1
                        GHC.IO.Encoding.Latin1.latin1_checked
                        ipv of ds6 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv1
                        ipv2 of ds7 { (#,#) ipv4 ipv5 ->
                 let {
                   sortedList :: [GHC.Base.String]
                   = GHC.Base.map
                       @ (GHC.Base.String, GHC.Integer.Type.Integer)
                       @ [GHC.Types.Char]
                       (Data.Tuple.fst @ GHC.Base.String @ GHC.Integer.Type.Integer)
                       (AronModule.groupCount
                          (AronModule.filtermap
                             @ GHC.Base.String
                             @ GHC.Base.String
                             WaiLib.groupCountFilter1
                             (Data.OldList.lines ipv5)))
                 } in
                 case System.IO.appendFile2
                        @ ()
                        WaiLib.readCmd7
                        GHC.IO.IOMode.WriteMode
                        (\ (hdl :: GHC.IO.Handle.Types.Handle)[OneShot] ->
                         GHC.IO.Handle.Text.hPutStr'
                           hdl
                           (Data.OldList.unlines
                              (GHC.Base.map
                                 @ (GHC.Base.String, GHC.Integer.Type.Integer)
                                 @ [GHC.Types.Char]
                                 WaiLib.readCmd5
                                 (AronModule.groupCount sortedList)))
                           GHC.Types.False)
                        ipv4 of ds8 { (#,#) ipv7 ipv8 ->
                 (# ipv7,
                    letrec {
                      go10 :: [[GHC.Types.Char]] -> [GHC.Types.Char]
                        {- Arity: 1, Strictness: <S,1*U> -}
                      = \ (ds9 :: [[GHC.Types.Char]]) ->
                        case ds9 of wild {
                          [] -> GHC.Types.[] @ GHC.Types.Char
                          : y ys
                          -> case t of wild1 { DEFAULT ->
                             GHC.Base.++
                               @ GHC.Types.Char
                               (GHC.CString.unpackAppendCString#
                                  WaiLib.readCmd4
                                  (GHC.Base.++ @ GHC.Types.Char y WaiLib.readCmd2))
                               (go10 ys) } }
                    } in
                    go10 sortedList #) } } } }) -}
4e30ebbaee764ad22cbbbb4c6e353ece
  readCmd2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.readCmd3) -}
f38ff5e1b1994f8de964b91b821e91d6
  readCmd3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\">"#) -}
97fdb1e7f00972a7b915577b0390b942
  readCmd4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<option value=\""#) -}
914b9949def20e00ae60b750d05d45b1
  readCmd5 ::
    ([GHC.Types.Char], GHC.Integer.Type.Integer) -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,U)>m2, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: ([GHC.Types.Char], GHC.Integer.Type.Integer)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case WaiLib.$wlvl ww1 ww2 of ww3 { (#,#) ww4 ww5 ->
                 GHC.Types.: @ GHC.Types.Char ww4 ww5 } }) -}
7eb71fb1c9a68ab51af52df33297e16f
  readCmd6 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)2
                   (GHC.Types.[] @ GHC.Types.Char)) -}
9e16e0525795b43c0f4fa25d9914bcd3
  readCmd7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.readCmd8) -}
a2743a60e1a89d1543db02d19c5458d8
  readCmd8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/tmp/aa.x"#) -}
8e92ee5f744b1a8942dfd6b321d2079c
  readCurrCmd :: GHC.Types.IO GHC.Base.String
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                WaiLib.readCurrCmd1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
340ee033260ae7d0dd90b46fdebc1a29
  readCurrCmd1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (AronModule.readFileLatin2 WaiLib.currCmdFile) -}
00fa8107fe8310d521783cdc2067e728
  receiveCode :: Network.Wai.Application
  {- Arity: 3,
     Strictness: <S(LLLLLLLLLC(S(SL))LLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*C1(U(U,1*U(U,U,U,U))),A,A,A,A,A,A)><L,C(C1(U(U,U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                WaiLib.receiveCode1
                  `cast`
                (<Network.Wai.Internal.Request>_R
                 ->_R <Network.Wai.Internal.Response
                       -> GHC.Types.IO Network.Wai.Internal.ResponseReceived>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Network.Wai.Internal.ResponseReceived>_R)) -}
08b651ae2e28ac85191200daa819e557
  receiveCode1 ::
    Network.Wai.Internal.Request
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Network.Wai.Internal.ResponseReceived #)
  {- Arity: 3,
     Strictness: <S(LLLLLLLLLC(S(SL))LLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*C1(U(U,1*U(U,U,U,U))),A,A,A,A,A,A)><L,C(C1(U(U,U)))><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Network.Wai.Internal.Request)
                   (w1 :: Network.Wai.Internal.Response
                          -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Network.Wai.Internal.Request ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 WaiLib.$wreceiveCode ww10 w1 w2 }) -}
5ee3857c26d9718f323a110cd502391e
  receiveCode2 :: Network.Wai.Application
  {- Arity: 3,
     Strictness: <S(LLLLLLLLLC(S(SL))LLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*C1(U(U,1*U(U,U,U,U))),A,A,A,A,A,A)><L,C(C1(U(U,U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                WaiLib.receiveCode3
                  `cast`
                (<Network.Wai.Internal.Request>_R
                 ->_R <Network.Wai.Internal.Response
                       -> GHC.Types.IO Network.Wai.Internal.ResponseReceived>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Network.Wai.Internal.ResponseReceived>_R)) -}
8265800d2cad0f6e6f1f8ada13b403a1
  receiveCode3 ::
    Network.Wai.Internal.Request
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Network.Wai.Internal.ResponseReceived #)
  {- Arity: 3,
     Strictness: <S(LLLLLLLLLC(S(SL))LLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*C1(U(U,1*U(U,U,U,U))),A,A,A,A,A,A)><L,C(C1(U(U,U)))><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Network.Wai.Internal.Request)
                   (w1 :: Network.Wai.Internal.Response
                          -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Network.Wai.Internal.Request ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 WaiLib.$wreceiveCode2 ww10 w1 w2 }) -}
72706cd76688f1a7d85c7e0fd854a18f
  replyCssButton :: Network.Wai.Internal.Response
  {- Strictness: m1,
     Unfolding: (Network.Wai.Internal.ResponseFile
                   Network.HTTP.Types.Status.status200
                   WaiLib.insertinfo3
                   WaiLib.replyCssButton1
                   (GHC.Maybe.Nothing @ Network.Wai.Internal.FilePart)) -}
db749a60b58ae12df8c8e5cd5ebf8e6f
  replyCssButton1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.replyCssButton2) -}
abf1d40365e39c2585304441e38b907f
  replyCssButton2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cssButton.html"#) -}
939ed05a059f6c2ef8ac263568117924
  replyEditor :: Network.Wai.Internal.Response
  {- Strictness: m1,
     Unfolding: (Network.Wai.Internal.ResponseFile
                   Network.HTTP.Types.Status.status200
                   WaiLib.insertinfo3
                   WaiLib.replyEditor1
                   (GHC.Maybe.Nothing @ Network.Wai.Internal.FilePart)) -}
bccbb33846aefbe6fabc0d4e3ad88473
  replyEditor1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.replyEditor2) -}
d892f64895087fd2a6b69cc49c35b584
  replyEditor2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("indexEditor.html"#) -}
b587293dfed9f50ca5fc234bf7bd5426
  replyHtml :: GHC.Base.String -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U><L,1*U>,
     Unfolding: (\ (s :: GHC.Base.String)
                   (listCmd :: GHC.Base.String) ->
                 GHC.CString.unpackAppendCString#
                   WaiLib.replyHtml3
                   (GHC.Base.++
                      @ GHC.Types.Char
                      listCmd
                      (GHC.CString.unpackAppendCString#
                         WaiLib.replyHtml2
                         (GHC.Base.++ @ GHC.Types.Char s WaiLib.replyHtml1)))) -}
8875a78842d1852bcce3d36589654766
  replyHtml1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.htmlBody1) -}
f043723721ce3dc5b0fc106c0871e7e4
  replyHtml2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: (" </datalist> \n\
                 \            <br> \n\
                 \            </form> \n\
                 \            </div> "#) -}
7f5830fc65560ed181e59f5dfdad99ce
  replyHtml3 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\n\
                 \            <HTML>   \n\
                 \            <HEAD>   \n\
                 \            <meta charset=\"utf-8\">\n\
                 \            <TITLE>Search Code Snippet</TITLE> \n\
                 \            <LINK rel=\"stylesheet\" type=\"text/css\" href=\"/style.css\"> \n\
                 \            </HEAD>\n\
                 \            <BODY> \n\
                 \\n\
                 \            <div style=\"text-align:center;\">\n\
                 \            <form action=\"/snippet\" method=\"get\" target=\"\"> \n\
                 \            <input type=\"text\" style=\"font-size:18pt;height:50px;width:400px;\" name=\"id\" list=\"autocomplete\">  \n\
                 \            <datalist id=\"autocomplete\"> "#) -}
9fc93dfaef64fd22e8efd3d0f88b62d5
  replyJS :: Network.Wai.Internal.Response
  {- Strictness: m1,
     Unfolding: (Network.Wai.Internal.ResponseFile
                   Network.HTTP.Types.Status.status200
                   WaiLib.replyJS3
                   WaiLib.replyJS1
                   (GHC.Maybe.Nothing @ Network.Wai.Internal.FilePart)) -}
e4874281a71ccc1da76dc2b7a2eea105
  replyJS1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.replyJS2) -}
349ac9a73615ea166df481e7a0fb6237
  replyJS2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ace/build/src/ace.js"#) -}
0247825914198d73877c08735000887c
  replyJS3 :: [Network.HTTP.Types.Header.Header]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Header.Header
                   WaiLib.replyJS4
                   (GHC.Types.[] @ Network.HTTP.Types.Header.Header)) -}
9bf7801beaf92224530cd35fe4171e7d
  replyJS4 ::
    (Network.HTTP.Types.Header.HeaderName,
     Data.ByteString.Internal.ByteString)
  {- Strictness: m,
     Unfolding: ((WaiLib.insertinfo6, WaiLib.replyJS5)) -}
87759aad19bd66201018b62856ec01c7
  replyJS5 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds5 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        WaiLib.replyJS_addr#
                        ipv of wild { (#,#) ds6 ds7 ->
                 Data.ByteString.Internal.PS
                   WaiLib.replyJS_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds7) } }) -}
7faf58e5f45df28ca12820d3dfc99f5b
  replyJS_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("text/javascript"#) -}
3f3f7b1432ad89c15c77cef16e2c99b7
  responseCmd ::
    Database.SQLite.Simple.Internal.Connection
    -> GHC.Base.String -> Network.Wai.Internal.Response
  {- Arity: 2, Strictness: <L,U(U)><L,1*U>m3, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Database.SQLite.Simple.Internal.Connection)
                   (w1 :: GHC.Base.String) ->
                 case WaiLib.$wresponseCmd w w1 of ww { (#,,#) ww1 ww2 ww3 ->
                 Network.Wai.Internal.ResponseStream ww1 ww2 ww3 }) -}
38dcb8c77710c19bc1b2aa7b436d16e3
  responseEditor :: Network.Wai.Internal.Response
  {- Strictness: m1,
     Unfolding: (Network.Wai.Internal.ResponseFile
                   Network.HTTP.Types.Status.status200
                   WaiLib.insertinfo3
                   WaiLib.responseEditor1
                   (GHC.Maybe.Nothing @ Network.Wai.Internal.FilePart)) -}
628334c9de9031cbecafabbcb0167704
  responseEditor1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.responseEditor2) -}
b25a8b6ba664d868bc3521b38969b520
  responseEditor2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("compileCode.html"#) -}
910170d9988ad95bf45ea7e9e318f4ba
  responseHaskellHtml ::
    GHC.Base.String -> Network.Wai.Internal.Response
  {- Arity: 1, Strictness: <L,1*U>m3, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Base.String) ->
                 case WaiLib.$wresponseHaskellHtml w of ww { (#,,#) ww1 ww2 ww3 ->
                 Network.Wai.Internal.ResponseStream ww1 ww2 ww3 }) -}
a008ea3ee3611682e9915ca09dda6f07
  responseHaskellHtml1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AronModule."#) -}
e8bfe26cf94cc4c20db1b2808d2975f8
  responseHaskellHtml2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/Users/cat/myfile/symbin/redis_query.hs "#) -}
84b42a2325540e019b00ae4530cc6cb3
  responseHaskellHtml_go :: [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
d2676b465137dcb58661743247e0a3b3
  responseHelp :: Network.Wai.Internal.Response
  {- Strictness: m1,
     Unfolding: (Network.Wai.Internal.ResponseFile
                   Network.HTTP.Types.Status.status200
                   WaiLib.insertinfo3
                   WaiLib.responseHelp1
                   (GHC.Maybe.Nothing @ Network.Wai.Internal.FilePart)) -}
6fd55f40cff107b796c48683d53937ff
  responseHelp1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.responseHelp2) -}
e06662fd4526853bdb4498bef2d54df2
  responseHelp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("help.html"#) -}
7cbb15e4827be53092cbfa721e9a0e41
  responseHtml :: GHC.IO.FilePath -> Network.Wai.Internal.Response
  {- Arity: 1, Strictness: <L,U>m1,
     Unfolding: InlineRule (1, True, False)
                (\ (fname :: GHC.IO.FilePath) ->
                 Network.Wai.Internal.ResponseFile
                   Network.HTTP.Types.Status.status200
                   WaiLib.responseHtml1
                   fname
                   (GHC.Maybe.Nothing @ Network.Wai.Internal.FilePart)) -}
a22701ca96117dc403e47fc9a2f33eea
  responseHtml1 :: [Network.HTTP.Types.Header.Header]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Header.Header
                   WaiLib.responseHtml2
                   (GHC.Types.[] @ Network.HTTP.Types.Header.Header)) -}
c3d4f649616386072f15596e444498ba
  responseHtml2 ::
    (Network.HTTP.Types.Header.HeaderName,
     Data.ByteString.Internal.ByteString)
  {- Strictness: m,
     Unfolding: ((Network.HTTP.Types.Header.hContentType,
                  WaiLib.insertinfo5)) -}
c8c58c81b5443a0b260fa480047ff48a
  responseJavaHtml ::
    GHC.Base.String -> Network.Wai.Internal.Response
  {- Arity: 1, Strictness: <L,1*U>m3, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Base.String) ->
                 case WaiLib.$wresponseJavaHtml w of ww { (#,,#) ww1 ww2 ww3 ->
                 Network.Wai.Internal.ResponseStream ww1 ww2 ww3 }) -}
c9f2330baea6418ef0920d16fd8ac67f
  responseJavascript ::
    GHC.IO.FilePath -> Network.Wai.Internal.Response
  {- Arity: 1, Strictness: <L,U>m1,
     Unfolding: InlineRule (1, True, False)
                (\ (fname :: GHC.IO.FilePath) ->
                 Network.Wai.Internal.ResponseFile
                   Network.HTTP.Types.Status.status200
                   WaiLib.responseJavascript1
                   fname
                   (GHC.Maybe.Nothing @ Network.Wai.Internal.FilePart)) -}
f613d41ca12ea52ad52371e4af475ece
  responseJavascript1 :: [Network.HTTP.Types.Header.Header]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Header.Header
                   WaiLib.responseJavascript2
                   (GHC.Types.[] @ Network.HTTP.Types.Header.Header)) -}
4cd9f6cbb071acd53dfb43fad8bbe4af
  responseJavascript2 ::
    (Network.HTTP.Types.Header.HeaderName,
     Data.ByteString.Internal.ByteString)
  {- Strictness: m,
     Unfolding: ((Network.HTTP.Types.Header.hContentType,
                  WaiLib.replyJS5)) -}
a4838c96024e6fc3742c73e9bde5233a
  responseNothing :: GHC.Base.String -> Network.Wai.Internal.Response
  {- Arity: 1, Strictness: <L,U>m3, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Base.String) ->
                 case WaiLib.$wresponseNothing w of ww { (#,,#) ww1 ww2 ww3 ->
                 Network.Wai.Internal.ResponseStream ww1 ww2 ww3 }) -}
9355109e517bb34437db212b4f55eeb9
  responseNothing1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("responseNothing : "#) -}
40b94f78270052ec458447d8610a08c7
  responseNothingBS ::
    Data.ByteString.Internal.ByteString
    -> Network.Wai.Internal.Response
  {- Arity: 1, Strictness: <L,U(U,U,U,U)>m3, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.ByteString.Internal.ByteString) ->
                 case WaiLib.$wresponseNothingBS w of ww { (#,,#) ww1 ww2 ww3 ->
                 Network.Wai.Internal.ResponseStream ww1 ww2 ww3 }) -}
2e23cbaa30fa33041a781a9d3cf0ed62
  responseNothingBS1 :: [Network.HTTP.Types.Header.Header]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Header.Header
                   WaiLib.responseNothingBS2
                   (GHC.Types.[] @ Network.HTTP.Types.Header.Header)) -}
10bce152cf132437c5e7a8f79f305947
  responseNothingBS2 ::
    (Network.HTTP.Types.Header.HeaderName,
     Data.ByteString.Internal.ByteString)
  {- Strictness: m,
     Unfolding: ((Network.HTTP.Types.Header.hContentType,
                  WaiLib.responseNothingBS3)) -}
51548315f8938fa70a91fd6a35bfb64a
  responseNothingBS3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds5 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        WaiLib.responseNothingBS_addr#
                        ipv of wild { (#,#) ds6 ds7 ->
                 Data.ByteString.Internal.PS
                   WaiLib.responseNothingBS_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds7) } }) -}
c635b52724fcc1ea6927f122c72eae9c
  responseNothingBS_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("application/json"#) -}
b5e0d8e628937a22a36747bf056a3d8b
  responseSnippet ::
    Database.SQLite.Simple.Internal.Connection
    -> GHC.Base.String
    -> GHC.IORef.IORef WaiLib.HMap
    -> Network.Wai.Internal.Response
  {- Arity: 3, Strictness: <L,U(U)><L,U><L,U(U)>m3, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Database.SQLite.Simple.Internal.Connection)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.IORef.IORef WaiLib.HMap) ->
                 case WaiLib.$wresponseSnippet w w1 w2 of ww { (#,,#) ww1 ww2 ww3 ->
                 Network.Wai.Internal.ResponseStream ww1 ww2 ww3 }) -}
c8a47be3829765155ed1ea2be8d17e1d
  responseSnippetTxt ::
    GHC.Base.String
    -> GHC.IORef.IORef WaiLib.HMap -> Network.Wai.Internal.Response
  {- Arity: 2, Strictness: <L,U><L,U(U)>m3, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Base.String) (w1 :: GHC.IORef.IORef WaiLib.HMap) ->
                 case WaiLib.$wresponseSnippetTxt w w1 of ww { (#,,#) ww1 ww2 ww3 ->
                 Network.Wai.Internal.ResponseStream ww1 ww2 ww3 }) -}
2f6661beb14383ae8a755e31c032dc9b
  responseXCmd :: GHC.Base.String -> Network.Wai.Internal.Response
  {- Arity: 1, Strictness: <L,1*U>m3, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Base.String) ->
                 case WaiLib.$wresponseXCmd w of ww { (#,,#) ww1 ww2 ww3 ->
                 Network.Wai.Internal.ResponseStream ww1 ww2 ww3 }) -}
46b1d2cd78a1ee1ac81d6403ea75d4e1
  runSh ::
    Data.Text.Internal.Text
    -> GHC.Types.IO
         (GHC.IO.Exception.ExitCode, Data.Text.Internal.Text,
          Data.Text.Internal.Text)
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x' :: Data.Text.Internal.Text) ->
                 Turtle.Prelude.shellStrictWithErr
                   @ GHC.Types.IO
                   Control.Monad.IO.Class.$fMonadIOIO
                   x'
                   (Turtle.Shell.$fAlternativeShell4 @ Turtle.Line.Line)
                     `cast`
                   (Sym (Turtle.Shell.N:Shell[0] <Turtle.Line.Line>_R))) -}
203b094a734ae267dd35e820c7a94e56
  sbChar :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: [[GHC.Base.String]]) ->
                 GHC.Base.build
                   @ [GHC.Base.String]
                   (\ @ b1
                      (c :: [GHC.Base.String] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Base.String]
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Base.String]
                         @ b1
                         @ [GHC.Base.String]
                         c
                         WaiLib.sbChar1)
                      n1
                      s)) -}
4960418655e8300de4ba6c596cc98fa5
  sbChar1 :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ GHC.Base.String
                   @ GHC.Base.String
                   WaiLib.sbChar2) -}
6c033c79bf871d7f6b9492b993ac528c
  sbChar2 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 WaiLib.styleChar
                   WaiLib.sbChar_l
                   WaiLib.bracketChar3
                   WaiLib.sbChar_a
                   WaiLib.sbChar_b
                   x) -}
190cc23b197cd3e0dfdb2a0c63d9af24
  sbChar3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<span style=\"color:#e012cd;\">"#) -}
3e212d12928c542d630b55ff12fa55f2
  sbChar_a :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '['#) -}
8a8ace70f895de4a1ee7e7ad465ba898
  sbChar_b :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# ']'#) -}
2c7af03125b3627e94f3724bb4476b31
  sbChar_l :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.sbChar3) -}
178bdd9f085927e3ea702cb385616092
  searchMap :: Network.Wai.Application
  {- Arity: 3,
     Strictness: <S(LLLLSLLLLLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,C(U(U,1*U(U,U,U,U))),A,A,A,A,A,A)><L,1*C1(C1(U(U,U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                WaiLib.searchMap1
                  `cast`
                (<Network.Wai.Internal.Request>_R
                 ->_R <Network.Wai.Internal.Response
                       -> GHC.Types.IO Network.Wai.Internal.ResponseReceived>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Network.Wai.Internal.ResponseReceived>_R)) -}
95bda19abad0a4fc15b1512dbd409b68
  searchMap1 ::
    Network.Wai.Internal.Request
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Network.Wai.Internal.ResponseReceived #)
  {- Arity: 3,
     Strictness: <S(LLLLSLLLLLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,C(U(U,1*U(U,U,U,U))),A,A,A,A,A,A)><L,1*C1(C1(U(U,U)))><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Network.Wai.Internal.Request)
                   (w1 :: Network.Wai.Internal.Response
                          -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Network.Wai.Internal.Request ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 WaiLib.$wsearchMap ww5 ww10 w1 w2 }) -}
90e84c61da392ab10d8b7f3e05fe1277
  searchMap10 :: GHC.Types.IO Network.Wai.Internal.ResponseReceived
  {- Strictness: x -}
9c74bf4c752a9ec3a8a6a39bf5ede748
  searchMap11 :: Network.Wai.Internal.Response
  {- Strictness: m2,
     Unfolding: (Network.Wai.Internal.ResponseBuilder
                   Network.HTTP.Types.Status.status400
                   WaiLib.searchMap15
                   WaiLib.searchMap12
                     `cast`
                   ((forall (r :: <*>_N).
                     <Data.ByteString.Builder.Internal.BuildStep r>_R
                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Data.ByteString.Builder.Internal.BuildSignal
                                      r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))) -}
e949030ce8ea93d4a58f51efaec9b63a
  searchMap12 ::
    Data.ByteString.Builder.Internal.BuildStep r
    -> Data.ByteString.Builder.Internal.BufferRange
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 3,
     Unfolding: (Network.Wai.responseLBS1 WaiLib.searchMap13) -}
3cbcdd20d5b88c4d04e49562700ec3ad
  searchMap13 :: Data.ByteString.Lazy.Internal.ByteString
  {- Unfolding: (Data.ByteString.Lazy.Internal.$wpackChunks1
                   32#
                   (GHC.CString.unpackCString# WaiLib.searchMap14)) -}
4d7d31de69f02f5fc8007648f17aba03
  searchMap14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("No post"#) -}
c9b252db97010c6d21d0b54161fd7d75
  searchMap15 :: [Network.HTTP.Types.Header.Header]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Header.Header
                   WaiLib.searchMap16
                   (GHC.Types.[] @ Network.HTTP.Types.Header.Header)) -}
6feba57889e1fad7f77946efc43107cf
  searchMap16 ::
    (Network.HTTP.Types.Header.HeaderName,
     Data.ByteString.Internal.ByteString)
  {- Strictness: m,
     Unfolding: ((WaiLib.insertinfo6, WaiLib.searchMap17)) -}
0b8a2562994c176771f73b991febf79d
  searchMap17 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds5 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        WaiLib.searchMap_addr#1
                        ipv of wild { (#,#) ds6 ds7 ->
                 Data.ByteString.Internal.PS
                   WaiLib.searchMap_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds7) } }) -}
87f1ef545e10d2793af6bb0424594363
  searchMap18 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds5 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        WaiLib.searchMap_addr#2
                        ipv of wild { (#,#) ds6 ds7 ->
                 Data.ByteString.Internal.PS
                   WaiLib.searchMap_addr#2
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds7) } }) -}
752ba7fbb002a624e87aca6b78e71abb
  searchMap2 ::
    Data.ByteString.Internal.ByteString
    -> Network.Wai.Parse.FileInfo ()
    -> GHC.Types.IO Data.ByteString.Internal.ByteString
    -> GHC.Types.IO Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><L,A><L,C(U(U,1*U(U,U,U,U)))>, Inline: [2],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: Data.ByteString.Internal.ByteString)
                   (w1 :: Network.Wai.Parse.FileInfo ())
                   (w2 :: GHC.Types.IO Data.ByteString.Internal.ByteString) ->
                 WaiLib.$wlvl1 w2)
                  `cast`
                (<Data.ByteString.Internal.ByteString>_R
                 ->_R <Network.Wai.Parse.FileInfo ()>_R
                 ->_R <GHC.Types.IO Data.ByteString.Internal.ByteString>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.ByteString.Lazy.Internal.ByteString>_R)) -}
57ccb9948d97efb8101659e2a5cc9488
  searchMap3 :: Network.Wai.Internal.Response
  {- Strictness: m2,
     Unfolding: (Network.Wai.Internal.ResponseBuilder
                   Network.HTTP.Types.Status.status200
                   WaiLib.searchMap7
                   WaiLib.searchMap4
                     `cast`
                   ((forall (r :: <*>_N).
                     <Data.ByteString.Builder.Internal.BuildStep r>_R
                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Data.ByteString.Builder.Internal.BuildSignal
                                      r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))) -}
32f8b4081eddd4a1f0f930b87d361954
  searchMap4 ::
    Data.ByteString.Builder.Internal.BuildStep r
    -> Data.ByteString.Builder.Internal.BufferRange
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 3,
     Unfolding: (Network.Wai.responseLBS1 WaiLib.searchMap5) -}
ce905ca9f2ab52b42577ecbb18c1bf8a
  searchMap5 :: Data.ByteString.Lazy.Internal.ByteString
  {- Unfolding: (Data.ByteString.Lazy.Internal.$wpackChunks1
                   32#
                   (GHC.CString.unpackCString# WaiLib.searchMap6)) -}
623f4f35ed537940ed63ccc0fc8eefd9
  searchMap6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Just post"#) -}
cea24eeec89db0209e7420ce1226fcce
  searchMap7 :: [Network.HTTP.Types.Header.Header]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Header.Header
                   WaiLib.searchMap8
                   (GHC.Types.[] @ Network.HTTP.Types.Header.Header)) -}
da8d83eb4ad49024e92126c295648c23
  searchMap8 ::
    (Network.HTTP.Types.Header.HeaderName,
     Data.ByteString.Internal.ByteString)
  {- Strictness: m,
     Unfolding: ((WaiLib.insertinfo6, WaiLib.searchMap9)) -}
01d973d181d2f14936413834ee931168
  searchMap9 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds5 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        WaiLib.searchMap_addr#
                        ipv of wild { (#,#) ds6 ds7 ->
                 Data.ByteString.Internal.PS
                   WaiLib.searchMap_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds7) } }) -}
716bfad50710a984437ec341ed11aebc
  searchMap_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("text/text"#) -}
a43f576662fbfe8509e363bb08b52140
  searchMap_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("text/plain; charset=utf-8"#) -}
b60fff9aa771f6c7a8508378fce07845
  searchMap_addr#2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("post"#) -}
984906f5d31b1fac5a138aa3e3a9fbb1
  searchUI :: Network.Wai.Internal.Response
  {- Strictness: m1,
     Unfolding: (Network.Wai.Internal.ResponseFile
                   Network.HTTP.Types.Status.status200
                   WaiLib.insertinfo3
                   WaiLib.searchUI1
                   (GHC.Maybe.Nothing @ Network.Wai.Internal.FilePart)) -}
4e94f358e9abda1e6820a0c2cbefc85b
  searchUI1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.searchUI2) -}
64538881d9c250d0e8d5336ed53e8533
  searchUI2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("searchUI.html"#) -}
d30c7ddaf291da90ca6cff80b24916b4
  snippetMap ::
    [([GHC.Base.String], [GHC.Base.String])]
    -> GHC.IORef.IORef WaiLib.HMap -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,1*U><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                WaiLib.snippetMap1
                  `cast`
                (<[([GHC.Base.String], [GHC.Base.String])]>_R
                 ->_R <GHC.IORef.IORef WaiLib.HMap>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
7f6c8f8eecec7af761b8f35560961ba8
  snippetMap1 ::
    [([GHC.Base.String], [GHC.Base.String])]
    -> GHC.IORef.IORef WaiLib.HMap
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U><S(S),1*U(U)><S,U>, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: [([GHC.Base.String], [GHC.Base.String])])
                   (w1 :: GHC.IORef.IORef WaiLib.HMap)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1
                        `cast`
                      (GHC.IORef.N:IORef[0] <WaiLib.HMap>_N) of ww { GHC.STRef.STRef ww1 ->
                 WaiLib.$wsnippetMap w ww1 w2 }) -}
e864aa32f89cdcb1bdf6901b464671a1
  snippetMap2 ::
    (GHC.Base.String, [GHC.Base.String])
    -> (GHC.Base.String, [GHC.Base.String]) -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,A)><S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: (GHC.Base.String, [GHC.Base.String]))
                   (y :: (GHC.Base.String, [GHC.Base.String]))[OneShot] ->
                 case x of wild { (,) x1 ds5 ->
                 case y of wild1 { (,) x2 ds6 ->
                 case GHC.Classes.$fOrd[]_$s$ccompare1 x1 x2 of wild2 {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True } } }) -}
185f3a9d5c3f441e16f942f4730ac843
  snippetMap3 ::
    (GHC.Base.String, [GHC.Base.String])
    -> (GHC.Base.String, [GHC.Base.String]) -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,A)><S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: (GHC.Base.String, [GHC.Base.String]))
                   (y :: (GHC.Base.String, [GHC.Base.String])) ->
                 case x of wild { (,) x1 ds5 ->
                 case y of wild1 { (,) x2 ds6 -> GHC.Base.eqString x1 x2 } }) -}
37acd440ef75127f20779394a73c8381
  snippetMap4 ::
    [(GHC.Base.String, [GHC.Base.String])]
    -> (GHC.Base.String, [[GHC.Base.String]])
  {- Arity: 1, Strictness: <L,1*U>m, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [(GHC.Base.String, [GHC.Base.String])]) ->
                 case WaiLib.$wlvl2 w of ww { (#,#) ww1 ww2 -> (ww1, ww2) }) -}
cb80c652ba41b585614699053790e5c9
  snippetMap_go ::
    [([GHC.Base.String], [GHC.Base.String])]
    -> [(GHC.Base.String, [GHC.Base.String])]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
2f41664fd3f3155a3a11057adbd34723
  snippetPath :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.snippetPath1) -}
53c26adf796568973e06bd43ae794c6c
  snippetPath1 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/Users/cat/myfile/bitbucket/snippets/snippet.hs"#) -}
a53b121d5d10727b1e22f0d151f94304
  spChar :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: [[GHC.Base.String]]) ->
                 GHC.Base.build
                   @ [GHC.Base.String]
                   (\ @ b1
                      (c :: [GHC.Base.String] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Base.String]
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Base.String]
                         @ b1
                         @ [GHC.Base.String]
                         c
                         WaiLib.spChar1)
                      n1
                      s)) -}
8d96b8fc35828118b6ad811a8e592465
  spChar1 :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ GHC.Base.String
                   @ GHC.Base.String
                   WaiLib.spChar2) -}
8441045ab35e26c4a799c15473cfcaed
  spChar2 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 WaiLib.styleChar
                   WaiLib.spChar_l
                   WaiLib.bracketChar3
                   WaiLib.spChar_a
                   WaiLib.spChar_b
                   x) -}
730117e18922f8e046511c4d6b8609b3
  spChar3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<span style=\"color:red;\">"#) -}
080b75201d602cca8ba73a99db9d52c9
  spChar_a :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '{'#) -}
55445762c01609a91b23a3c65a87effd
  spChar_b :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '}'#) -}
79d93624092c3191bcc6c146b5526da1
  spChar_l :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.spChar3) -}
d279ccb43aae9edd5f37871704477fbc
  spanBlock ::
    WaiLib.HMap
    -> GHC.Maybe.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.String
  {- Arity: 2, Strictness: <S,U><S,1*U>,
     Unfolding: (\ (hmap :: WaiLib.HMap)
                   (mKey :: GHC.Maybe.Maybe Data.ByteString.Internal.ByteString) ->
                 case mKey of wild {
                   GHC.Maybe.Nothing
                   -> case Data.Maybe.fromJust1 ret_ty [GHC.Types.Char] of {}
                   GHC.Maybe.Just x
                   -> case x of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                      case AronModule.$slookup#
                             @ [[GHC.Base.String]]
                             (Data.ByteString.Internal.$wunpackAppendCharsLazy
                                ww1
                                ww2
                                ww3
                                ww4
                                (GHC.Types.[] @ GHC.Types.Char))
                             hmap of ds5 {
                        (#_|#) ds6 -> WaiLib.spanBlock6
                        (#|_#) a
                        -> WaiLib.spanBlock_go
                             (WaiLib.foldListList_go
                                WaiLib.changeSymbol4
                                (GHC.List.zip
                                   @ [GHC.Base.String]
                                   @ [GHC.Base.String]
                                   (GHC.Base.map
                                      @ [GHC.Base.String]
                                      @ [[GHC.Types.Char]]
                                      WaiLib.spanBlock1
                                      a)
                                   a)) } } }) -}
0da01e9d3fdb534286e7fd3829282bcb
  spanBlock1 :: [GHC.Base.String] -> [[GHC.Types.Char]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [GHC.Base.String]) ->
                 WaiLib.cssHead1
                   (GHC.Base.map
                      @ [GHC.Types.Char]
                      @ [GHC.Types.Char]
                      WaiLib.spanBlock2
                      x)) -}
0b500579c85751c8d17454b45d0014c7
  spanBlock2 :: [GHC.Types.Char] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [GHC.Types.Char]) ->
                 WaiLib.styleChar
                   WaiLib.spChar_l
                   WaiLib.bracketChar3
                   WaiLib.spChar_a
                   WaiLib.spChar_b
                   (WaiLib.styleChar
                      WaiLib.bracketChar_l
                      WaiLib.bracketChar3
                      WaiLib.bracketChar_a
                      WaiLib.bracketChar_b
                      (WaiLib.styleChar
                         WaiLib.sbChar_l
                         WaiLib.bracketChar3
                         WaiLib.sbChar_a
                         WaiLib.sbChar_b
                         (Text.RE.TDFA.String.*=~/
                            (Text.RE.TDFA.String.*=~/
                               (Text.RE.TDFA.String.*=~/
                                  (Text.RE.TDFA.String.*=~/
                                     (Text.RE.TDFA.String.*=~/
                                        (Text.RE.TDFA.String.*=~/
                                           (Text.Regex.subRegex
                                              WaiLib.keyWord_r
                                              (Text.Regex.subRegex
                                                 WaiLib.keyWord1_r
                                                 (Text.Regex.subRegex
                                                    WaiLib.keyURL_r
                                                    (Text.Regex.subRegex
                                                       WaiLib.keyDash_r
                                                       (Text.RE.TDFA.String.*=~/
                                                          (Text.Regex.subRegex
                                                             WaiLib.htmlLess_r
                                                             (Text.Regex.subRegex
                                                                WaiLib.htmlGreater_r
                                                                x
                                                                WaiLib.htmlGreater3)
                                                             WaiLib.htmlLess3)
                                                          WaiLib.keyName3)
                                                       WaiLib.keyDash3)
                                                    WaiLib.keyURL3)
                                                 WaiLib.keyWord4)
                                              WaiLib.keyWord4)
                                           WaiLib.mysqlKeyWords3)
                                        WaiLib.javaCmdKeyWords3)
                                     WaiLib.javaKeyWords3)
                                  WaiLib.javaFunClass3)
                               WaiLib.javaClassName3)
                            WaiLib.spanBlock3)))) -}
a77811589d128398c908aa3fda4d2421
  spanBlock3 ::
    Text.RE.ZeInternals.Types.SearchReplace.SearchReplace
      Text.RE.ZeInternals.TDFA.RE GHC.Base.String
  {- Unfolding: (WaiLib.javaClassName6 WaiLib.spanBlock4) -}
03a47c43ad63687b28282a13969d3fc7
  spanBlock4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.spanBlock5) -}
e0fbd1f179b5926c526ad0f871042940
  spanBlock5 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("${adr}(\\<new\\>|::|\\<sizeof\\>):?///<span style=\"color:red;\">${adr}</span>"#) -}
1ae10ba0e28d5477c57475a11de8559e
  spanBlock6 :: [GHC.Types.Char]
  {- Unfolding: (WaiLib.spanBlock_go
                   (WaiLib.foldListList_go
                      WaiLib.changeSymbol4
                      (GHC.List.zip
                         @ [GHC.Base.String]
                         @ [GHC.Base.String]
                         (GHC.Base.map
                            @ [GHC.Base.String]
                            @ [[GHC.Types.Char]]
                            WaiLib.spanBlock1
                            WaiLib.spanBlock7)
                         WaiLib.spanBlock7))) -}
95585cdcf919ed8e82c95a8c98f24b00
  spanBlock7 :: [[GHC.Base.String]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Base.String]
                   WaiLib.spanBlock8
                   (GHC.Types.[] @ [GHC.Base.String])) -}
e784301c2d4f00361b50f4ee8626e3eb
  spanBlock8 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   WaiLib.spanBlockXX2
                   (GHC.Types.[] @ GHC.Base.String)) -}
869a1f6bd433a7cd16d2e7518ccad4c0
  spanBlockX ::
    ([[GHC.Base.String]] -> [[GHC.Base.String]])
    -> WaiLib.HMap
    -> GHC.Maybe.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.String
  {- Arity: 3, Strictness: <C(S),1*C1(U)><L,U><L,1*U>,
     Unfolding: (\ (f :: [[GHC.Base.String]] -> [[GHC.Base.String]])
                   (hmap :: WaiLib.HMap)
                   (mKey :: GHC.Maybe.Maybe Data.ByteString.Internal.ByteString) ->
                 let {
                   allBlock :: [[GHC.Base.String]]
                   = case mKey of wild {
                       GHC.Maybe.Nothing
                       -> case Data.Maybe.fromJust1 ret_ty [[GHC.Base.String]] of {}
                       GHC.Maybe.Just x
                       -> case x of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                          case AronModule.$slookup#
                                 @ [[GHC.Base.String]]
                                 (Data.ByteString.Internal.$wunpackAppendCharsLazy
                                    ww1
                                    ww2
                                    ww3
                                    ww4
                                    (GHC.Types.[] @ GHC.Types.Char))
                                 hmap of ds5 {
                            (#_|#) ds6 -> WaiLib.spanBlock7 (#|_#) a -> a } } }
                 } in
                 WaiLib.foldListList_go1
                   (WaiLib.foldListList_go
                      WaiLib.changeSymbol4
                      (GHC.List.zip
                         @ [GHC.Base.String]
                         @ [GHC.Base.String]
                         (f allBlock)
                         allBlock))) -}
1e1b69dd4d6d5a2d557d095d3068f32c
  spanBlockXX ::
    WaiLib.HMap
    -> GHC.Maybe.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.String
  {- Arity: 2, Strictness: <S,U><S,1*U>,
     Unfolding: (\ (hmap :: WaiLib.HMap)
                   (mKey :: GHC.Maybe.Maybe Data.ByteString.Internal.ByteString) ->
                 case mKey of wild {
                   GHC.Maybe.Nothing
                   -> case Data.Maybe.fromJust1 ret_ty GHC.Base.String of {}
                   GHC.Maybe.Just x
                   -> case x of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                      case AronModule.$slookup#
                             @ [[GHC.Base.String]]
                             (Data.ByteString.Internal.$wunpackAppendCharsLazy
                                ww1
                                ww2
                                ww3
                                ww4
                                (GHC.Types.[] @ GHC.Types.Char))
                             hmap of ds5 {
                        (#_|#) ds6 -> WaiLib.spanBlockXX1
                        (#|_#) a
                        -> WaiLib.spanBlockXX_go1 (WaiLib.spanBlockXX_go a) } } }) -}
e516fc78b0816b5fde88eaa27f40865b
  spanBlockXX1 :: [GHC.Types.Char]
  {- Unfolding: (WaiLib.spanBlockXX_go2
                   (GHC.Base.++_$s++
                      @ [GHC.Types.Char]
                      WaiLib.spanBlockXX4
                      WaiLib.spanBlockXX2
                      (GHC.Types.[] @ GHC.Base.String))) -}
158bcc42a75ee1b447382bab7ee62830
  spanBlockXX2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.spanBlockXX3) -}
f65f252348db11b7773342e2bfec0755
  spanBlockXX3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("span Block: nothing"#) -}
1c0e83b8bd5dc50da875c557cc67901c
  spanBlockXX4 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   WaiLib.spanBlockXX5
                   (GHC.Types.[] @ GHC.Base.String)) -}
10ff83067ce9faab60debbb57a2facf6
  spanBlockXX5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.spanBlockXX6) -}
fbf4007f225aab478cd1901b41449f01
  spanBlockXX6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\n"#) -}
08ebe562a86ed68ba6cde638fc690d7a
  spanBlockXX_go :: [[GHC.Base.String]] -> [GHC.Base.String]
  {- Arity: 1, Strictness: <S,1*U> -}
03e9e24ca562565430e3f28643817f3e
  spanBlockXX_go1 :: [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
137cab9bd56c31951d8bcc00dead5cd1
  spanBlockXX_go2 :: [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
c5e14c27576d1694e1a52f6fa596404b
  spanBlock_go :: [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U> -}
4fc74688986208d26f4a2016eb4a2cc9
  specialName :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: [[GHC.Base.String]]) ->
                 GHC.Base.build
                   @ [GHC.Base.String]
                   (\ @ b1
                      (c :: [GHC.Base.String] -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Base.String]
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Base.String]
                         @ b1
                         @ [GHC.Base.String]
                         c
                         WaiLib.specialName1)
                      n1
                      s)) -}
e8766fc77d043cc40719833724791ef1
  specialName1 :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ GHC.Base.String
                   @ GHC.Base.String
                   WaiLib.specialName2) -}
fda6a161c916280e65cb9bfb9fe213bc
  specialName2 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 Text.RE.TDFA.String.*=~/ x WaiLib.spanBlock3) -}
e30181b1da8479f58fa95ac9adbb0ffe
  styleChar ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Char
    -> GHC.Types.Char
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U(U)><L,U(U)><S,1*U>,
     Unfolding: (\ (l :: GHC.Base.String)
                   (r :: GHC.Base.String)
                   (a :: GHC.Types.Char)
                   (b :: GHC.Types.Char)
                   (s :: GHC.Base.String) ->
                 letrec {
                   go10 :: [GHC.Types.Char] -> [GHC.Types.Char]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds5 :: [GHC.Types.Char]) ->
                     case ds5 of wild {
                       [] -> GHC.Types.[] @ GHC.Types.Char
                       : y ys
                       -> case y of wild1 { GHC.Types.C# x ->
                          case a of wild2 { GHC.Types.C# y1 ->
                          case GHC.Prim.eqChar# x y1 of lwild {
                            DEFAULT
                            -> case b of wild3 { GHC.Types.C# y2 ->
                               case GHC.Prim.eqChar# x y2 of lwild1 {
                                 DEFAULT
                                 -> GHC.Base.++_$s++
                                      @ GHC.Types.Char
                                      (go10 ys)
                                      wild1
                                      (GHC.Types.[] @ GHC.Types.Char)
                                 1#
                                 -> GHC.Base.++
                                      @ GHC.Types.Char
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         l
                                         (GHC.Types.: @ GHC.Types.Char wild1 r))
                                      (go10 ys) } }
                            1#
                            -> GHC.Base.++
                                 @ GHC.Types.Char
                                 (GHC.Base.++
                                    @ GHC.Types.Char
                                    l
                                    (GHC.Types.: @ GHC.Types.Char wild1 r))
                                 (go10 ys) } } } }
                 } in
                 go10 s) -}
2a84f5ad79cdecc1bf115b8e6e5323e1
  transform :: [[GHC.Base.String]] -> [[GHC.Base.String]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [[GHC.Base.String]]) ->
                 GHC.Base.map
                   @ [GHC.Base.String]
                   @ [[GHC.Types.Char]]
                   WaiLib.spanBlock1
                   x) -}
c8c2820ebd3de64a906b5f8567e98ad6
  trimBothLBS ::
    Data.ByteString.Lazy.Internal.ByteString
    -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: Data.ByteString.Lazy.Internal.ByteString) ->
                 WaiLib.trimBothLBS_go3 (WaiLib.trimBothLBS_dropWhile' s)) -}
60b18d2b921d958478860cc38b4a2522
  trimBothLBS_dropWhile' ::
    Data.ByteString.Lazy.Internal.ByteString
    -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
55499a0e089292c7ba57ca2b0b5040ad
  trimBothLBS_go3 ::
    Data.ByteString.Lazy.Internal.ByteString
    -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 1, Strictness: <S,1*U> -}
27159844b2fc675794f9c9bac07adacb
  updateMap :: GHC.IORef.IORef WaiLib.HMap -> Network.Wai.Application
  {- Arity: 4,
     Strictness: <L,1*U(U)><S(LLLLSLLLLLLLLLLL),1*U(1*U(U,U,U,U),A,A,A,1*U,A,A,A,A,C(U(U,1*U(U,U,U,U))),A,A,A,A,A,A)><L,C(C1(U(U,U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                WaiLib.updateMap1
                  `cast`
                (<GHC.IORef.IORef WaiLib.HMap>_R
                 ->_R <Network.Wai.Internal.Request>_R
                 ->_R <Network.Wai.Internal.Response
                       -> GHC.Types.IO Network.Wai.Internal.ResponseReceived>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Network.Wai.Internal.ResponseReceived>_R)) -}
fe075c98a4984ba5c4b45497d46f2d36
  updateMap1 ::
    GHC.IORef.IORef WaiLib.HMap
    -> Network.Wai.Internal.Request
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Network.Wai.Internal.ResponseReceived #)
  {- Arity: 4,
     Strictness: <L,1*U(U)><S(LLLLSLLLLLLLLLLL),1*U(1*U(U,U,U,U),A,A,A,1*U,A,A,A,A,C(U(U,1*U(U,U,U,U))),A,A,A,A,A,A)><L,C(C1(U(U,U)))><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: GHC.IORef.IORef WaiLib.HMap)
                   (w1 :: Network.Wai.Internal.Request)
                   (w2 :: Network.Wai.Internal.Response
                          -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1 of ww { Network.Wai.Internal.Request ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 WaiLib.$wupdateMap w ww1 ww5 ww10 w2 w3 }) -}
5edaf663c3687ad65d01d93268b8954c
  updir :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.updir1) -}
328e6a142be597032e1848f57ca3feb7
  updir1 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/Users/cat/myfile/bitbucket/haskell_webapp/uploaddir/"#) -}
1bd74ec5a4706aa90d75be9df3e80d4f
  upload :: GHC.Base.String -> Network.Wai.Application
  {- Arity: 4,
     Strictness: <L,1*U><S(LLLLSLLLLLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,C(U(U,1*U(U,U,U,U))),A,A,A,A,A,A)><L,1*C1(C1(U(U,U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                WaiLib.upload1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <Network.Wai.Internal.Request>_R
                 ->_R <Network.Wai.Internal.Response
                       -> GHC.Types.IO Network.Wai.Internal.ResponseReceived>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Network.Wai.Internal.ResponseReceived>_R)) -}
40155d21bf0879decbce34c06e5f5db9
  upload1 ::
    GHC.Base.String
    -> Network.Wai.Internal.Request
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Network.Wai.Internal.ResponseReceived #)
  {- Arity: 4,
     Strictness: <L,1*U><S(LLLLSLLLLLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,C(U(U,1*U(U,U,U,U))),A,A,A,A,A,A)><L,1*C1(C1(U(U,U)))><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: GHC.Base.String)
                   (w1 :: Network.Wai.Internal.Request)
                   (w2 :: Network.Wai.Internal.Response
                          -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1 of ww { Network.Wai.Internal.Request ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 WaiLib.$wupload w ww5 ww10 w2 w3 }) -}
f0677ed0aa542e3160b4c268c7711d81
  upload2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.upload3) -}
8db68571f18411b7fd21d159123d9916
  upload3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/tmp/f1.x"#) -}
1cde391d447f104dc5a40dbb18076cf7
  upload4 :: Network.Wai.Internal.Response
  {- Strictness: m2,
     Unfolding: (Network.Wai.Internal.ResponseBuilder
                   Network.HTTP.Types.Status.status400
                   WaiLib.searchMap15
                   WaiLib.upload5
                     `cast`
                   ((forall (r :: <*>_N).
                     <Data.ByteString.Builder.Internal.BuildStep r>_R
                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Data.ByteString.Builder.Internal.BuildSignal
                                      r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))) -}
9d5a359e5396b524de29d8c02750255a
  upload5 ::
    Data.ByteString.Builder.Internal.BuildStep r
    -> Data.ByteString.Builder.Internal.BufferRange
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 3,
     Unfolding: (Network.Wai.responseLBS1 WaiLib.upload6) -}
95fb0ba183f88d575cff11525c389aaf
  upload6 :: Data.ByteString.Lazy.Internal.ByteString
  {- Unfolding: (Data.ByteString.Lazy.Internal.$wpackChunks1
                   32#
                   (GHC.CString.unpackCString# WaiLib.upload7)) -}
1deb11c090e56e119c52f118e53c0960
  upload7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("No file parameter found"#) -}
a235a5814e963a24c0df31a56b835eae
  upload8 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds5 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        WaiLib.upload_addr#
                        ipv of wild { (#,#) ds6 ds7 ->
                 Data.ByteString.Internal.PS
                   WaiLib.upload_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds7) } }) -}
d97859b7fef39938459236029bcfc0fd
  uploadPage :: Network.Wai.Internal.Response
  {- Strictness: m1,
     Unfolding: (Network.Wai.Internal.ResponseFile
                   Network.HTTP.Types.Status.status200
                   WaiLib.insertinfo3
                   WaiLib.uploadPage1
                   (GHC.Maybe.Nothing @ Network.Wai.Internal.FilePart)) -}
984cc597f629216c3d3399581f35813d
  uploadPage1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.uploadPage2) -}
b5bcad4be2a8d2c38d8505459a523359
  uploadPage2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("uploadPage.html"#) -}
c7ecbad4c927c0492aeeb9690a3ac220
  upload_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("file"#) -}
6b9231c48de476c3c05bda674e5562ad
  wapp :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString# WaiLib.wapp1) -}
d10e232798e34fa697e08d862ec504fa
  wapp1 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/Users/cat/myfile/bitbucket/haskell_webapp"#) -}
b1a998a2d02797782a2c6c1ccf0bb4db
  withoutClient :: WaiLib.ClientId -> WaiLib.State -> WaiLib.State
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(U)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (clientId :: WaiLib.ClientId)
                   (eta :: [(WaiLib.ClientId,
                             Network.WebSockets.Connection.Connection)]) ->
                 GHC.Base.build
                   @ (WaiLib.ClientId, Network.WebSockets.Connection.Connection)
                   (\ @ b
                      (c :: (WaiLib.ClientId, Network.WebSockets.Connection.Connection)
                            -> b -> b)[OneShot]
                      (n1 :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ (WaiLib.ClientId, Network.WebSockets.Connection.Connection)
                      @ b
                      (GHC.List.filterFB
                         @ (WaiLib.ClientId, Network.WebSockets.Connection.Connection)
                         @ b
                         c
                         (\ (x :: (WaiLib.ClientId,
                                   Network.WebSockets.Connection.Connection)) ->
                          case x of wild { (,) x1 ds5 -> GHC.Classes.neInt clientId x1 }))
                      n1
                      eta)) -}
7817205fc9cd3951f9d958ef76d346a5
  wordcountReply :: Network.Wai.Internal.Response
  {- Strictness: m1,
     Unfolding: (Network.Wai.Internal.ResponseFile
                   Network.HTTP.Types.Status.status200
                   WaiLib.insertinfo3
                   WaiLib.wordcountReply1
                   (GHC.Maybe.Nothing @ Network.Wai.Internal.FilePart)) -}
649ac30e54c2300c302bf1ac04df8da1
  wordcountReply1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   WaiLib.wordcountReply2) -}
a6a52ac5ad45e5b40796a898e0811751
  wordcountReply2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("wordcountReply.html"#) -}
6c0d9fc3306335e4cda7ef9cca38812c
  wsApp ::
    GHC.MVar.MVar WaiLib.State -> Network.WebSockets.Server.ServerApp
  {- Arity: 3,
     Strictness: <L,1*U(U)><S(S(SSSSS)S(SSL)SS(LC(C(S(SL)))L)),1*U(U(U,U,U,U,U),U(U,U,U),C(C1(U(U,A))),U(C(U(U,1*U)),C(C1(U(U,U))),U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                WaiLib.wsApp1
                  `cast`
                (<GHC.MVar.MVar WaiLib.State>_R
                 ->_R <Network.WebSockets.Connection.PendingConnection>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
d783ed37417c30c30d6760021d58548f
  wsApp1 ::
    GHC.MVar.MVar WaiLib.State
    -> Network.WebSockets.Connection.PendingConnection
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Strictness: <L,1*U(U)><S(S(SSSSS)S(SSL)SS(LC(C(S(SL)))L)),1*U(U(U,U,U,U,U),U(U,U,U),C(C1(U(U,A))),U(C(U(U,1*U)),C(C1(U(U,U))),U))><S,U> -}
0155e23b33d4c526d650e799f1dc91dc
  (âˆ˜) :: [a] -> [a] -> [a]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (0, True, True) GHC.Base.++ -}
instance GHC.Classes.Eq [WaiLib.Person] = WaiLib.$fEqPerson
instance GHC.Classes.Eq [WaiLib.UserInput] = WaiLib.$fEqUserInput
instance Data.Aeson.Types.FromJSON.FromJSON [WaiLib.Block]
  = WaiLib.$fFromJSONBlock
instance Data.Aeson.Types.FromJSON.FromJSON [WaiLib.CompileCode]
  = WaiLib.$fFromJSONCompileCode
instance Data.Aeson.Types.FromJSON.FromJSON [WaiLib.GeneMatrix]
  = WaiLib.$fFromJSONGeneMatrix
instance Data.Aeson.Types.FromJSON.FromJSON [WaiLib.MBlock]
  = WaiLib.$fFromJSONMBlock
instance Data.Aeson.Types.FromJSON.FromJSON [WaiLib.MatInt]
  = WaiLib.$fFromJSONMatInt
instance Data.Aeson.Types.FromJSON.FromJSON [WaiLib.ReplyCode]
  = WaiLib.$fFromJSONReplyCode
instance Database.SQLite.Simple.FromRow.FromRow [WaiLib.Person]
  = WaiLib.$fFromRowPerson
instance Database.SQLite.Simple.FromRow.FromRow [WaiLib.UserInput]
  = WaiLib.$fFromRowUserInput
instance GHC.Generics.Generic [WaiLib.Block]
  = WaiLib.$fGenericBlock
instance GHC.Generics.Generic [WaiLib.CompileCode]
  = WaiLib.$fGenericCompileCode
instance GHC.Generics.Generic [WaiLib.GeneMatrix]
  = WaiLib.$fGenericGeneMatrix
instance GHC.Generics.Generic [WaiLib.MBlock]
  = WaiLib.$fGenericMBlock
instance GHC.Generics.Generic [WaiLib.MatInt]
  = WaiLib.$fGenericMatInt
instance GHC.Generics.Generic [WaiLib.ReplyCode]
  = WaiLib.$fGenericReplyCode
instance GHC.Read.Read [WaiLib.Person] = WaiLib.$fReadPerson
instance GHC.Read.Read [WaiLib.UserInput] = WaiLib.$fReadUserInput
instance GHC.Show.Show [WaiLib.Block] = WaiLib.$fShowBlock
instance GHC.Show.Show [WaiLib.CompileCode]
  = WaiLib.$fShowCompileCode
instance GHC.Show.Show [WaiLib.GeneMatrix]
  = WaiLib.$fShowGeneMatrix
instance GHC.Show.Show [WaiLib.MBlock] = WaiLib.$fShowMBlock
instance GHC.Show.Show [WaiLib.MatInt] = WaiLib.$fShowMatInt
instance GHC.Show.Show [WaiLib.Person] = WaiLib.$fShowPerson
instance GHC.Show.Show [WaiLib.ReplyCode] = WaiLib.$fShowReplyCode
instance GHC.Show.Show [WaiLib.UserInput] = WaiLib.$fShowUserInput
instance Data.Aeson.Types.ToJSON.ToJSON [WaiLib.Block]
  = WaiLib.$fToJSONBlock
instance Data.Aeson.Types.ToJSON.ToJSON [WaiLib.CompileCode]
  = WaiLib.$fToJSONCompileCode
instance Data.Aeson.Types.ToJSON.ToJSON [WaiLib.GeneMatrix]
  = WaiLib.$fToJSONGeneMatrix
instance Data.Aeson.Types.ToJSON.ToJSON [WaiLib.MBlock]
  = WaiLib.$fToJSONMBlock
instance Data.Aeson.Types.ToJSON.ToJSON [WaiLib.MatInt]
  = WaiLib.$fToJSONMatInt
instance Data.Aeson.Types.ToJSON.ToJSON [WaiLib.ReplyCode]
  = WaiLib.$fToJSONReplyCode
instance Database.SQLite.Simple.ToRow.ToRow [WaiLib.Person]
  = WaiLib.$fToRowPerson
instance Database.SQLite.Simple.ToRow.ToRow [WaiLib.UserInput]
  = WaiLib.$fToRowUserInput
family instance GHC.Generics.Rep [WaiLib.MatInt]
  = WaiLib.Rep_MatInt
family instance GHC.Generics.Rep [WaiLib.CompileCode]
  = WaiLib.Rep_CompileCode
family instance GHC.Generics.Rep [WaiLib.ReplyCode]
  = WaiLib.Rep_ReplyCode
family instance GHC.Generics.Rep [WaiLib.GeneMatrix]
  = WaiLib.Rep_GeneMatrix
family instance GHC.Generics.Rep [WaiLib.MBlock]
  = WaiLib.Rep_MBlock
family instance GHC.Generics.Rep [WaiLib.Block] = WaiLib.Rep_Block
"SPEC/WaiLib $fFromJSON[] @ Integer" [orphan] forall (v :: Data.Aeson.Types.FromJSON.FromJSON
                                                             GHC.Integer.Type.Integer)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ GHC.Integer.Type.Integer v
  = WaiLib.$fFromJSONMBlock_$s$fFromJSON[]
"SPEC/WaiLib $fFromJSON[] @ Text" [orphan] forall (v :: Data.Aeson.Types.FromJSON.FromJSON
                                                          Data.Text.Internal.Lazy.Text)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ Data.Text.Internal.Lazy.Text
                                         v
  = WaiLib.$fFromJSONBlock_$s$fFromJSON[]
"SPEC/WaiLib $fSelectorMetaMetaSel @ ('Just
                                       "bblock") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                           (v2 :: GHC.Generics.SingI
                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                           (v1 :: GHC.Generics.SingI
                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                           (v :: GHC.Generics.SingI
                                                                                                                                                                                   ('GHC.Maybe.Just
                                                                                                                                                                                      "bblock"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Maybe.Just "bblock")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = WaiLib.$fFromJSONBlock_$s$fSelectorMetaMetaSel
"SPEC/WaiLib $fSelectorMetaMetaSel @ ('Just
                                       "cmd") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                                                                                        (v2 :: GHC.Generics.SingI
                                                                                                                                                                                 'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                        (v1 :: GHC.Generics.SingI
                                                                                                                                                                                 'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                        (v :: GHC.Generics.SingI
                                                                                                                                                                                ('GHC.Maybe.Just
                                                                                                                                                                                   "cmd"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Maybe.Just "cmd")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = WaiLib.$fFromJSONGeneMatrix_$s$fSelectorMetaMetaSel2
"SPEC/WaiLib $fSelectorMetaMetaSel @ ('Just
                                       "code") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                         (v2 :: GHC.Generics.SingI
                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                         (v1 :: GHC.Generics.SingI
                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                         (v :: GHC.Generics.SingI
                                                                                                                                                                                 ('GHC.Maybe.Just
                                                                                                                                                                                    "code"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Maybe.Just "code")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = WaiLib.$fFromJSONCompileCode_$s$fSelectorMetaMetaSel
"SPEC/WaiLib $fSelectorMetaMetaSel @ ('Just
                                       "compiler") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                                                             (v2 :: GHC.Generics.SingI
                                                                                                                                                                                      'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                             (v1 :: GHC.Generics.SingI
                                                                                                                                                                                      'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                             (v :: GHC.Generics.SingI
                                                                                                                                                                                     ('GHC.Maybe.Just
                                                                                                                                                                                        "compiler"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Maybe.Just "compiler")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = WaiLib.$fFromJSONCompileCode_$s$fSelectorMetaMetaSel2
"SPEC/WaiLib $fSelectorMetaMetaSel @ ('Just
                                       "matrix") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                           (v2 :: GHC.Generics.SingI
                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                           (v1 :: GHC.Generics.SingI
                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                           (v :: GHC.Generics.SingI
                                                                                                                                                                                   ('GHC.Maybe.Just
                                                                                                                                                                                      "matrix"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Maybe.Just "matrix")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = WaiLib.$fFromJSONMatInt_$s$fSelectorMetaMetaSel
"SPEC/WaiLib $fSelectorMetaMetaSel @ ('Just
                                       "mblock") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                           (v2 :: GHC.Generics.SingI
                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                           (v1 :: GHC.Generics.SingI
                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                           (v :: GHC.Generics.SingI
                                                                                                                                                                                   ('GHC.Maybe.Just
                                                                                                                                                                                      "mblock"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Maybe.Just "mblock")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = WaiLib.$fFromJSONMBlock_$s$fSelectorMetaMetaSel
"SPEC/WaiLib $fSelectorMetaMetaSel @ ('Just
                                       "name") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                         (v2 :: GHC.Generics.SingI
                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                         (v1 :: GHC.Generics.SingI
                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                         (v :: GHC.Generics.SingI
                                                                                                                                                                                 ('GHC.Maybe.Just
                                                                                                                                                                                    "name"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Maybe.Just "name")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = WaiLib.$fFromJSONMatInt_$s$fSelectorMetaMetaSel1
"SPEC/WaiLib $fSelectorMetaMetaSel @ ('Just
                                       "ncol") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                         (v2 :: GHC.Generics.SingI
                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                         (v1 :: GHC.Generics.SingI
                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                         (v :: GHC.Generics.SingI
                                                                                                                                                                                 ('GHC.Maybe.Just
                                                                                                                                                                                    "ncol"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Maybe.Just "ncol")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = WaiLib.$fFromJSONGeneMatrix_$s$fSelectorMetaMetaSel1
"SPEC/WaiLib $fSelectorMetaMetaSel @ ('Just
                                       "nrow") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                         (v2 :: GHC.Generics.SingI
                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                         (v1 :: GHC.Generics.SingI
                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                         (v :: GHC.Generics.SingI
                                                                                                                                                                                 ('GHC.Maybe.Just
                                                                                                                                                                                    "nrow"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Maybe.Just "nrow")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = WaiLib.$fFromJSONGeneMatrix_$s$fSelectorMetaMetaSel
"SPEC/WaiLib $fSelectorMetaMetaSel @ ('Just
                                       "option") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                           (v2 :: GHC.Generics.SingI
                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                           (v1 :: GHC.Generics.SingI
                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                           (v :: GHC.Generics.SingI
                                                                                                                                                                                   ('GHC.Maybe.Just
                                                                                                                                                                                      "option"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Maybe.Just "option")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = WaiLib.$fFromJSONCompileCode_$s$fSelectorMetaMetaSel1
"SPEC/WaiLib $fSelectorMetaMetaSel @ ('Just
                                       "rcmd") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                         (v2 :: GHC.Generics.SingI
                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                         (v1 :: GHC.Generics.SingI
                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                         (v :: GHC.Generics.SingI
                                                                                                                                                                                 ('GHC.Maybe.Just
                                                                                                                                                                                    "rcmd"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Maybe.Just "rcmd")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = WaiLib.$fFromJSONReplyCode_$s$fSelectorMetaMetaSel2
"SPEC/WaiLib $fSelectorMetaMetaSel @ ('Just
                                       "rerror") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                           (v2 :: GHC.Generics.SingI
                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                           (v1 :: GHC.Generics.SingI
                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                           (v :: GHC.Generics.SingI
                                                                                                                                                                                   ('GHC.Maybe.Just
                                                                                                                                                                                      "rerror"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Maybe.Just "rerror")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = WaiLib.$fFromJSONReplyCode_$s$fSelectorMetaMetaSel1
"SPEC/WaiLib $fSelectorMetaMetaSel @ ('Just
                                       "stdout") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                           (v2 :: GHC.Generics.SingI
                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                           (v1 :: GHC.Generics.SingI
                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                           (v :: GHC.Generics.SingI
                                                                                                                                                                                   ('GHC.Maybe.Just
                                                                                                                                                                                      "stdout"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Maybe.Just "stdout")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = WaiLib.$fFromJSONReplyCode_$s$fSelectorMetaMetaSel
"SPEC/WaiLib fromList @ [String]" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                              [GHC.Base.String])
  Data.Set.Internal.fromList @ [GHC.Base.String] $dOrd
  = WaiLib.$sfromList
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

